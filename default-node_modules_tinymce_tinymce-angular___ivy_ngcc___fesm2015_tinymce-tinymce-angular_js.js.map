{"version":3,"file":"default-node_modules_tinymce_tinymce-angular___ivy_ngcc___fesm2015_tinymce-tinymce-angular_js.js","mappings":"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CA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8FAA8F,eAAe;AAC7G,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA+B,yDAAc;AAC7C;AACA,aAAa,6DAAiB;AAC9B,iBAAiB,yDAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,gBAAgB,gBAAgB;AACtF;AACA;AACA;AACA;AACA,YAAY,kEAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,iBAAiB;AACnE,qEAAqE,QAAQ;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,gBAAgB;AACxE;AACA;AACA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","sources":["./node_modules/@tinymce/tinymce-angular/__ivy_ngcc__/fesm2015/tinymce-tinymce-angular.js"],"sourcesContent":["import { EventEmitter, Output, InjectionToken, forwardRef, Component, ElementRef, NgZone, Inject, PLATFORM_ID, Optional, Input, NgModule } from '@angular/core';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\n\n/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nimport * as ɵngcc0 from '@angular/core';\n\nfunction EditorComponent_ng_template_0_Template(rf, ctx) { }\nconst getTinymce = () => {\n    const w = typeof window !== 'undefined' ? window : undefined;\n    return w && w.tinymce ? w.tinymce : null;\n};\nconst ɵ0$2 = getTinymce;\n\nclass Events {\n    constructor() {\n        this.onBeforePaste = new EventEmitter();\n        this.onBlur = new EventEmitter();\n        this.onClick = new EventEmitter();\n        this.onContextMenu = new EventEmitter();\n        this.onCopy = new EventEmitter();\n        this.onCut = new EventEmitter();\n        this.onDblclick = new EventEmitter();\n        this.onDrag = new EventEmitter();\n        this.onDragDrop = new EventEmitter();\n        this.onDragEnd = new EventEmitter();\n        this.onDragGesture = new EventEmitter();\n        this.onDragOver = new EventEmitter();\n        this.onDrop = new EventEmitter();\n        this.onFocus = new EventEmitter();\n        this.onFocusIn = new EventEmitter();\n        this.onFocusOut = new EventEmitter();\n        this.onKeyDown = new EventEmitter();\n        this.onKeyPress = new EventEmitter();\n        this.onKeyUp = new EventEmitter();\n        this.onMouseDown = new EventEmitter();\n        this.onMouseEnter = new EventEmitter();\n        this.onMouseLeave = new EventEmitter();\n        this.onMouseMove = new EventEmitter();\n        this.onMouseOut = new EventEmitter();\n        this.onMouseOver = new EventEmitter();\n        this.onMouseUp = new EventEmitter();\n        this.onPaste = new EventEmitter();\n        this.onSelectionChange = new EventEmitter();\n        this.onActivate = new EventEmitter();\n        this.onAddUndo = new EventEmitter();\n        this.onBeforeAddUndo = new EventEmitter();\n        this.onBeforeExecCommand = new EventEmitter();\n        this.onBeforeGetContent = new EventEmitter();\n        this.onBeforeRenderUI = new EventEmitter();\n        this.onBeforeSetContent = new EventEmitter();\n        this.onChange = new EventEmitter();\n        this.onClearUndos = new EventEmitter();\n        this.onDeactivate = new EventEmitter();\n        this.onDirty = new EventEmitter();\n        this.onExecCommand = new EventEmitter();\n        this.onGetContent = new EventEmitter();\n        this.onHide = new EventEmitter();\n        this.onInit = new EventEmitter();\n        this.onInitNgModel = new EventEmitter();\n        this.onLoadContent = new EventEmitter();\n        this.onNodeChange = new EventEmitter();\n        this.onPostProcess = new EventEmitter();\n        this.onPostRender = new EventEmitter();\n        this.onPreInit = new EventEmitter();\n        this.onPreProcess = new EventEmitter();\n        this.onProgressState = new EventEmitter();\n        this.onRedo = new EventEmitter();\n        this.onRemove = new EventEmitter();\n        this.onReset = new EventEmitter();\n        this.onResizeEditor = new EventEmitter();\n        this.onSaveContent = new EventEmitter();\n        this.onSetAttrib = new EventEmitter();\n        this.onObjectResizeStart = new EventEmitter();\n        this.onObjectResized = new EventEmitter();\n        this.onObjectSelected = new EventEmitter();\n        this.onSetContent = new EventEmitter();\n        this.onShow = new EventEmitter();\n        this.onSubmit = new EventEmitter();\n        this.onUndo = new EventEmitter();\n        this.onVisualAid = new EventEmitter();\n    }\n}\nEvents.ɵfac = function Events_Factory(t) { return new (t || Events)(); };\nEvents.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: Events, outputs: { onBeforePaste: \"onBeforePaste\", onBlur: \"onBlur\", onClick: \"onClick\", onContextMenu: \"onContextMenu\", onCopy: \"onCopy\", onCut: \"onCut\", onDblclick: \"onDblclick\", onDrag: \"onDrag\", onDragDrop: \"onDragDrop\", onDragEnd: \"onDragEnd\", onDragGesture: \"onDragGesture\", onDragOver: \"onDragOver\", onDrop: \"onDrop\", onFocus: \"onFocus\", onFocusIn: \"onFocusIn\", onFocusOut: \"onFocusOut\", onKeyDown: \"onKeyDown\", onKeyPress: \"onKeyPress\", onKeyUp: \"onKeyUp\", onMouseDown: \"onMouseDown\", onMouseEnter: \"onMouseEnter\", onMouseLeave: \"onMouseLeave\", onMouseMove: \"onMouseMove\", onMouseOut: \"onMouseOut\", onMouseOver: \"onMouseOver\", onMouseUp: \"onMouseUp\", onPaste: \"onPaste\", onSelectionChange: \"onSelectionChange\", onActivate: \"onActivate\", onAddUndo: \"onAddUndo\", onBeforeAddUndo: \"onBeforeAddUndo\", onBeforeExecCommand: \"onBeforeExecCommand\", onBeforeGetContent: \"onBeforeGetContent\", onBeforeRenderUI: \"onBeforeRenderUI\", onBeforeSetContent: \"onBeforeSetContent\", onChange: \"onChange\", onClearUndos: \"onClearUndos\", onDeactivate: \"onDeactivate\", onDirty: \"onDirty\", onExecCommand: \"onExecCommand\", onGetContent: \"onGetContent\", onHide: \"onHide\", onInit: \"onInit\", onInitNgModel: \"onInitNgModel\", onLoadContent: \"onLoadContent\", onNodeChange: \"onNodeChange\", onPostProcess: \"onPostProcess\", onPostRender: \"onPostRender\", onPreInit: \"onPreInit\", onPreProcess: \"onPreProcess\", onProgressState: \"onProgressState\", onRedo: \"onRedo\", onRemove: \"onRemove\", onReset: \"onReset\", onResizeEditor: \"onResizeEditor\", onSaveContent: \"onSaveContent\", onSetAttrib: \"onSetAttrib\", onObjectResizeStart: \"onObjectResizeStart\", onObjectResized: \"onObjectResized\", onObjectSelected: \"onObjectSelected\", onSetContent: \"onSetContent\", onShow: \"onShow\", onSubmit: \"onSubmit\", onUndo: \"onUndo\", onVisualAid: \"onVisualAid\" } });\nEvents.propDecorators = {\n    onBeforePaste: [{ type: Output }],\n    onBlur: [{ type: Output }],\n    onClick: [{ type: Output }],\n    onContextMenu: [{ type: Output }],\n    onCopy: [{ type: Output }],\n    onCut: [{ type: Output }],\n    onDblclick: [{ type: Output }],\n    onDrag: [{ type: Output }],\n    onDragDrop: [{ type: Output }],\n    onDragEnd: [{ type: Output }],\n    onDragGesture: [{ type: Output }],\n    onDragOver: [{ type: Output }],\n    onDrop: [{ type: Output }],\n    onFocus: [{ type: Output }],\n    onFocusIn: [{ type: Output }],\n    onFocusOut: [{ type: Output }],\n    onKeyDown: [{ type: Output }],\n    onKeyPress: [{ type: Output }],\n    onKeyUp: [{ type: Output }],\n    onMouseDown: [{ type: Output }],\n    onMouseEnter: [{ type: Output }],\n    onMouseLeave: [{ type: Output }],\n    onMouseMove: [{ type: Output }],\n    onMouseOut: [{ type: Output }],\n    onMouseOver: [{ type: Output }],\n    onMouseUp: [{ type: Output }],\n    onPaste: [{ type: Output }],\n    onSelectionChange: [{ type: Output }],\n    onActivate: [{ type: Output }],\n    onAddUndo: [{ type: Output }],\n    onBeforeAddUndo: [{ type: Output }],\n    onBeforeExecCommand: [{ type: Output }],\n    onBeforeGetContent: [{ type: Output }],\n    onBeforeRenderUI: [{ type: Output }],\n    onBeforeSetContent: [{ type: Output }],\n    onChange: [{ type: Output }],\n    onClearUndos: [{ type: Output }],\n    onDeactivate: [{ type: Output }],\n    onDirty: [{ type: Output }],\n    onExecCommand: [{ type: Output }],\n    onGetContent: [{ type: Output }],\n    onHide: [{ type: Output }],\n    onInit: [{ type: Output }],\n    onInitNgModel: [{ type: Output }],\n    onLoadContent: [{ type: Output }],\n    onNodeChange: [{ type: Output }],\n    onPostProcess: [{ type: Output }],\n    onPostRender: [{ type: Output }],\n    onPreInit: [{ type: Output }],\n    onPreProcess: [{ type: Output }],\n    onProgressState: [{ type: Output }],\n    onRedo: [{ type: Output }],\n    onRemove: [{ type: Output }],\n    onReset: [{ type: Output }],\n    onResizeEditor: [{ type: Output }],\n    onSaveContent: [{ type: Output }],\n    onSetAttrib: [{ type: Output }],\n    onObjectResizeStart: [{ type: Output }],\n    onObjectResized: [{ type: Output }],\n    onObjectSelected: [{ type: Output }],\n    onSetContent: [{ type: Output }],\n    onShow: [{ type: Output }],\n    onSubmit: [{ type: Output }],\n    onUndo: [{ type: Output }],\n    onVisualAid: [{ type: Output }]\n};\n\nconst validEvents = [\n    'onActivate',\n    'onAddUndo',\n    'onBeforeAddUndo',\n    'onBeforeExecCommand',\n    'onBeforeGetContent',\n    'onBeforeRenderUI',\n    'onBeforeSetContent',\n    'onBeforePaste',\n    'onBlur',\n    'onChange',\n    'onClearUndos',\n    'onClick',\n    'onContextMenu',\n    'onCopy',\n    'onCut',\n    'onDblclick',\n    'onDeactivate',\n    'onDirty',\n    'onDrag',\n    'onDragDrop',\n    'onDragEnd',\n    'onDragGesture',\n    'onDragOver',\n    'onDrop',\n    'onExecCommand',\n    'onFocus',\n    'onFocusIn',\n    'onFocusOut',\n    'onGetContent',\n    'onHide',\n    'onInit',\n    'onKeyDown',\n    'onKeyPress',\n    'onKeyUp',\n    'onLoadContent',\n    'onMouseDown',\n    'onMouseEnter',\n    'onMouseLeave',\n    'onMouseMove',\n    'onMouseOut',\n    'onMouseOver',\n    'onMouseUp',\n    'onNodeChange',\n    'onObjectResizeStart',\n    'onObjectResized',\n    'onObjectSelected',\n    'onPaste',\n    'onPostProcess',\n    'onPostRender',\n    'onPreProcess',\n    'onProgressState',\n    'onRedo',\n    'onRemove',\n    'onReset',\n    'onResizeEditor',\n    'onSaveContent',\n    'onSelectionChange',\n    'onSetAttrib',\n    'onSetContent',\n    'onShow',\n    'onSubmit',\n    'onUndo',\n    'onVisualAid'\n];\n\n/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nconst bindHandlers = (ctx, editor) => {\n    const allowedEvents = getValidEvents(ctx);\n    allowedEvents.forEach((eventName) => {\n        const eventEmitter = ctx[eventName];\n        editor.on(eventName.substring(2), (event) => ctx.ngZone.run(() => eventEmitter.emit({ event, editor })));\n    });\n};\nconst ɵ0$1 = bindHandlers;\nconst getValidEvents = (ctx) => {\n    const ignoredEvents = parseStringProperty(ctx.ignoreEvents, []);\n    const allowedEvents = parseStringProperty(ctx.allowedEvents, validEvents).filter((event) => validEvents.includes(event) && !ignoredEvents.includes(event));\n    return allowedEvents;\n};\nconst ɵ1$1 = getValidEvents;\nconst parseStringProperty = (property, defaultValue) => {\n    if (typeof property === 'string') {\n        return property.split(',').map((value) => value.trim());\n    }\n    if (Array.isArray(property)) {\n        return property;\n    }\n    return defaultValue;\n};\nconst ɵ2 = parseStringProperty;\nlet unique = 0;\nconst uuid = (prefix) => {\n    const date = new Date();\n    const time = date.getTime();\n    const random = Math.floor(Math.random() * 1000000000);\n    unique++;\n    return prefix + '_' + random + unique + String(time);\n};\nconst ɵ3 = uuid;\nconst isTextarea = (element) => typeof element !== 'undefined' && element.tagName.toLowerCase() === 'textarea';\nconst ɵ4 = isTextarea;\nconst normalizePluginArray = (plugins) => {\n    if (typeof plugins === 'undefined' || plugins === '') {\n        return [];\n    }\n    return Array.isArray(plugins) ? plugins : plugins.split(' ');\n};\nconst ɵ5 = normalizePluginArray;\nconst mergePlugins = (initPlugins, inputPlugins) => normalizePluginArray(initPlugins).concat(normalizePluginArray(inputPlugins));\nconst ɵ6 = mergePlugins;\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => { };\nconst ɵ7 = noop;\nconst isNullOrUndefined = (value) => value === null || value === undefined;\nconst ɵ8 = isNullOrUndefined;\n\n/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nconst createState = () => ({\n    listeners: [],\n    scriptId: uuid('tiny-script'),\n    scriptLoaded: false\n});\nconst ɵ0 = createState;\nconst CreateScriptLoader = () => {\n    let state = createState();\n    const injectScriptTag = (scriptId, doc, url, callback) => {\n        const scriptTag = doc.createElement('script');\n        scriptTag.referrerPolicy = 'origin';\n        scriptTag.type = 'application/javascript';\n        scriptTag.id = scriptId;\n        scriptTag.src = url;\n        const handler = () => {\n            scriptTag.removeEventListener('load', handler);\n            callback();\n        };\n        scriptTag.addEventListener('load', handler);\n        if (doc.head) {\n            doc.head.appendChild(scriptTag);\n        }\n    };\n    const load = (doc, url, callback) => {\n        if (state.scriptLoaded) {\n            callback();\n        }\n        else {\n            state.listeners.push(callback);\n            if (!doc.getElementById(state.scriptId)) {\n                injectScriptTag(state.scriptId, doc, url, () => {\n                    state.listeners.forEach((fn) => fn());\n                    state.scriptLoaded = true;\n                });\n            }\n        }\n    };\n    // Only to be used by tests.\n    const reinitialize = () => {\n        state = createState();\n    };\n    return {\n        load,\n        reinitialize\n    };\n};\nconst ɵ1 = CreateScriptLoader;\nconst ScriptLoader = CreateScriptLoader();\n\n/* eslint-disable @typescript-eslint/no-parameter-properties */\nconst TINYMCE_SCRIPT_SRC = new InjectionToken('TINYMCE_SCRIPT_SRC');\nconst EDITOR_COMPONENT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => EditorComponent),\n    multi: true\n};\nclass EditorComponent extends Events {\n    constructor(elementRef, ngZone, platformId, tinymceScriptSrc) {\n        super();\n        this.platformId = platformId;\n        this.tinymceScriptSrc = tinymceScriptSrc;\n        this.cloudChannel = '5';\n        this.apiKey = 'no-api-key';\n        this.id = '';\n        this.modelEvents = 'change input undo redo';\n        this.onTouchedCallback = noop;\n        this._elementRef = elementRef;\n        this.ngZone = ngZone;\n        this.initialise = this.initialise.bind(this);\n    }\n    set disabled(val) {\n        this._disabled = val;\n        if (this._editor && this._editor.initialized) {\n            this._editor.setMode(val ? 'readonly' : 'design');\n        }\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    get editor() {\n        return this._editor;\n    }\n    writeValue(value) {\n        if (this._editor && this._editor.initialized) {\n            this._editor.setContent(isNullOrUndefined(value) ? '' : value);\n        }\n        else {\n            this.initialValue = value === null ? undefined : value;\n        }\n    }\n    registerOnChange(fn) {\n        this.onChangeCallback = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouchedCallback = fn;\n    }\n    setDisabledState(isDisabled) {\n        if (this._editor) {\n            this._editor.setMode(isDisabled ? 'readonly' : 'design');\n        }\n        else if (isDisabled) {\n            this.init = Object.assign(Object.assign({}, this.init), { readonly: true });\n        }\n    }\n    ngAfterViewInit() {\n        var _a;\n        if (isPlatformBrowser(this.platformId)) {\n            this.id = this.id || uuid('tiny-angular');\n            this.inline = this.inline !== undefined ? this.inline !== false : !!((_a = this.init) === null || _a === void 0 ? void 0 : _a.inline);\n            this.createElement();\n            if (getTinymce() !== null) {\n                this.initialise();\n            }\n            else if (this._element && this._element.ownerDocument) {\n                ScriptLoader.load(this._element.ownerDocument, this.getScriptSrc(), this.initialise.bind(this));\n            }\n        }\n    }\n    ngOnDestroy() {\n        if (getTinymce() !== null) {\n            getTinymce().remove(this._editor);\n        }\n    }\n    createElement() {\n        const tagName = typeof this.tagName === 'string' ? this.tagName : 'div';\n        this._element = document.createElement(this.inline ? tagName : 'textarea');\n        if (this._element) {\n            if (document.getElementById(this.id)) {\n                /* eslint no-console: [\"error\", { allow: [\"warn\"] }] */\n                console.warn(`TinyMCE-Angular: an element with id [${this.id}] already exists. Editors with duplicate Id will not be able to mount`);\n            }\n            this._element.id = this.id;\n            if (isTextarea(this._element)) {\n                this._element.style.visibility = 'hidden';\n            }\n            this._elementRef.nativeElement.appendChild(this._element);\n        }\n    }\n    initialise() {\n        const finalInit = Object.assign(Object.assign({}, this.init), { target: this._element, inline: this.inline, readonly: this.disabled, plugins: mergePlugins(this.init && this.init.plugins, this.plugins), toolbar: this.toolbar || (this.init && this.init.toolbar), setup: (editor) => {\n                this._editor = editor;\n                editor.on('init', (_e) => {\n                    this.initEditor(editor);\n                });\n                bindHandlers(this, editor);\n                if (this.init && typeof this.init.setup === 'function') {\n                    this.init.setup(editor);\n                }\n            } });\n        if (isTextarea(this._element)) {\n            this._element.style.visibility = '';\n        }\n        this.ngZone.runOutsideAngular(() => {\n            getTinymce().init(finalInit);\n        });\n    }\n    getScriptSrc() {\n        return isNullOrUndefined(this.tinymceScriptSrc) ?\n            `https://cdn.tiny.cloud/1/${this.apiKey}/tinymce/${this.cloudChannel}/tinymce.min.js` :\n            this.tinymceScriptSrc;\n    }\n    initEditor(editor) {\n        editor.on('blur', () => this.ngZone.run(() => this.onTouchedCallback()));\n        editor.on(this.modelEvents, () => this.ngZone.run(() => this.emitOnChange(editor)));\n        if (typeof this.initialValue === 'string') {\n            this.ngZone.run(() => {\n                editor.setContent(this.initialValue);\n                if (editor.getContent() !== this.initialValue) {\n                    this.emitOnChange(editor);\n                }\n                if (this.onInitNgModel !== undefined) {\n                    this.onInitNgModel.emit(editor);\n                }\n            });\n        }\n    }\n    emitOnChange(editor) {\n        if (this.onChangeCallback) {\n            this.onChangeCallback(editor.getContent({ format: this.outputFormat }));\n        }\n    }\n}\nEditorComponent.ɵfac = function EditorComponent_Factory(t) { return new (t || EditorComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID), ɵngcc0.ɵɵdirectiveInject(TINYMCE_SCRIPT_SRC, 8)); };\nEditorComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: EditorComponent, selectors: [[\"editor\"]], inputs: { cloudChannel: \"cloudChannel\", apiKey: \"apiKey\", id: \"id\", modelEvents: \"modelEvents\", disabled: \"disabled\", initialValue: \"initialValue\", init: \"init\", inline: \"inline\", outputFormat: \"outputFormat\", tagName: \"tagName\", plugins: \"plugins\", toolbar: \"toolbar\", allowedEvents: \"allowedEvents\", ignoreEvents: \"ignoreEvents\" }, features: [ɵngcc0.ɵɵProvidersFeature([EDITOR_COMPONENT_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, template: function EditorComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, EditorComponent_ng_template_0_Template, 0, 0, \"ng-template\");\n    } }, styles: [\"[_nghost-%COMP%] { display: block; }\"] });\nEditorComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [TINYMCE_SCRIPT_SRC,] }] }\n];\nEditorComponent.propDecorators = {\n    cloudChannel: [{ type: Input }],\n    apiKey: [{ type: Input }],\n    init: [{ type: Input }],\n    id: [{ type: Input }],\n    initialValue: [{ type: Input }],\n    outputFormat: [{ type: Input }],\n    inline: [{ type: Input }],\n    tagName: [{ type: Input }],\n    plugins: [{ type: Input }],\n    toolbar: [{ type: Input }],\n    modelEvents: [{ type: Input }],\n    allowedEvents: [{ type: Input }],\n    ignoreEvents: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(EditorComponent, [{\n        type: Component,\n        args: [{\n                selector: 'editor',\n                template: '<ng-template></ng-template>',\n                providers: [EDITOR_COMPONENT_VALUE_ACCESSOR],\n                styles: [':host { display: block; }']\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: Object, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [TINYMCE_SCRIPT_SRC]\n            }] }]; }, { cloudChannel: [{\n            type: Input\n        }], apiKey: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], modelEvents: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], initialValue: [{\n            type: Input\n        }], init: [{\n            type: Input\n        }], inline: [{\n            type: Input\n        }], outputFormat: [{\n            type: Input\n        }], tagName: [{\n            type: Input\n        }], plugins: [{\n            type: Input\n        }], toolbar: [{\n            type: Input\n        }], allowedEvents: [{\n            type: Input\n        }], ignoreEvents: [{\n            type: Input\n        }] }); })();\n\nclass EditorModule {\n}\nEditorModule.ɵfac = function EditorModule_Factory(t) { return new (t || EditorModule)(); };\nEditorModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: EditorModule });\nEditorModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule, FormsModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(EditorModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, FormsModule],\n                declarations: [EditorComponent],\n                exports: [EditorComponent]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(EditorModule, { declarations: function () { return [EditorComponent]; }, imports: function () { return [CommonModule, FormsModule]; }, exports: function () { return [EditorComponent]; } }); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { EditorComponent, EditorModule, TINYMCE_SCRIPT_SRC, Events as ɵa };\n\n"],"names":[],"sourceRoot":"webpack:///"}