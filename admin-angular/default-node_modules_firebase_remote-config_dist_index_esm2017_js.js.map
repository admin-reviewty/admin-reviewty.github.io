{"version":3,"file":"default-node_modules_firebase_remote-config_dist_index_esm2017_js.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA,MAAMQ,IAAI,GAAG,yBAAb;AACA,MAAMC,OAAO,GAAG,OAAhB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,kBAAkB,GAAG,KAA3B;AACA,MAAMC,eAAe,GAAI,KAAIF,OAAQ,EAArC;AACA,MAAMG,qBAAqB,GAAG,QAA9B;AACA,MAAMC,qBAAqB,GAAG,iDAA9B;AACA,MAAMC,uBAAuB,GAAG,KAAK,EAAL,GAAU,IAA1C,EAAgD;;AAChD,MAAMC,OAAO,GAAG,eAAhB;AACA,MAAMC,YAAY,GAAG,eAArB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,qBAAqB,GAAG;AAC1B,GAAC;AAA4B;AAA7B,KAA+D,iDADrC;AAE1B,GAAC;AAAiB;AAAlB,KAAyC,0CAFf;AAG1B,GAAC;AAAyB;AAA1B,KAAyD,kCAH/B;AAI1B,GAAC;AAAiB;AAAlB,KAAyC,4FAJf;AAK1B,GAAC;AAAc;AAAf,KAAmC,iDALT;AAM1B,GAAC;AAA8B;AAA/B,KAAmE;AANzC,CAA9B;AAQA,MAAMC,aAAa,GAAG,IAAIb,wDAAJ,CAAiBU,OAAjB,EAA0BC,YAA1B,EAAwCC,qBAAxC,CAAtB;AACA;;AACA,SAASE,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B,SAAQA,KAAK,YAAYd,yDAAjB,IACJc,KAAK,CAACC,IAAN,CAAWC,QAAX,CAAoB;AAAiB;AAArC,GADJ;AAEH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,wBAAT,CAAkC;AAAEC,EAAAA;AAAF,CAAlC,EAAiD;AAC7C,SAAQ,GAAEX,qBAAsB,aAAYW,SAAU,gBAAtD;AACH;;AACD,SAASC,gCAAT,CAA0CC,QAA1C,EAAoD;AAChD,SAAO;AACHC,IAAAA,KAAK,EAAED,QAAQ,CAACC,KADb;AAEHC,IAAAA,aAAa,EAAE;AAAE;AAFd;AAGHC,IAAAA,SAAS,EAAEC,iCAAiC,CAACJ,QAAQ,CAACG,SAAV,CAHzC;AAIHE,IAAAA,YAAY,EAAEC,IAAI,CAACC,GAAL;AAJX,GAAP;AAMH;;SACcC;;;;;6JAAf,WAAoCC,WAApC,EAAiDT,QAAjD,EAA2D;AACvD,UAAMU,YAAY,SAASV,QAAQ,CAACW,IAAT,EAA3B;AACA,UAAMC,SAAS,GAAGF,YAAY,CAAChB,KAA/B;AACA,WAAOF,aAAa,CAACqB,MAAd,CAAqB;AAAiB;AAAtC,MAA4D;AAC/DJ,MAAAA,WAD+D;AAE/DK,MAAAA,UAAU,EAAEF,SAAS,CAACjB,IAFyC;AAG/DoB,MAAAA,aAAa,EAAEH,SAAS,CAACI,OAHsC;AAI/DC,MAAAA,YAAY,EAAEL,SAAS,CAACM;AAJuC,KAA5D,CAAP;AAMH;;;;AACD,SAASC,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAAgC;AAC5B,SAAO,IAAIC,OAAJ,CAAY;AACf,oBAAgB,kBADD;AAEfC,IAAAA,MAAM,EAAE,kBAFO;AAGf,sBAAkBF;AAHH,GAAZ,CAAP;AAKH;;AACD,SAASG,kBAAT,CAA4BC,SAA5B,EAAuC;AAAEC,EAAAA;AAAF,CAAvC,EAAyD;AACrD,QAAMC,OAAO,GAAGP,UAAU,CAACK,SAAD,CAA1B;AACAE,EAAAA,OAAO,CAACC,MAAR,CAAe,eAAf,EAAgCC,sBAAsB,CAACH,YAAD,CAAtD;AACA,SAAOC,OAAP;AACH;AACD;AACA;AACA;AACA;AACA;;;SACeG;;;;;2JAAf,WAAkCC,EAAlC,EAAsC;AAClC,UAAMC,MAAM,SAASD,EAAE,EAAvB;;AACA,QAAIC,MAAM,CAACb,MAAP,IAAiB,GAAjB,IAAwBa,MAAM,CAACb,MAAP,GAAgB,GAA5C,EAAiD;AAC7C;AACA,aAAOY,EAAE,EAAT;AACH;;AACD,WAAOC,MAAP;AACH;;;;AACD,SAAS3B,iCAAT,CAA2C4B,iBAA3C,EAA8D;AAC1D;AACA,SAAOC,MAAM,CAACD,iBAAiB,CAACE,OAAlB,CAA0B,GAA1B,EAA+B,KAA/B,CAAD,CAAb;AACH;;AACD,SAASN,sBAAT,CAAgCH,YAAhC,EAA8C;AAC1C,SAAQ,GAAEvC,qBAAsB,IAAGuC,YAAa,EAAhD;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACeU;;;AA8Bf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;;kKA9CA,WAAyCX,SAAzC,EAAoD;AAAEY,IAAAA;AAAF,GAApD,EAA6D;AACzD,UAAMC,QAAQ,GAAGxC,wBAAwB,CAAC2B,SAAD,CAAzC;AACA,UAAME,OAAO,GAAGP,UAAU,CAACK,SAAD,CAA1B;AACA,UAAMc,IAAI,GAAG;AACTF,MAAAA,GADS;AAETG,MAAAA,WAAW,EAAErD,qBAFJ;AAGTsD,MAAAA,KAAK,EAAEhB,SAAS,CAACgB,KAHR;AAITC,MAAAA,UAAU,EAAExD;AAJH,KAAb;AAMA,UAAMyD,OAAO,GAAG;AACZC,MAAAA,MAAM,EAAE,MADI;AAEZjB,MAAAA,OAFY;AAGZY,MAAAA,IAAI,EAAEM,IAAI,CAACC,SAAL,CAAeP,IAAf;AAHM,KAAhB;AAKA,UAAMtC,QAAQ,SAAS6B,kBAAkB,CAAC,MAAMiB,KAAK,CAACT,QAAD,EAAWK,OAAX,CAAZ,CAAzC;;AACA,QAAI1C,QAAQ,CAAC+C,EAAb,EAAiB;AACb,YAAMC,aAAa,SAAShD,QAAQ,CAACW,IAAT,EAA5B;AACA,YAAMsC,2BAA2B,GAAG;AAChCb,QAAAA,GAAG,EAAEY,aAAa,CAACZ,GAAd,IAAqBA,GADM;AAEhCc,QAAAA,kBAAkB,EAAE;AAAE;AAFU;AAGhCzB,QAAAA,YAAY,EAAEuB,aAAa,CAACvB,YAHI;AAIhC0B,QAAAA,SAAS,EAAEpD,gCAAgC,CAACiD,aAAa,CAACG,SAAf;AAJX,OAApC;AAMA,aAAOF,2BAAP;AACH,KATD,MAUK;AACD,kBAAYzC,oBAAoB,CAAC,qBAAD,EAAwBR,QAAxB,CAAhC;AACH;AACJ;;;;AAmBD,SAASoD,KAAT,CAAeC,EAAf,EAAmB;AACf,SAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AAC1BC,IAAAA,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAV;AACH,GAFM,CAAP;AAGH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASI,qBAAT,CAA+BC,KAA/B,EAAsC;AAClC,QAAMC,GAAG,GAAGC,IAAI,CAACC,MAAM,CAACC,YAAP,CAAoB,GAAGJ,KAAvB,CAAD,CAAhB;AACA,SAAOC,GAAG,CAACzB,OAAJ,CAAY,KAAZ,EAAmB,GAAnB,EAAwBA,OAAxB,CAAgC,KAAhC,EAAuC,GAAvC,CAAP;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAM6B,iBAAiB,GAAG,mBAA1B;AACA,MAAMC,WAAW,GAAG,EAApB;AACA;AACA;AACA;AACA;;AACA,SAASC,WAAT,GAAuB;AACnB,MAAI;AACA;AACA;AACA,UAAMC,YAAY,GAAG,IAAIC,UAAJ,CAAe,EAAf,CAArB;AACA,UAAMC,MAAM,GAAGC,IAAI,CAACD,MAAL,IAAeC,IAAI,CAACC,QAAnC;AACAF,IAAAA,MAAM,CAACG,eAAP,CAAuBL,YAAvB,EALA,CAMA;;AACAA,IAAAA,YAAY,CAAC,CAAD,CAAZ,GAAkB,aAAcA,YAAY,CAAC,CAAD,CAAZ,GAAkB,UAAlD;AACA,UAAM9B,GAAG,GAAGoC,MAAM,CAACN,YAAD,CAAlB;AACA,WAAOH,iBAAiB,CAACU,IAAlB,CAAuBrC,GAAvB,IAA8BA,GAA9B,GAAoC4B,WAA3C;AACH,GAVD,CAWA,OAAOU,EAAP,EAAW;AACP;AACA,WAAOV,WAAP;AACH;AACJ;AACD;;;AACA,SAASQ,MAAT,CAAgBN,YAAhB,EAA8B;AAC1B,QAAMS,SAAS,GAAGlB,qBAAqB,CAACS,YAAD,CAAvC,CAD0B,CAE1B;AACA;;AACA,SAAOS,SAAS,CAACC,MAAV,CAAiB,CAAjB,EAAoB,EAApB,CAAP;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA,SAASC,MAAT,CAAgBrD,SAAhB,EAA2B;AACvB,SAAQ,GAAEA,SAAS,CAACsD,OAAQ,IAAGtD,SAAS,CAACgB,KAAM,EAA/C;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMuC,kBAAkB,GAAG,IAAIC,GAAJ,EAA3B;AACA;AACA;AACA;AACA;;AACA,SAASC,UAAT,CAAoBzD,SAApB,EAA+BY,GAA/B,EAAoC;AAChC,QAAM8C,GAAG,GAAGL,MAAM,CAACrD,SAAD,CAAlB;AACA2D,EAAAA,sBAAsB,CAACD,GAAD,EAAM9C,GAAN,CAAtB;AACAgD,EAAAA,kBAAkB,CAACF,GAAD,EAAM9C,GAAN,CAAlB;AACH;;AACD,SAASiD,WAAT,CAAqB7D,SAArB,EAAgC8D,QAAhC,EAA0C;AACtC;AACA;AACAC,EAAAA,mBAAmB;AACnB,QAAML,GAAG,GAAGL,MAAM,CAACrD,SAAD,CAAlB;AACA,MAAIgE,WAAW,GAAGT,kBAAkB,CAACU,GAAnB,CAAuBP,GAAvB,CAAlB;;AACA,MAAI,CAACM,WAAL,EAAkB;AACdA,IAAAA,WAAW,GAAG,IAAIE,GAAJ,EAAd;AACAX,IAAAA,kBAAkB,CAACY,GAAnB,CAAuBT,GAAvB,EAA4BM,WAA5B;AACH;;AACDA,EAAAA,WAAW,CAACI,GAAZ,CAAgBN,QAAhB;AACH;;AACD,SAASO,cAAT,CAAwBrE,SAAxB,EAAmC8D,QAAnC,EAA6C;AACzC,QAAMJ,GAAG,GAAGL,MAAM,CAACrD,SAAD,CAAlB;AACA,QAAMgE,WAAW,GAAGT,kBAAkB,CAACU,GAAnB,CAAuBP,GAAvB,CAApB;;AACA,MAAI,CAACM,WAAL,EAAkB;AACd;AACH;;AACDA,EAAAA,WAAW,CAACM,MAAZ,CAAmBR,QAAnB;;AACA,MAAIE,WAAW,CAACO,IAAZ,KAAqB,CAAzB,EAA4B;AACxBhB,IAAAA,kBAAkB,CAACe,MAAnB,CAA0BZ,GAA1B;AACH,GATwC,CAUzC;;;AACAc,EAAAA,qBAAqB;AACxB;;AACD,SAASb,sBAAT,CAAgCD,GAAhC,EAAqC9C,GAArC,EAA0C;AACtC,QAAM6D,SAAS,GAAGlB,kBAAkB,CAACU,GAAnB,CAAuBP,GAAvB,CAAlB;;AACA,MAAI,CAACe,SAAL,EAAgB;AACZ;AACH;;AACD,OAAK,MAAMX,QAAX,IAAuBW,SAAvB,EAAkC;AAC9BX,IAAAA,QAAQ,CAAClD,GAAD,CAAR;AACH;AACJ;;AACD,SAASgD,kBAAT,CAA4BF,GAA5B,EAAiC9C,GAAjC,EAAsC;AAClC,QAAM8D,OAAO,GAAGX,mBAAmB,EAAnC;;AACA,MAAIW,OAAJ,EAAa;AACTA,IAAAA,OAAO,CAACC,WAAR,CAAoB;AAAEjB,MAAAA,GAAF;AAAO9C,MAAAA;AAAP,KAApB;AACH;;AACD4D,EAAAA,qBAAqB;AACxB;;AACD,IAAII,gBAAgB,GAAG,IAAvB;AACA;;AACA,SAASb,mBAAT,GAA+B;AAC3B,MAAI,CAACa,gBAAD,IAAqB,sBAAsB/B,IAA/C,EAAqD;AACjD+B,IAAAA,gBAAgB,GAAG,IAAIC,gBAAJ,CAAqB,uBAArB,CAAnB;;AACAD,IAAAA,gBAAgB,CAACE,SAAjB,GAA6BC,CAAC,IAAI;AAC9BpB,MAAAA,sBAAsB,CAACoB,CAAC,CAACC,IAAF,CAAOtB,GAAR,EAAaqB,CAAC,CAACC,IAAF,CAAOpE,GAApB,CAAtB;AACH,KAFD;AAGH;;AACD,SAAOgE,gBAAP;AACH;;AACD,SAASJ,qBAAT,GAAiC;AAC7B,MAAIjB,kBAAkB,CAACgB,IAAnB,KAA4B,CAA5B,IAAiCK,gBAArC,EAAuD;AACnDA,IAAAA,gBAAgB,CAACK,KAAjB;AACAL,IAAAA,gBAAgB,GAAG,IAAnB;AACH;AACJ;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMM,aAAa,GAAG,iCAAtB;AACA,MAAMC,gBAAgB,GAAG,CAAzB;AACA,MAAMC,iBAAiB,GAAG,8BAA1B;AACA,IAAIC,SAAS,GAAG,IAAhB;;AACA,SAASC,YAAT,GAAwB;AACpB,MAAI,CAACD,SAAL,EAAgB;AACZA,IAAAA,SAAS,GAAGhI,2CAAM,CAAC6H,aAAD,EAAgBC,gBAAhB,EAAkCI,SAAS,IAAI;AAC7D;AACA;AACA;AACA;AACA;AACA,cAAQA,SAAS,CAACC,UAAlB;AACI,aAAK,CAAL;AACID,UAAAA,SAAS,CAACE,iBAAV,CAA4BL,iBAA5B;AAFR;AAIH,KAViB,CAAlB;AAWH;;AACD,SAAOC,SAAP;AACH;AACD;;;SACelB;;;AAaf;;;;4IAbA,WAAmBnE,SAAnB,EAA8B0F,KAA9B,EAAqC;AACjC,UAAMhC,GAAG,GAAGL,MAAM,CAACrD,SAAD,CAAlB;AACA,UAAM2F,EAAE,SAASL,YAAY,EAA7B;AACA,UAAMM,EAAE,GAAGD,EAAE,CAACE,WAAH,CAAeT,iBAAf,EAAkC,WAAlC,CAAX;AACA,UAAMU,WAAW,GAAGF,EAAE,CAACE,WAAH,CAAeV,iBAAf,CAApB;AACA,UAAMW,QAAQ,SAASD,WAAW,CAAC7B,GAAZ,CAAgBP,GAAhB,CAAvB;AACA,UAAMoC,WAAW,CAACE,GAAZ,CAAgBN,KAAhB,EAAuBhC,GAAvB,CAAN;AACA,UAAMkC,EAAE,CAACK,QAAT;;AACA,QAAI,CAACF,QAAD,IAAaA,QAAQ,CAACnF,GAAT,KAAiB8E,KAAK,CAAC9E,GAAxC,EAA6C;AACzC6C,MAAAA,UAAU,CAACzD,SAAD,EAAY0F,KAAK,CAAC9E,GAAlB,CAAV;AACH;;AACD,WAAO8E,KAAP;AACH;;;;SAEcQ;;;AAOf;AACA;AACA;AACA;AACA;AACA;;;;+IAZA,WAAsBlG,SAAtB,EAAiC;AAC7B,UAAM0D,GAAG,GAAGL,MAAM,CAACrD,SAAD,CAAlB;AACA,UAAM2F,EAAE,SAASL,YAAY,EAA7B;AACA,UAAMM,EAAE,GAAGD,EAAE,CAACE,WAAH,CAAeT,iBAAf,EAAkC,WAAlC,CAAX;AACA,UAAMQ,EAAE,CAACE,WAAH,CAAeV,iBAAf,EAAkCd,MAAlC,CAAyCZ,GAAzC,CAAN;AACA,UAAMkC,EAAE,CAACK,QAAT;AACH;;;;SAOcE;;;AAoBf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;;+IAvCA,WAAsBnG,SAAtB,EAAiCoG,QAAjC,EAA2C;AACvC,UAAM1C,GAAG,GAAGL,MAAM,CAACrD,SAAD,CAAlB;AACA,UAAM2F,EAAE,SAASL,YAAY,EAA7B;AACA,UAAMM,EAAE,GAAGD,EAAE,CAACE,WAAH,CAAeT,iBAAf,EAAkC,WAAlC,CAAX;AACA,UAAMiB,KAAK,GAAGT,EAAE,CAACE,WAAH,CAAeV,iBAAf,CAAd;AACA,UAAMW,QAAQ,SAASM,KAAK,CAACpC,GAAN,CAAUP,GAAV,CAAvB;AACA,UAAM4C,QAAQ,GAAGF,QAAQ,CAACL,QAAD,CAAzB;;AACA,QAAIO,QAAQ,KAAKC,SAAjB,EAA4B;AACxB,YAAMF,KAAK,CAAC/B,MAAN,CAAaZ,GAAb,CAAN;AACH,KAFD,MAGK;AACD,YAAM2C,KAAK,CAACL,GAAN,CAAUM,QAAV,EAAoB5C,GAApB,CAAN;AACH;;AACD,UAAMkC,EAAE,CAACK,QAAT;;AACA,QAAIK,QAAQ,KAAK,CAACP,QAAD,IAAaA,QAAQ,CAACnF,GAAT,KAAiB0F,QAAQ,CAAC1F,GAA5C,CAAZ,EAA8D;AAC1D6C,MAAAA,UAAU,CAACzD,SAAD,EAAYsG,QAAQ,CAAC1F,GAArB,CAAV;AACH;;AACD,WAAO0F,QAAP;AACH;;;;SAsBcE;;;AAiBf;AACA;AACA;AACA;;;;6JApBA,WAAoCxG,SAApC,EAA+C;AAC3C,QAAIyG,mBAAJ;AACA,UAAMC,iBAAiB,SAASP,MAAM,CAACnG,SAAD,EAAY2G,QAAQ,IAAI;AAC1D,YAAMD,iBAAiB,GAAGE,+BAA+B,CAACD,QAAD,CAAzD;AACA,YAAME,gBAAgB,GAAGC,8BAA8B,CAAC9G,SAAD,EAAY0G,iBAAZ,CAAvD;AACAD,MAAAA,mBAAmB,GAAGI,gBAAgB,CAACJ,mBAAvC;AACA,aAAOI,gBAAgB,CAACH,iBAAxB;AACH,KALqC,CAAtC;;AAMA,QAAIA,iBAAiB,CAAC9F,GAAlB,KAA0B4B,WAA9B,EAA2C;AACvC;AACA,aAAO;AAAEkE,QAAAA,iBAAiB,QAAQD;AAA3B,OAAP;AACH;;AACD,WAAO;AACHC,MAAAA,iBADG;AAEHD,MAAAA;AAFG,KAAP;AAIH;;;;AAKD,SAASG,+BAAT,CAAyCD,QAAzC,EAAmD;AAC/C,QAAMI,KAAK,GAAGJ,QAAQ,IAAI;AACtB/F,IAAAA,GAAG,EAAE6B,WAAW,EADM;AAEtBf,IAAAA,kBAAkB,EAAE;AAAE;;AAFA,GAA1B;AAIA,SAAOsF,oBAAoB,CAACD,KAAD,CAA3B;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASD,8BAAT,CAAwC9G,SAAxC,EAAmD0G,iBAAnD,EAAsE;AAClE,MAAIA,iBAAiB,CAAChF,kBAAlB,KAAyC;AAAE;AAA/C,IAAkE;AAC9D,QAAI,CAACuF,SAAS,CAACC,MAAf,EAAuB;AACnB;AACA,YAAMC,4BAA4B,GAAGrF,OAAO,CAACsF,MAAR,CAAepJ,aAAa,CAACqB,MAAd,CAAqB;AAAc;AAAnC,OAAf,CAArC;AACA,aAAO;AACHqH,QAAAA,iBADG;AAEHD,QAAAA,mBAAmB,EAAEU;AAFlB,OAAP;AAIH,KAR6D,CAS9D;;;AACA,UAAME,eAAe,GAAG;AACpBzG,MAAAA,GAAG,EAAE8F,iBAAiB,CAAC9F,GADH;AAEpBc,MAAAA,kBAAkB,EAAE;AAAE;AAFF;AAGpB4F,MAAAA,gBAAgB,EAAExI,IAAI,CAACC,GAAL;AAHE,KAAxB;AAKA,UAAM0H,mBAAmB,GAAGc,oBAAoB,CAACvH,SAAD,EAAYqH,eAAZ,CAAhD;AACA,WAAO;AAAEX,MAAAA,iBAAiB,EAAEW,eAArB;AAAsCZ,MAAAA;AAAtC,KAAP;AACH,GAjBD,MAkBK,IAAIC,iBAAiB,CAAChF,kBAAlB,KAAyC;AAAE;AAA/C,IAAkE;AACnE,WAAO;AACHgF,MAAAA,iBADG;AAEHD,MAAAA,mBAAmB,EAAEe,wBAAwB,CAACxH,SAAD;AAF1C,KAAP;AAIH,GALI,MAMA;AACD,WAAO;AAAE0G,MAAAA;AAAF,KAAP;AACH;AACJ;AACD;;;SACea;;;AAqBf;;;;6JArBA,WAAoCvH,SAApC,EAA+C0G,iBAA/C,EAAkE;AAC9D,QAAI;AACA,YAAMjF,2BAA2B,SAASd,yBAAyB,CAACX,SAAD,EAAY0G,iBAAZ,CAAnE;AACA,aAAOvC,GAAG,CAACnE,SAAD,EAAYyB,2BAAZ,CAAV;AACH,KAHD,CAIA,OAAOsD,CAAP,EAAU;AACN,UAAI9G,aAAa,CAAC8G,CAAD,CAAb,IAAoBA,CAAC,CAAC0C,UAAF,CAAanI,UAAb,KAA4B,GAApD,EAAyD;AACrD;AACA;AACA,cAAM4G,MAAM,CAAClG,SAAD,CAAZ;AACH,OAJD,MAKK;AACD;AACA,cAAMmE,GAAG,CAACnE,SAAD,EAAY;AACjBY,UAAAA,GAAG,EAAE8F,iBAAiB,CAAC9F,GADN;AAEjBc,UAAAA,kBAAkB,EAAE;AAAE;;AAFL,SAAZ,CAAT;AAIH;;AACD,YAAMqD,CAAN;AACH;AACJ;;;;SAEcyC;;;AAuBf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iKA9BA,WAAwCxH,SAAxC,EAAmD;AAC/C;AACA;AACA;AACA,QAAI+G,KAAK,SAASW,yBAAyB,CAAC1H,SAAD,CAA3C;;AACA,WAAO+G,KAAK,CAACrF,kBAAN,KAA6B;AAAE;AAAtC,MAAyD;AACrD;AACA,YAAME,KAAK,CAAC,GAAD,CAAX;AACAmF,MAAAA,KAAK,SAASW,yBAAyB,CAAC1H,SAAD,CAAvC;AACH;;AACD,QAAI+G,KAAK,CAACrF,kBAAN,KAA6B;AAAE;AAAnC,MAAsD;AAClD;AACA,YAAM;AAAEgF,QAAAA,iBAAF;AAAqBD,QAAAA;AAArB,gBAAmDD,oBAAoB,CAACxG,SAAD,CAA7E;;AACA,UAAIyG,mBAAJ,EAAyB;AACrB,eAAOA,mBAAP;AACH,OAFD,MAGK;AACD;AACA,eAAOC,iBAAP;AACH;AACJ;;AACD,WAAOK,KAAP;AACH;;;;AASD,SAASW,yBAAT,CAAmC1H,SAAnC,EAA8C;AAC1C,SAAOmG,MAAM,CAACnG,SAAD,EAAY2G,QAAQ,IAAI;AACjC,QAAI,CAACA,QAAL,EAAe;AACX,YAAM3I,aAAa,CAACqB,MAAd,CAAqB;AAAyB;AAA9C,OAAN;AACH;;AACD,WAAO2H,oBAAoB,CAACL,QAAD,CAA3B;AACH,GALY,CAAb;AAMH;;AACD,SAASK,oBAAT,CAA8BD,KAA9B,EAAqC;AACjC,MAAIY,8BAA8B,CAACZ,KAAD,CAAlC,EAA2C;AACvC,WAAO;AACHnG,MAAAA,GAAG,EAAEmG,KAAK,CAACnG,GADR;AAEHc,MAAAA,kBAAkB,EAAE;AAAE;;AAFnB,KAAP;AAIH;;AACD,SAAOqF,KAAP;AACH;;AACD,SAASY,8BAAT,CAAwCjB,iBAAxC,EAA2D;AACvD,SAAQA,iBAAiB,CAAChF,kBAAlB,KAAyC;AAAE;AAA3C,KACJgF,iBAAiB,CAACY,gBAAlB,GAAqC9J,kBAArC,GAA0DsB,IAAI,CAACC,GAAL,EAD9D;AAEH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACe6I;;;;;iKAAf,WAAwC;AAAE5H,IAAAA,SAAF;AAAa6H,IAAAA;AAAb,GAAxC,EAA+EnB,iBAA/E,EAAkG;AAC9F,UAAM7F,QAAQ,GAAGiH,4BAA4B,CAAC9H,SAAD,EAAY0G,iBAAZ,CAA7C;AACA,UAAMxG,OAAO,GAAGH,kBAAkB,CAACC,SAAD,EAAY0G,iBAAZ,CAAlC,CAF8F,CAG9F;;AACA,UAAMqB,cAAc,GAAGF,sBAAsB,CAACG,YAAvB,CAAoC;AACvDC,MAAAA,QAAQ,EAAE;AAD6C,KAApC,CAAvB;;AAGA,QAAIF,cAAJ,EAAoB;AAChB7H,MAAAA,OAAO,CAACC,MAAR,CAAe,mBAAf,EAAoC4H,cAAc,CAACG,qBAAf,EAApC;AACH;;AACD,UAAMpH,IAAI,GAAG;AACTqH,MAAAA,YAAY,EAAE;AACVlH,QAAAA,UAAU,EAAExD;AADF;AADL,KAAb;AAKA,UAAMyD,OAAO,GAAG;AACZC,MAAAA,MAAM,EAAE,MADI;AAEZjB,MAAAA,OAFY;AAGZY,MAAAA,IAAI,EAAEM,IAAI,CAACC,SAAL,CAAeP,IAAf;AAHM,KAAhB;AAKA,UAAMtC,QAAQ,SAAS6B,kBAAkB,CAAC,MAAMiB,KAAK,CAACT,QAAD,EAAWK,OAAX,CAAZ,CAAzC;;AACA,QAAI1C,QAAQ,CAAC+C,EAAb,EAAiB;AACb,YAAMC,aAAa,SAAShD,QAAQ,CAACW,IAAT,EAA5B;AACA,YAAMiJ,kBAAkB,GAAG7J,gCAAgC,CAACiD,aAAD,CAA3D;AACA,aAAO4G,kBAAP;AACH,KAJD,MAKK;AACD,kBAAYpJ,oBAAoB,CAAC,qBAAD,EAAwBR,QAAxB,CAAhC;AACH;AACJ;;;;AACD,SAASsJ,4BAAT,CAAsC9H,SAAtC,EAAiD;AAAEY,EAAAA;AAAF,CAAjD,EAA0D;AACtD,SAAQ,GAAEvC,wBAAwB,CAAC2B,SAAD,CAAY,IAAGY,GAAI,sBAArD;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;;SACeyH;;;AA+Bf;AACA;AACA;AACA;AACA;AACA;;;;yJApCA,WAAgCC,aAAhC,EAA+CC,YAAY,GAAG,KAA9D,EAAqE;AACjE,QAAIC,YAAJ;AACA,UAAMzB,KAAK,SAASZ,MAAM,CAACmC,aAAa,CAACtI,SAAf,EAA0B2G,QAAQ,IAAI;AAC5D,UAAI,CAAC8B,iBAAiB,CAAC9B,QAAD,CAAtB,EAAkC;AAC9B,cAAM3I,aAAa,CAACqB,MAAd,CAAqB;AAAiB;AAAtC,SAAN;AACH;;AACD,YAAMqJ,YAAY,GAAG/B,QAAQ,CAAChF,SAA9B;;AACA,UAAI,CAAC4G,YAAD,IAAiBI,gBAAgB,CAACD,YAAD,CAArC,EAAqD;AACjD;AACA,eAAO/B,QAAP;AACH,OAHD,MAIK,IAAI+B,YAAY,CAAChK,aAAb,KAA+B;AAAE;AAArC,QAAwD;AACzD;AACA8J,QAAAA,YAAY,GAAGI,yBAAyB,CAACN,aAAD,EAAgBC,YAAhB,CAAxC;AACA,eAAO5B,QAAP;AACH,OAJI,MAKA;AACD;AACA,YAAI,CAACM,SAAS,CAACC,MAAf,EAAuB;AACnB,gBAAMlJ,aAAa,CAACqB,MAAd,CAAqB;AAAc;AAAnC,WAAN;AACH;;AACD,cAAMgI,eAAe,GAAGwB,mCAAmC,CAAClC,QAAD,CAA3D;AACA6B,QAAAA,YAAY,GAAGM,wBAAwB,CAACR,aAAD,EAAgBjB,eAAhB,CAAvC;AACA,eAAOA,eAAP;AACH;AACJ,KAvByB,CAA1B;AAwBA,UAAM1F,SAAS,GAAG6G,YAAY,SAClBA,YADkB,GAExBzB,KAAK,CAACpF,SAFZ;AAGA,WAAOA,SAAP;AACH;;;;SAOciH;;;AAmBf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;kKA1BA,WAAyCN,aAAzC,EAAwDC,YAAxD,EAAsE;AAClE;AACA;AACA;AACA,QAAIxB,KAAK,SAASgC,sBAAsB,CAACT,aAAa,CAACtI,SAAf,CAAxC;;AACA,WAAO+G,KAAK,CAACpF,SAAN,CAAgBjD,aAAhB,KAAkC;AAAE;AAA3C,MAA8D;AAC1D;AACA,YAAMkD,KAAK,CAAC,GAAD,CAAX;AACAmF,MAAAA,KAAK,SAASgC,sBAAsB,CAACT,aAAa,CAACtI,SAAf,CAApC;AACH;;AACD,UAAM2B,SAAS,GAAGoF,KAAK,CAACpF,SAAxB;;AACA,QAAIA,SAAS,CAACjD,aAAV,KAA4B;AAAE;AAAlC,MAAqD;AACjD;AACA,aAAO2J,gBAAgB,CAACC,aAAD,EAAgBC,YAAhB,CAAvB;AACH,KAHD,MAIK;AACD,aAAO5G,SAAP;AACH;AACJ;;;;AASD,SAASoH,sBAAT,CAAgC/I,SAAhC,EAA2C;AACvC,SAAOmG,MAAM,CAACnG,SAAD,EAAY2G,QAAQ,IAAI;AACjC,QAAI,CAAC8B,iBAAiB,CAAC9B,QAAD,CAAtB,EAAkC;AAC9B,YAAM3I,aAAa,CAACqB,MAAd,CAAqB;AAAiB;AAAtC,OAAN;AACH;;AACD,UAAMqJ,YAAY,GAAG/B,QAAQ,CAAChF,SAA9B;;AACA,QAAIqH,2BAA2B,CAACN,YAAD,CAA/B,EAA+C;AAC3C,aAAOO,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBvC,QAAlB,CAAd,EAA2C;AAAEhF,QAAAA,SAAS,EAAE;AAAEjD,UAAAA,aAAa,EAAE;AAAE;;AAAnB;AAAb,OAA3C,CAAP;AACH;;AACD,WAAOiI,QAAP;AACH,GATY,CAAb;AAUH;;SACcmC;;;;;iKAAf,WAAwCR,aAAxC,EAAuD5B,iBAAvD,EAA0E;AACtE,QAAI;AACA,YAAM/E,SAAS,SAASiG,wBAAwB,CAACU,aAAD,EAAgB5B,iBAAhB,CAAhD;AACA,YAAMyC,wBAAwB,GAAGF,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBxC,iBAAlB,CAAd,EAAoD;AAAE/E,QAAAA;AAAF,OAApD,CAAjC;AACA,YAAMwC,GAAG,CAACmE,aAAa,CAACtI,SAAf,EAA0BmJ,wBAA1B,CAAT;AACA,aAAOxH,SAAP;AACH,KALD,CAMA,OAAOoD,CAAP,EAAU;AACN,UAAI9G,aAAa,CAAC8G,CAAD,CAAb,KACCA,CAAC,CAAC0C,UAAF,CAAanI,UAAb,KAA4B,GAA5B,IAAmCyF,CAAC,CAAC0C,UAAF,CAAanI,UAAb,KAA4B,GADhE,CAAJ,EAC0E;AACtE;AACA;AACA,cAAM4G,MAAM,CAACoC,aAAa,CAACtI,SAAf,CAAZ;AACH,OALD,MAMK;AACD,cAAMmJ,wBAAwB,GAAGF,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBxC,iBAAlB,CAAd,EAAoD;AAAE/E,UAAAA,SAAS,EAAE;AAAEjD,YAAAA,aAAa,EAAE;AAAE;;AAAnB;AAAb,SAApD,CAAjC;AACA,cAAMyF,GAAG,CAACmE,aAAa,CAACtI,SAAf,EAA0BmJ,wBAA1B,CAAT;AACH;;AACD,YAAMpE,CAAN;AACH;AACJ;;;;AACD,SAAS0D,iBAAT,CAA2B/B,iBAA3B,EAA8C;AAC1C,SAAQA,iBAAiB,KAAKH,SAAtB,IACJG,iBAAiB,CAAChF,kBAAlB,KAAyC;AAAE;AAD/C;AAEH;;AACD,SAASiH,gBAAT,CAA0BhH,SAA1B,EAAqC;AACjC,SAAQA,SAAS,CAACjD,aAAV,KAA4B;AAAE;AAA9B,KACJ,CAAC0K,kBAAkB,CAACzH,SAAD,CADvB;AAEH;;AACD,SAASyH,kBAAT,CAA4BzH,SAA5B,EAAuC;AACnC,QAAM5C,GAAG,GAAGD,IAAI,CAACC,GAAL,EAAZ;AACA,SAAQA,GAAG,GAAG4C,SAAS,CAAC9C,YAAhB,IACJ8C,SAAS,CAAC9C,YAAV,GAAyB8C,SAAS,CAAChD,SAAnC,GAA+CI,GAAG,GAAGnB,uBADzD;AAEH;AACD;;;AACA,SAASiL,mCAAT,CAA6ClC,QAA7C,EAAuD;AACnD,QAAM0C,mBAAmB,GAAG;AACxB3K,IAAAA,aAAa,EAAE;AAAE;AADO;AAExB4K,IAAAA,WAAW,EAAExK,IAAI,CAACC,GAAL;AAFW,GAA5B;AAIA,SAAOkK,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBvC,QAAlB,CAAd,EAA2C;AAAEhF,IAAAA,SAAS,EAAE0H;AAAb,GAA3C,CAAP;AACH;;AACD,SAASL,2BAAT,CAAqCrH,SAArC,EAAgD;AAC5C,SAAQA,SAAS,CAACjD,aAAV,KAA4B;AAAE;AAA9B,KACJiD,SAAS,CAAC2H,WAAV,GAAwB9L,kBAAxB,GAA6CsB,IAAI,CAACC,GAAL,EADjD;AAEH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACewK;;;AAcf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;8IArCA,WAAqBjB,aAArB,EAAoC;AAChC,UAAMkB,iBAAiB,GAAGlB,aAA1B;AACA,UAAM;AAAE5B,MAAAA,iBAAF;AAAqBD,MAAAA;AAArB,cAAmDD,oBAAoB,CAACgD,iBAAiB,CAACxJ,SAAnB,CAA7E;;AACA,QAAIyG,mBAAJ,EAAyB;AACrBA,MAAAA,mBAAmB,CAACgD,KAApB,CAA0BC,OAAO,CAACxL,KAAlC;AACH,KAFD,MAGK;AACD;AACA;AACAmK,MAAAA,gBAAgB,CAACmB,iBAAD,CAAhB,CAAoCC,KAApC,CAA0CC,OAAO,CAACxL,KAAlD;AACH;;AACD,WAAOwI,iBAAiB,CAAC9F,GAAzB;AACH;;;;SA0Bc+I;;;;;iJAAf,WAAwBrB,aAAxB,EAAuCC,YAAY,GAAG,KAAtD,EAA6D;AACzD,UAAMiB,iBAAiB,GAAGlB,aAA1B;AACA,UAAMsB,gCAAgC,CAACJ,iBAAiB,CAACxJ,SAAnB,CAAtC,CAFyD,CAGzD;AACA;;AACA,UAAM2B,SAAS,SAAS0G,gBAAgB,CAACmB,iBAAD,EAAoBjB,YAApB,CAAxC;AACA,WAAO5G,SAAS,CAAClD,KAAjB;AACH;;;;SACcmL;;;AAQf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;yKAvBA,WAAgD5J,SAAhD,EAA2D;AACvD,UAAM;AAAEyG,MAAAA;AAAF,cAAgCD,oBAAoB,CAACxG,SAAD,CAA1D;;AACA,QAAIyG,mBAAJ,EAAyB;AACrB;AACA,YAAMA,mBAAN;AACH;AACJ;;;;SAkBcoD;;;;;kKAAf,WAAyC7J,SAAzC,EAAoD0G,iBAApD,EAAuE;AACnE,UAAM7F,QAAQ,GAAGiJ,iBAAiB,CAAC9J,SAAD,EAAY0G,iBAAZ,CAAlC;AACA,UAAMxG,OAAO,GAAGH,kBAAkB,CAACC,SAAD,EAAY0G,iBAAZ,CAAlC;AACA,UAAMxF,OAAO,GAAG;AACZC,MAAAA,MAAM,EAAE,QADI;AAEZjB,MAAAA;AAFY,KAAhB;AAIA,UAAM1B,QAAQ,SAAS6B,kBAAkB,CAAC,MAAMiB,KAAK,CAACT,QAAD,EAAWK,OAAX,CAAZ,CAAzC;;AACA,QAAI,CAAC1C,QAAQ,CAAC+C,EAAd,EAAkB;AACd,kBAAYvC,oBAAoB,CAAC,qBAAD,EAAwBR,QAAxB,CAAhC;AACH;AACJ;;;;AACD,SAASsL,iBAAT,CAA2B9J,SAA3B,EAAsC;AAAEY,EAAAA;AAAF,CAAtC,EAA+C;AAC3C,SAAQ,GAAEvC,wBAAwB,CAAC2B,SAAD,CAAY,IAAGY,GAAI,EAArD;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;;SACemJ;;;AA0Bf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;4JAlDA,WAAmCzB,aAAnC,EAAkD;AAC9C,UAAM;AAAEtI,MAAAA;AAAF,QAAgBsI,aAAtB;AACA,UAAMvB,KAAK,SAASZ,MAAM,CAACnG,SAAD,EAAY2G,QAAQ,IAAI;AAC9C,UAAIA,QAAQ,IAAIA,QAAQ,CAACjF,kBAAT,KAAgC;AAAE;AAAlD,QAAqE;AACjE;AACA,eAAO6E,SAAP;AACH;;AACD,aAAOI,QAAP;AACH,KANyB,CAA1B;;AAOA,QAAII,KAAJ,EAAW;AACP,UAAIA,KAAK,CAACrF,kBAAN,KAA6B;AAAE;AAAnC,QAAsD;AAClD;AACA,cAAM1D,aAAa,CAACqB,MAAd,CAAqB;AAA8B;AAAnD,SAAN;AACH,OAHD,MAIK,IAAI0H,KAAK,CAACrF,kBAAN,KAA6B;AAAE;AAAnC,QAAoD;AACrD,YAAI,CAACuF,SAAS,CAACC,MAAf,EAAuB;AACnB,gBAAMlJ,aAAa,CAACqB,MAAd,CAAqB;AAAc;AAAnC,WAAN;AACH,SAFD,MAGK;AACD,gBAAMwK,yBAAyB,CAAC7J,SAAD,EAAY+G,KAAZ,CAA/B;AACA,gBAAMb,MAAM,CAAClG,SAAD,CAAZ;AACH;AACJ;AACJ;AACJ;;;;AA2BD,SAASgK,UAAT,CAAoB1B,aAApB,EAAmCxE,QAAnC,EAA6C;AACzC,QAAM;AAAE9D,IAAAA;AAAF,MAAgBsI,aAAtB;AACAzE,EAAAA,WAAW,CAAC7D,SAAD,EAAY8D,QAAZ,CAAX;AACA,SAAO,MAAM;AACTO,IAAAA,cAAc,CAACrE,SAAD,EAAY8D,QAAZ,CAAd;AACH,GAFD;AAGH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASmG,gBAAT,CAA0BC,GAAG,GAAGpN,qDAAM,EAAtC,EAA0C;AACtC,QAAM0M,iBAAiB,GAAGzM,2DAAY,CAACmN,GAAD,EAAM,eAAN,CAAZ,CAAmClC,YAAnC,EAA1B;;AACA,SAAOwB,iBAAP;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASW,gBAAT,CAA0BD,GAA1B,EAA+B;AAC3B,MAAI,CAACA,GAAD,IAAQ,CAACA,GAAG,CAACE,OAAjB,EAA0B;AACtB,UAAMC,oBAAoB,CAAC,mBAAD,CAA1B;AACH;;AACD,MAAI,CAACH,GAAG,CAAC5M,IAAT,EAAe;AACX,UAAM+M,oBAAoB,CAAC,UAAD,CAA1B;AACH,GAN0B,CAO3B;;;AACA,QAAMC,UAAU,GAAG,CACf,WADe,EAEf,QAFe,EAGf,OAHe,CAAnB;;AAKA,OAAK,MAAMC,OAAX,IAAsBD,UAAtB,EAAkC;AAC9B,QAAI,CAACJ,GAAG,CAACE,OAAJ,CAAYG,OAAZ,CAAL,EAA2B;AACvB,YAAMF,oBAAoB,CAACE,OAAD,CAA1B;AACH;AACJ;;AACD,SAAO;AACHjH,IAAAA,OAAO,EAAE4G,GAAG,CAAC5M,IADV;AAEHgB,IAAAA,SAAS,EAAE4L,GAAG,CAACE,OAAJ,CAAY9L,SAFpB;AAGHsB,IAAAA,MAAM,EAAEsK,GAAG,CAACE,OAAJ,CAAYxK,MAHjB;AAIHoB,IAAAA,KAAK,EAAEkJ,GAAG,CAACE,OAAJ,CAAYpJ;AAJhB,GAAP;AAMH;;AACD,SAASqJ,oBAAT,CAA8BG,SAA9B,EAAyC;AACrC,SAAOxM,aAAa,CAACqB,MAAd,CAAqB;AAA4B;AAAjD,IAAkF;AACrFmL,IAAAA;AADqF,GAAlF,CAAP;AAGH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,kBAAkB,GAAG,eAA3B;AACA,MAAMC,2BAA2B,GAAG,wBAApC;;AACA,MAAMC,aAAa,GAAIC,SAAD,IAAe;AACjC,QAAMV,GAAG,GAAGU,SAAS,CAACC,WAAV,CAAsB,KAAtB,EAA6B7C,YAA7B,EAAZ,CADiC,CAEjC;;AACA,QAAMhI,SAAS,GAAGmK,gBAAgB,CAACD,GAAD,CAAlC;;AACA,QAAMrC,sBAAsB,GAAG9K,2DAAY,CAACmN,GAAD,EAAM,iBAAN,CAA3C;;AACA,QAAMV,iBAAiB,GAAG;AACtBU,IAAAA,GADsB;AAEtBlK,IAAAA,SAFsB;AAGtB6H,IAAAA,sBAHsB;AAItBiD,IAAAA,OAAO,EAAE,MAAMhJ,OAAO,CAACC,OAAR;AAJO,GAA1B;AAMA,SAAOyH,iBAAP;AACH,CAZD;;AAaA,MAAMuB,eAAe,GAAIH,SAAD,IAAe;AACnC,QAAMV,GAAG,GAAGU,SAAS,CAACC,WAAV,CAAsB,KAAtB,EAA6B7C,YAA7B,EAAZ,CADmC,CAEnC;;AACA,QAAMM,aAAa,GAAGvL,2DAAY,CAACmN,GAAD,EAAMO,kBAAN,CAAZ,CAAsCzC,YAAtC,EAAtB;;AACA,QAAMgD,qBAAqB,GAAG;AAC1BzB,IAAAA,KAAK,EAAE,MAAMA,KAAK,CAACjB,aAAD,CADQ;AAE1BqB,IAAAA,QAAQ,EAAGpB,YAAD,IAAkBoB,QAAQ,CAACrB,aAAD,EAAgBC,YAAhB;AAFV,GAA9B;AAIA,SAAOyC,qBAAP;AACH,CATD;;AAUA,SAASC,qBAAT,GAAiC;AAC7BjO,EAAAA,iEAAkB,CAAC,IAAIE,0DAAJ,CAAcuN,kBAAd,EAAkCE,aAAlC,EAAiD;AAAS;AAA1D,GAAD,CAAlB;;AACA3N,EAAAA,iEAAkB,CAAC,IAAIE,0DAAJ,CAAcwN,2BAAd,EAA2CK,eAA3C,EAA4D;AAAU;AAAtE,GAAD,CAAlB;AACH;AAED;AACA;AACA;AACA;AACA;;;AACAE,qBAAqB;AACrBhO,8DAAe,CAACK,IAAD,EAAOC,OAAP,CAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5mCA;AACA;AACA;AACA;AACA;AAEA,MAAMD,IAAI,GAAG,yBAAb;AACA,MAAMC,OAAO,GAAG,OAAhB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMgO,uBAAN,CAA8B;AAC1BC,EAAAA,WAAW,GAAG;AACV,SAAKC,SAAL,GAAiB,EAAjB;AACH;;AACDC,EAAAA,gBAAgB,CAACC,QAAD,EAAW;AACvB,SAAKF,SAAL,CAAeG,IAAf,CAAoBD,QAApB;AACH;;AACDE,EAAAA,KAAK,GAAG;AACJ,SAAKJ,SAAL,CAAeK,OAAf,CAAuBH,QAAQ,IAAIA,QAAQ,EAA3C;AACH;;AATyB;AAY9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMI,iBAAiB,GAAG,eAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMhO,qBAAqB,GAAG;AAC1B,GAAC;AAAsB;AAAvB,KAAmD,iFADzB;AAE1B,GAAC;AAA0B;AAA3B,KAA2D,kEAFjC;AAG1B,GAAC;AAAuB;AAAxB,KAAqD,uDAH3B;AAI1B,GAAC;AAAsB;AAAvB,KAAmD,8DAJzB;AAK1B,GAAC;AAAe;AAAhB,KAAqC,6EALX;AAM1B,GAAC;AAAc;AAAf,KAAmC,kFANT;AAO1B,GAAC;AAAc;AAAf,KAAmC,gFAPT;AAQ1B,GAAC;AAAiB;AAAlB,KAAyC,mFARf;AAS1B,GAAC;AAAuB;AAAxB,KAA8C,4EAC1C,2CAVsB;AAW1B,GAAC;AAAgB;AAAjB,KAAuC,yCACnC,4DAZsB;AAa1B,GAAC;AAAiB;AAAlB,KAAyC,8EACrC,4DADqC,GAErC,+FAfsB;AAgB1B,GAAC;AAAqB;AAAtB,KAA0C,2CACtC,2CAjBsB;AAkB1B,GAAC;AAAe;AAAhB,KAAqC;AAlBX,CAA9B;AAoBA,MAAMC,aAAa,GAAG,IAAIb,wDAAJ,CAAiB;AAAe;AAAhC,EAA+C;AAAgB;AAA/D,EAAmFY,qBAAnF,CAAtB,EACA;;AACA,SAASiO,YAAT,CAAsBjH,CAAtB,EAAyBkH,SAAzB,EAAoC;AAChC,SAAOlH,CAAC,YAAY3H,yDAAb,IAA8B2H,CAAC,CAAC5G,IAAF,CAAO+N,OAAP,CAAeD,SAAf,MAA8B,CAAC,CAApE;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAME,yBAAyB,GAAG,KAAlC;AACA,MAAMC,wBAAwB,GAAG,EAAjC;AACA,MAAMC,wBAAwB,GAAG,CAAjC;AACA,MAAMC,qBAAqB,GAAG,CAAC,GAAD,EAAM,MAAN,EAAc,GAAd,EAAmB,KAAnB,EAA0B,GAA1B,EAA+B,IAA/B,CAA9B;;AACA,MAAMC,KAAN,CAAY;AACRf,EAAAA,WAAW,CAACgB,OAAD,EAAUC,MAAM,GAAGL,wBAAnB,EAA6C;AACpD,SAAKI,OAAL,GAAeA,OAAf;AACA,SAAKC,MAAL,GAAcA,MAAd;AACH;;AACDC,EAAAA,QAAQ,GAAG;AACP,WAAO,KAAKD,MAAZ;AACH;;AACDE,EAAAA,SAAS,GAAG;AACR,QAAI,KAAKH,OAAL,KAAiB,QAArB,EAA+B;AAC3B,aAAOL,yBAAP;AACH;;AACD,WAAOG,qBAAqB,CAACJ,OAAtB,CAA8B,KAAKO,MAAL,CAAYG,WAAZ,EAA9B,KAA4D,CAAnE;AACH;;AACDC,EAAAA,QAAQ,GAAG;AACP,QAAI,KAAKL,OAAL,KAAiB,QAArB,EAA+B;AAC3B,aAAOH,wBAAP;AACH;;AACD,QAAIS,GAAG,GAAGrM,MAAM,CAAC,KAAKgM,MAAN,CAAhB;;AACA,QAAIM,KAAK,CAACD,GAAD,CAAT,EAAgB;AACZA,MAAAA,GAAG,GAAGT,wBAAN;AACH;;AACD,WAAOS,GAAP;AACH;;AACDE,EAAAA,SAAS,GAAG;AACR,WAAO,KAAKR,OAAZ;AACH;;AA1BO;AA6BZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASS,eAAT,CAAyB/C,GAAG,GAAGpN,qDAAM,EAArC,EAAyC;AACrCoN,EAAAA,GAAG,GAAGmB,kEAAkB,CAACnB,GAAD,CAAxB;;AACA,QAAMgD,UAAU,GAAGnQ,2DAAY,CAACmN,GAAD,EAAM6B,iBAAN,CAA/B;;AACA,SAAOmB,UAAU,CAAClF,YAAX,EAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACemF;;;AAoBf;AACA;AACA;AACA;AACA;AACA;AACA;;;;iJA1BA,WAAwBC,YAAxB,EAAsC;AAClC,UAAMC,EAAE,GAAGhC,kEAAkB,CAAC+B,YAAD,CAA7B;AACA,UAAM,CAACE,2BAAD,EAA8BC,gBAA9B,UAAwDzL,OAAO,CAAC0L,GAAR,CAAY,CACtEH,EAAE,CAACI,QAAH,CAAYC,8BAAZ,EADsE,EAEtEL,EAAE,CAACI,QAAH,CAAYE,mBAAZ,EAFsE,CAAZ,CAA9D;;AAIA,QAAI,CAACL,2BAAD,IACA,CAACA,2BAA2B,CAACM,MAD7B,IAEA,CAACN,2BAA2B,CAACO,IAF7B,IAGAP,2BAA2B,CAACO,IAA5B,KAAqCN,gBAHzC,EAG2D;AACvD;AACA;AACA,aAAO,KAAP;AACH;;AACD,UAAMzL,OAAO,CAAC0L,GAAR,CAAY,CACdH,EAAE,CAACS,aAAH,CAAiBC,eAAjB,CAAiCT,2BAA2B,CAACM,MAA7D,CADc,EAEdP,EAAE,CAACI,QAAH,CAAYO,mBAAZ,CAAgCV,2BAA2B,CAACO,IAA5D,CAFc,CAAZ,CAAN;AAIA,WAAO,IAAP;AACH;;;;AAQD,SAASI,iBAAT,CAA2Bb,YAA3B,EAAyC;AACrC,QAAMC,EAAE,GAAGhC,kEAAkB,CAAC+B,YAAD,CAA7B;;AACA,MAAI,CAACC,EAAE,CAACa,kBAAR,EAA4B;AACxBb,IAAAA,EAAE,CAACa,kBAAH,GAAwBb,EAAE,CAACS,aAAH,CAAiBK,eAAjB,GAAmCC,IAAnC,CAAwC,MAAM;AAClEf,MAAAA,EAAE,CAACgB,yBAAH,GAA+B,IAA/B;AACH,KAFuB,CAAxB;AAGH;;AACD,SAAOhB,EAAE,CAACa,kBAAV;AACH;AACD;AACA;AACA;AACA;AACA;;;SACeI;;;AAiCf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;oJAxCA,WAA2BlB,YAA3B,EAAyC;AACrC,UAAMC,EAAE,GAAGhC,kEAAkB,CAAC+B,YAAD,CAA7B,CADqC,CAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,UAAMmB,WAAW,GAAG,IAAIhD,uBAAJ,EAApB;AACAvJ,IAAAA,UAAU,kJAAC,aAAY;AACnB;AACAuM,MAAAA,WAAW,CAAC1C,KAAZ;AACH,KAHS,GAGPwB,EAAE,CAACmB,QAAH,CAAYC,kBAHL,CAAV,CAbqC,CAiBrC;;AACA,QAAI;AACA,YAAMpB,EAAE,CAACqB,OAAH,CAAWpN,KAAX,CAAiB;AACnBqN,QAAAA,iBAAiB,EAAEtB,EAAE,CAACmB,QAAH,CAAYI,0BADZ;AAEnBC,QAAAA,MAAM,EAAEN;AAFW,OAAjB,CAAN;AAIA,YAAMlB,EAAE,CAACS,aAAH,CAAiBgB,kBAAjB,CAAoC,SAApC,CAAN;AACH,KAND,CAOA,OAAO/J,CAAP,EAAU;AACN,YAAMgK,eAAe,GAAG/C,YAAY,CAACjH,CAAD,EAAI;AAAiB;AAArB,OAAZ,GAClB,UADkB,GAElB,SAFN;AAGA,YAAMsI,EAAE,CAACS,aAAH,CAAiBgB,kBAAjB,CAAoCC,eAApC,CAAN;AACA,YAAMhK,CAAN;AACH;AACJ;;;;AASD,SAASiK,MAAT,CAAgB5B,YAAhB,EAA8B;AAC1B,QAAMC,EAAE,GAAGhC,kEAAkB,CAAC+B,YAAD,CAA7B;AACA,SAAO6B,UAAU,CAAC5B,EAAE,CAACS,aAAH,CAAiBoB,eAAjB,EAAD,EAAqC7B,EAAE,CAAC8B,aAAxC,CAAV,CAAiEC,MAAjE,CAAwE,CAACC,UAAD,EAAa3L,GAAb,KAAqB;AAChG2L,IAAAA,UAAU,CAAC3L,GAAD,CAAV,GAAkB4L,QAAQ,CAAClC,YAAD,EAAe1J,GAAf,CAA1B;AACA,WAAO2L,UAAP;AACH,GAHM,EAGJ,EAHI,CAAP;AAIH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,UAAT,CAAoBnC,YAApB,EAAkC1J,GAAlC,EAAuC;AACnC,SAAO4L,QAAQ,CAACjE,kEAAkB,CAAC+B,YAAD,CAAnB,EAAmC1J,GAAnC,CAAR,CAAgDiJ,SAAhD,EAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS6C,SAAT,CAAmBpC,YAAnB,EAAiC1J,GAAjC,EAAsC;AAClC,SAAO4L,QAAQ,CAACjE,kEAAkB,CAAC+B,YAAD,CAAnB,EAAmC1J,GAAnC,CAAR,CAAgDmJ,QAAhD,EAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS4C,SAAT,CAAmBrC,YAAnB,EAAiC1J,GAAjC,EAAsC;AAClC,SAAO4L,QAAQ,CAACjE,kEAAkB,CAAC+B,YAAD,CAAnB,EAAmC1J,GAAnC,CAAR,CAAgDgJ,QAAhD,EAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS4C,QAAT,CAAkBlC,YAAlB,EAAgC1J,GAAhC,EAAqC;AACjC,QAAM2J,EAAE,GAAGhC,kEAAkB,CAAC+B,YAAD,CAA7B;;AACA,MAAI,CAACC,EAAE,CAACgB,yBAAR,EAAmC;AAC/BhB,IAAAA,EAAE,CAACqC,OAAH,CAAWC,KAAX,CAAkB,kCAAiCjM,GAAI,wCAAtC,GACb,oFADJ;AAEH;;AACD,QAAMkM,YAAY,GAAGvC,EAAE,CAACS,aAAH,CAAiBoB,eAAjB,EAArB;;AACA,MAAIU,YAAY,IAAIA,YAAY,CAAClM,GAAD,CAAZ,KAAsB6C,SAA1C,EAAqD;AACjD,WAAO,IAAIgG,KAAJ,CAAU,QAAV,EAAoBqD,YAAY,CAAClM,GAAD,CAAhC,CAAP;AACH,GAFD,MAGK,IAAI2J,EAAE,CAAC8B,aAAH,IAAoB9B,EAAE,CAAC8B,aAAH,CAAiBzL,GAAjB,MAA0B6C,SAAlD,EAA6D;AAC9D,WAAO,IAAIgG,KAAJ,CAAU,SAAV,EAAqBlK,MAAM,CAACgL,EAAE,CAAC8B,aAAH,CAAiBzL,GAAjB,CAAD,CAA3B,CAAP;AACH;;AACD2J,EAAAA,EAAE,CAACqC,OAAH,CAAWC,KAAX,CAAkB,mCAAkCjM,GAAI,IAAvC,GACb,6DADJ;;AAEA,SAAO,IAAI6I,KAAJ,CAAU,QAAV,CAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASsD,WAAT,CAAqBzC,YAArB,EAAmC0C,QAAnC,EAA6C;AACzC,QAAMzC,EAAE,GAAGhC,kEAAkB,CAAC+B,YAAD,CAA7B;;AACA,UAAQ0C,QAAR;AACI,SAAK,OAAL;AACIzC,MAAAA,EAAE,CAACqC,OAAH,CAAWI,QAAX,GAAsB3E,4DAAtB;AACA;;AACJ,SAAK,QAAL;AACIkC,MAAAA,EAAE,CAACqC,OAAH,CAAWI,QAAX,GAAsB3E,6DAAtB;AACA;;AACJ;AACIkC,MAAAA,EAAE,CAACqC,OAAH,CAAWI,QAAX,GAAsB3E,4DAAtB;AARR;AAUH;AACD;AACA;AACA;;;AACA,SAAS8D,UAAT,CAAoBiB,IAAI,GAAG,EAA3B,EAA+BC,IAAI,GAAG,EAAtC,EAA0C;AACtC,SAAOlH,MAAM,CAACmH,IAAP,CAAYnH,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBgH,IAAlB,CAAd,EAAuCC,IAAvC,CAAZ,CAAP;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAME,aAAN,CAAoB;AAChB7E,EAAAA,WAAW,CAAC8E,MAAD,EAASC,OAAT,EAAkBC,YAAlB,EAAgCC,MAAhC,EAAwC;AAC/C,SAAKH,MAAL,GAAcA,MAAd;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,YAAL,GAAoBA,YAApB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIC,EAAAA,iBAAiB,CAAC/B,iBAAD,EAAoBgC,kCAApB,EAAwD;AACrE;AACA,QAAI,CAACA,kCAAL,EAAyC;AACrC,WAAKF,MAAL,CAAYd,KAAZ,CAAkB,8CAAlB;AACA,aAAO,KAAP;AACH,KALoE,CAMrE;;;AACA,UAAMiB,cAAc,GAAG9R,IAAI,CAACC,GAAL,KAAa4R,kCAApC;AACA,UAAMD,iBAAiB,GAAGE,cAAc,IAAIjC,iBAA5C;AACA,SAAK8B,MAAL,CAAYd,KAAZ,CAAkB,8BACb,sBAAqBiB,cAAe,GADvB,GAEb,+DAA8DjC,iBAAkB,GAFnE,GAGb,kBAAiB+B,iBAAkB,GAHxC;AAIA,WAAOA,iBAAP;AACH;;AACKpP,EAAAA,KAAK,CAACJ,OAAD,EAAU;AAAA;;AAAA;AACjB;AACA,YAAM,CAACyP,kCAAD,EAAqCrD,2BAArC,UAA0ExL,OAAO,CAAC0L,GAAR,CAAY,CACxF,KAAI,CAAC+C,OAAL,CAAaM,qCAAb,EADwF,EAExF,KAAI,CAACN,OAAL,CAAa7C,8BAAb,EAFwF,CAAZ,CAAhF,CAFiB,CAMjB;;AACA,UAAIJ,2BAA2B,IAC3B,KAAI,CAACoD,iBAAL,CAAuBxP,OAAO,CAACyN,iBAA/B,EAAkDgC,kCAAlD,CADJ,EAC2F;AACvF,eAAOrD,2BAAP;AACH,OAVgB,CAWjB;AACA;;;AACApM,MAAAA,OAAO,CAAC2M,IAAR,GACIP,2BAA2B,IAAIA,2BAA2B,CAACO,IAD/D,CAbiB,CAejB;;AACA,YAAMrP,QAAQ,SAAS,KAAI,CAAC8R,MAAL,CAAYhP,KAAZ,CAAkBJ,OAAlB,CAAvB,CAhBiB,CAiBjB;;AACA,YAAM4P,iBAAiB,GAAG,CACtB;AACA,WAAI,CAACN,YAAL,CAAkBO,qCAAlB,CAAwDjS,IAAI,CAACC,GAAL,EAAxD,CAFsB,CAA1B;;AAIA,UAAIP,QAAQ,CAACkB,MAAT,KAAoB,GAAxB,EAA6B;AACzB;AACAoR,QAAAA,iBAAiB,CAAClF,IAAlB,CAAuB,KAAI,CAAC2E,OAAL,CAAaS,8BAAb,CAA4CxS,QAA5C,CAAvB;AACH;;AACD,YAAMsD,OAAO,CAAC0L,GAAR,CAAYsD,iBAAZ,CAAN;AACA,aAAOtS,QAAP;AA3BiB;AA4BpB;;AA3De;AA8DpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASyS,eAAT,CAAyBC,iBAAiB,GAAGjK,SAA7C,EAAwD;AACpD,SACA;AACCiK,IAAAA,iBAAiB,CAACC,SAAlB,IAA+BD,iBAAiB,CAACC,SAAlB,CAA4B,CAA5B,CAAhC,IACI;AACA;AACAD,IAAAA,iBAAiB,CAACE,QALtB,CAMA;;AANA;AAQH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;;AACA,MAAMC,UAAN,CAAiB;AACb7F,EAAAA,WAAW,CAAC8F,qBAAD,EAAwBrQ,UAAxB,EAAoCsQ,SAApC,EAA+CjT,SAA/C,EAA0DsB,MAA1D,EAAkEoB,KAAlE,EAAyE;AAChF,SAAKsQ,qBAAL,GAA6BA,qBAA7B;AACA,SAAKrQ,UAAL,GAAkBA,UAAlB;AACA,SAAKsQ,SAAL,GAAiBA,SAAjB;AACA,SAAKjT,SAAL,GAAiBA,SAAjB;AACA,SAAKsB,MAAL,GAAcA,MAAd;AACA,SAAKoB,KAAL,GAAaA,KAAb;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACUM,EAAAA,KAAK,CAACJ,OAAD,EAAU;AAAA;;AAAA;AACjB,YAAM,CAACsQ,cAAD,EAAiBC,iBAAjB,UAA4C3P,OAAO,CAAC0L,GAAR,CAAY,CAC1D,MAAI,CAAC8D,qBAAL,CAA2B/H,KAA3B,EAD0D,EAE1D,MAAI,CAAC+H,qBAAL,CAA2B3H,QAA3B,EAF0D,CAAZ,CAAlD;AAIA,YAAM+H,OAAO,GAAGC,MAAM,CAACC,+BAAP,IACZ,6CADJ;AAEA,YAAMC,GAAG,GAAI,GAAEH,OAAQ,gBAAe,MAAI,CAACpT,SAAU,eAAc,MAAI,CAACiT,SAAU,cAAa,MAAI,CAAC3R,MAAO,EAA3G;AACA,YAAMM,OAAO,GAAG;AACZ,wBAAgB,kBADJ;AAEZ,4BAAoB,MAFR;AAGZ;AACA;AACA,yBAAiBgB,OAAO,CAAC2M,IAAR,IAAgB;AALrB,OAAhB;AAOA,YAAMiE,WAAW,GAAG;AAChB;AACAC,QAAAA,WAAW,EAAE,MAAI,CAAC9Q,UAFF;AAGhB+Q,QAAAA,eAAe,EAAER,cAHD;AAIhBS,QAAAA,qBAAqB,EAAER,iBAJP;AAKhBS,QAAAA,MAAM,EAAE,MAAI,CAAClR,KALG;AAMhBmR,QAAAA,aAAa,EAAElB,eAAe;AAC9B;;AAPgB,OAApB;AASA,YAAM7G,OAAO,GAAG;AACZjJ,QAAAA,MAAM,EAAE,MADI;AAEZjB,QAAAA,OAFY;AAGZY,QAAAA,IAAI,EAAEM,IAAI,CAACC,SAAL,CAAeyQ,WAAf;AAHM,OAAhB,CAxBiB,CA6BjB;;AACA,YAAMM,YAAY,GAAG9Q,KAAK,CAACuQ,GAAD,EAAMzH,OAAN,CAA1B;AACA,YAAMiI,cAAc,GAAG,IAAIvQ,OAAJ,CAAY,CAACwQ,QAAD,EAAWlL,MAAX,KAAsB;AACrD;AACAlG,QAAAA,OAAO,CAAC2N,MAAR,CAAenD,gBAAf,CAAgC,MAAM;AAClC;AACA,gBAAMxN,KAAK,GAAG,IAAIqU,KAAJ,CAAU,4BAAV,CAAd;AACArU,UAAAA,KAAK,CAACZ,IAAN,GAAa,YAAb;AACA8J,UAAAA,MAAM,CAAClJ,KAAD,CAAN;AACH,SALD;AAMH,OARsB,CAAvB;AASA,UAAIM,QAAJ;;AACA,UAAI;AACA,cAAMsD,OAAO,CAAC0Q,IAAR,CAAa,CAACJ,YAAD,EAAeC,cAAf,CAAb,CAAN;AACA7T,QAAAA,QAAQ,SAAS4T,YAAjB;AACH,OAHD,CAIA,OAAOK,aAAP,EAAsB;AAClB,YAAIxG,SAAS,GAAG;AAAuB;AAAvC;;AACA,YAAIwG,aAAa,CAACnV,IAAd,KAAuB,YAA3B,EAAyC;AACrC2O,UAAAA,SAAS,GAAG;AAAgB;AAA5B;AACH;;AACD,cAAMjO,aAAa,CAACqB,MAAd,CAAqB4M,SAArB,EAAgC;AAClCyG,UAAAA,oBAAoB,EAAED,aAAa,CAACjT;AADF,SAAhC,CAAN;AAGH;;AACD,UAAIE,MAAM,GAAGlB,QAAQ,CAACkB,MAAtB,CAtDiB,CAuDjB;;AACA,YAAMiT,YAAY,GAAGnU,QAAQ,CAAC0B,OAAT,CAAiB+D,GAAjB,CAAqB,MAArB,KAAgCsC,SAArD;AACA,UAAIqH,MAAJ;AACA,UAAIgF,KAAJ,CA1DiB,CA2DjB;AACA;;AACA,UAAIpU,QAAQ,CAACkB,MAAT,KAAoB,GAAxB,EAA6B;AACzB,YAAImT,YAAJ;;AACA,YAAI;AACAA,UAAAA,YAAY,SAASrU,QAAQ,CAACW,IAAT,EAArB;AACH,SAFD,CAGA,OAAOsT,aAAP,EAAsB;AAClB,gBAAMzU,aAAa,CAACqB,MAAd,CAAqB;AAAqB;AAA1C,YAA6D;AAC/DqT,YAAAA,oBAAoB,EAAED,aAAa,CAACjT;AAD2B,WAA7D,CAAN;AAGH;;AACDoO,QAAAA,MAAM,GAAGiF,YAAY,CAAC,SAAD,CAArB;AACAD,QAAAA,KAAK,GAAGC,YAAY,CAAC,OAAD,CAApB;AACH,OAzEgB,CA0EjB;;;AACA,UAAID,KAAK,KAAK,4BAAd,EAA4C;AACxClT,QAAAA,MAAM,GAAG,GAAT;AACH,OAFD,MAGK,IAAIkT,KAAK,KAAK,WAAd,EAA2B;AAC5BlT,QAAAA,MAAM,GAAG,GAAT;AACH,OAFI,MAGA,IAAIkT,KAAK,KAAK,aAAV,IAA2BA,KAAK,KAAK,cAAzC,EAAyD;AAC1D;AACAhF,QAAAA,MAAM,GAAG,EAAT;AACH,OApFgB,CAqFjB;AACA;AACA;AACA;;;AACA,UAAIlO,MAAM,KAAK,GAAX,IAAkBA,MAAM,KAAK,GAAjC,EAAsC;AAClC,cAAM1B,aAAa,CAACqB,MAAd,CAAqB;AAAe;AAApC,UAAwD;AAC1DyT,UAAAA,UAAU,EAAEpT;AAD8C,SAAxD,CAAN;AAGH;;AACD,aAAO;AAAEA,QAAAA,MAAF;AAAUmO,QAAAA,IAAI,EAAE8E,YAAhB;AAA8B/E,QAAAA;AAA9B,OAAP;AA9FiB;AA+FpB;;AAjHY;AAoHjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASmF,mBAAT,CAA6BlE,MAA7B,EAAqCmE,qBAArC,EAA4D;AACxD,SAAO,IAAIlR,OAAJ,CAAY,CAACC,OAAD,EAAUqF,MAAV,KAAqB;AACpC;AACA,UAAM6L,aAAa,GAAGC,IAAI,CAACC,GAAL,CAASH,qBAAqB,GAAGlU,IAAI,CAACC,GAAL,EAAjC,EAA6C,CAA7C,CAAtB;AACA,UAAMqU,OAAO,GAAGpR,UAAU,CAACD,OAAD,EAAUkR,aAAV,CAA1B,CAHoC,CAIpC;;AACApE,IAAAA,MAAM,CAACnD,gBAAP,CAAwB,MAAM;AAC1B2H,MAAAA,YAAY,CAACD,OAAD,CAAZ,CAD0B,CAE1B;;AACAhM,MAAAA,MAAM,CAACpJ,aAAa,CAACqB,MAAd,CAAqB;AAAiB;AAAtC,QAA4D;AAC/D2T,QAAAA;AAD+D,OAA5D,CAAD,CAAN;AAGH,KAND;AAOH,GAZM,CAAP;AAaH;AACD;AACA;AACA;;;AACA,SAASM,gBAAT,CAA0BvO,CAA1B,EAA6B;AACzB,MAAI,EAAEA,CAAC,YAAY3H,yDAAf,KAAiC,CAAC2H,CAAC,CAAC0C,UAAxC,EAAoD;AAChD,WAAO,KAAP;AACH,GAHwB,CAIzB;;;AACA,QAAMqL,UAAU,GAAGrS,MAAM,CAACsE,CAAC,CAAC0C,UAAF,CAAa,YAAb,CAAD,CAAzB;AACA,SAAQqL,UAAU,KAAK,GAAf,IACJA,UAAU,KAAK,GADX,IAEJA,UAAU,KAAK,GAFX,IAGJA,UAAU,KAAK,GAHnB;AAIH;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMS,cAAN,CAAqB;AACjB/H,EAAAA,WAAW,CAAC8E,MAAD,EAASC,OAAT,EAAkB;AACzB,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAKC,OAAL,GAAeA,OAAf;AACH;;AACKjP,EAAAA,KAAK,CAACJ,OAAD,EAAU;AAAA;;AAAA;AACjB,YAAMsS,gBAAgB,GAAG,OAAO,MAAI,CAACjD,OAAL,CAAakD,mBAAb,EAAP,KAA8C;AACnEC,QAAAA,YAAY,EAAE,CADqD;AAEnEV,QAAAA,qBAAqB,EAAElU,IAAI,CAACC,GAAL;AAF4C,OAAvE;AAIA,aAAO,MAAI,CAAC4U,YAAL,CAAkBzS,OAAlB,EAA2BsS,gBAA3B,CAAP;AALiB;AAMpB;AACD;AACJ;AACA;AACA;AACA;;;AACUG,EAAAA,YAAY,CAACzS,OAAD,EAAU;AAAE8R,IAAAA,qBAAF;AAAyBU,IAAAA;AAAzB,GAAV,EAAmD;AAAA;;AAAA;AACjE;AACA;AACA;AACA,YAAMX,mBAAmB,CAAC7R,OAAO,CAAC2N,MAAT,EAAiBmE,qBAAjB,CAAzB;;AACA,UAAI;AACA,cAAMxU,QAAQ,SAAS,MAAI,CAAC8R,MAAL,CAAYhP,KAAZ,CAAkBJ,OAAlB,CAAvB,CADA,CAEA;;AACA,cAAM,MAAI,CAACqP,OAAL,CAAaqD,sBAAb,EAAN;AACA,eAAOpV,QAAP;AACH,OALD,CAMA,OAAOuG,CAAP,EAAU;AACN,YAAI,CAACuO,gBAAgB,CAACvO,CAAD,CAArB,EAA0B;AACtB,gBAAMA,CAAN;AACH,SAHK,CAIN;;;AACA,cAAMyO,gBAAgB,GAAG;AACrBR,UAAAA,qBAAqB,EAAElU,IAAI,CAACC,GAAL,KAAauM,sEAAsB,CAACoI,YAAD,CADrC;AAErBA,UAAAA,YAAY,EAAEA,YAAY,GAAG;AAFR,SAAzB,CALM,CASN;;AACA,cAAM,MAAI,CAACnD,OAAL,CAAasD,mBAAb,CAAiCL,gBAAjC,CAAN;AACA,eAAO,MAAI,CAACG,YAAL,CAAkBzS,OAAlB,EAA2BsS,gBAA3B,CAAP;AACH;AAvBgE;AAwBpE;;AAzCgB;AA4CrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMM,4BAA4B,GAAG,KAAK,IAA1C,EAAgD;;AAChD,MAAMC,4BAA4B,GAAG,KAAK,EAAL,GAAU,EAAV,GAAe,IAApD,EAA0D;;AAC1D;AACA;AACA;AACA;AACA;;AACA,MAAMC,YAAN,CAAmB;AACfxI,EAAAA,WAAW,EACX;AACAtB,EAAAA,GAFW,EAGX;AACA;AACA;;AACA;AACJ;AACA;AACIwE,EAAAA,OATW;AAUX;AACJ;AACA;AACIZ,EAAAA,aAbW;AAcX;AACJ;AACA;AACIL,EAAAA,QAjBW;AAkBX;AACJ;AACA;AACIiC,EAAAA,OArBW,EAqBF;AACL,SAAKxF,GAAL,GAAWA,GAAX;AACA,SAAKwE,OAAL,GAAeA,OAAf;AACA,SAAKZ,aAAL,GAAqBA,aAArB;AACA,SAAKL,QAAL,GAAgBA,QAAhB;AACA,SAAKiC,OAAL,GAAeA,OAAf;AACA;AACR;AACA;AACA;;AACQ,SAAKrB,yBAAL,GAAiC,KAAjC;AACA,SAAKG,QAAL,GAAgB;AACZC,MAAAA,kBAAkB,EAAEqF,4BADR;AAEZlF,MAAAA,0BAA0B,EAAEmF;AAFhB,KAAhB;AAIA,SAAK5E,aAAL,GAAqB,EAArB;AACH;;AACkB,MAAf8E,eAAe,GAAG;AAClB,WAAO,KAAKnG,aAAL,CAAmB+C,qCAAnB,MAA8D,CAAC,CAAtE;AACH;;AACkB,MAAf9B,eAAe,GAAG;AAClB,WAAO,KAAKjB,aAAL,CAAmBoG,kBAAnB,MAA2C,cAAlD;AACH;;AA5Cc;AA+CnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;;AACA,SAASC,eAAT,CAAyBC,KAAzB,EAAgCnI,SAAhC,EAA2C;AACvC,QAAMwG,aAAa,GAAG2B,KAAK,CAACC,MAAN,CAAanW,KAAb,IAAsBqI,SAA5C;AACA,SAAOvI,aAAa,CAACqB,MAAd,CAAqB4M,SAArB,EAAgC;AACnCyG,IAAAA,oBAAoB,EAAED,aAAa,IAAIA,aAAa,CAACjT;AADlB,GAAhC,CAAP;AAGH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAM8U,mBAAmB,GAAG,qBAA5B;AACA,MAAMC,OAAO,GAAG,wBAAhB;AACA,MAAMC,UAAU,GAAG,CAAnB,EACA;;AACA,SAASC,YAAT,GAAwB;AACpB,SAAO,IAAI3S,OAAJ,CAAY,CAACC,OAAD,EAAUqF,MAAV,KAAqB;AACpC,UAAMlG,OAAO,GAAGwT,SAAS,CAACC,IAAV,CAAeJ,OAAf,EAAwBC,UAAxB,CAAhB;;AACAtT,IAAAA,OAAO,CAAC0T,OAAR,GAAkBR,KAAK,IAAI;AACvBhN,MAAAA,MAAM,CAAC+M,eAAe,CAACC,KAAD,EAAQ;AAAe;AAAvB,OAAhB,CAAN;AACH,KAFD;;AAGAlT,IAAAA,OAAO,CAAC2T,SAAR,GAAoBT,KAAK,IAAI;AACzBrS,MAAAA,OAAO,CAACqS,KAAK,CAACC,MAAN,CAAa9T,MAAd,CAAP;AACH,KAFD;;AAGAW,IAAAA,OAAO,CAAC4T,eAAR,GAA0BV,KAAK,IAAI;AAC/B,YAAMzO,EAAE,GAAGyO,KAAK,CAACC,MAAN,CAAa9T,MAAxB,CAD+B,CAE/B;AACA;AACA;AACA;AACA;;AACA,cAAQ6T,KAAK,CAAC5O,UAAd;AACI,aAAK,CAAL;AACIG,UAAAA,EAAE,CAACF,iBAAH,CAAqB6O,mBAArB,EAA0C;AACtCS,YAAAA,OAAO,EAAE;AAD6B,WAA1C;AAFR;AAMH,KAbD;AAcH,GAtBM,CAAP;AAuBH;AACD;AACA;AACA;;;AACA,MAAMC,OAAN,CAAc;AACV;AACJ;AACA;AACA;AACA;AACIxJ,EAAAA,WAAW,CAACxK,KAAD,EAAQsC,OAAR,EAAiBiO,SAAjB,EAA4B0D,aAAa,GAAGR,YAAY,EAAxD,EAA4D;AACnE,SAAKzT,KAAL,GAAaA,KAAb;AACA,SAAKsC,OAAL,GAAeA,OAAf;AACA,SAAKiO,SAAL,GAAiBA,SAAjB;AACA,SAAK0D,aAAL,GAAqBA,aAArB;AACH;;AACDf,EAAAA,kBAAkB,GAAG;AACjB,WAAO,KAAKjQ,GAAL,CAAS,mBAAT,CAAP;AACH;;AACD6K,EAAAA,kBAAkB,CAACpP,MAAD,EAAS;AACvB,WAAO,KAAKyE,GAAL,CAAS,mBAAT,EAA8BzE,MAA9B,CAAP;AACH,GAjBS,CAkBV;AACA;;;AACAmR,EAAAA,qCAAqC,GAAG;AACpC,WAAO,KAAK5M,GAAL,CAAS,wCAAT,CAAP;AACH;;AACD8M,EAAAA,qCAAqC,CAACmE,SAAD,EAAY;AAC7C,WAAO,KAAK/Q,GAAL,CAAS,wCAAT,EAAmD+Q,SAAnD,CAAP;AACH;;AACDxH,EAAAA,8BAA8B,GAAG;AAC7B,WAAO,KAAKzJ,GAAL,CAAS,gCAAT,CAAP;AACH;;AACD+M,EAAAA,8BAA8B,CAACxS,QAAD,EAAW;AACrC,WAAO,KAAK2F,GAAL,CAAS,gCAAT,EAA2C3F,QAA3C,CAAP;AACH;;AACD0Q,EAAAA,eAAe,GAAG;AACd,WAAO,KAAKjL,GAAL,CAAS,eAAT,CAAP;AACH;;AACD8J,EAAAA,eAAe,CAACH,MAAD,EAAS;AACpB,WAAO,KAAKzJ,GAAL,CAAS,eAAT,EAA0ByJ,MAA1B,CAAP;AACH;;AACDD,EAAAA,mBAAmB,GAAG;AAClB,WAAO,KAAK1J,GAAL,CAAS,oBAAT,CAAP;AACH;;AACD+J,EAAAA,mBAAmB,CAACmH,IAAD,EAAO;AACtB,WAAO,KAAKhR,GAAL,CAAS,oBAAT,EAA+BgR,IAA/B,CAAP;AACH;;AACD1B,EAAAA,mBAAmB,GAAG;AAClB,WAAO,KAAKxP,GAAL,CAAS,mBAAT,CAAP;AACH;;AACD4P,EAAAA,mBAAmB,CAACuB,QAAD,EAAW;AAC1B,WAAO,KAAKjR,GAAL,CAAS,mBAAT,EAA8BiR,QAA9B,CAAP;AACH;;AACDxB,EAAAA,sBAAsB,GAAG;AACrB,WAAO,KAAKtP,MAAL,CAAY,mBAAZ,CAAP;AACH;;AACKL,EAAAA,GAAG,CAACP,GAAD,EAAM;AAAA;;AAAA;AACX,YAAMiC,EAAE,SAAS,MAAI,CAACsP,aAAtB;AACA,aAAO,IAAInT,OAAJ,CAAY,CAACC,OAAD,EAAUqF,MAAV,KAAqB;AACpC,cAAMvB,WAAW,GAAGF,EAAE,CAACE,WAAH,CAAe,CAACyO,mBAAD,CAAf,EAAsC,UAAtC,CAApB;AACA,cAAMxO,WAAW,GAAGD,WAAW,CAACC,WAAZ,CAAwBwO,mBAAxB,CAApB;;AACA,cAAMe,YAAY,GAAG,MAAI,CAACC,kBAAL,CAAwB5R,GAAxB,CAArB;;AACA,YAAI;AACA,gBAAMxC,OAAO,GAAG4E,WAAW,CAAC7B,GAAZ,CAAgBoR,YAAhB,CAAhB;;AACAnU,UAAAA,OAAO,CAAC0T,OAAR,GAAkBR,KAAK,IAAI;AACvBhN,YAAAA,MAAM,CAAC+M,eAAe,CAACC,KAAD,EAAQ;AAAc;AAAtB,aAAhB,CAAN;AACH,WAFD;;AAGAlT,UAAAA,OAAO,CAAC2T,SAAR,GAAoBT,KAAK,IAAI;AACzB,kBAAM7T,MAAM,GAAG6T,KAAK,CAACC,MAAN,CAAa9T,MAA5B;;AACA,gBAAIA,MAAJ,EAAY;AACRwB,cAAAA,OAAO,CAACxB,MAAM,CAACmF,KAAR,CAAP;AACH,aAFD,MAGK;AACD3D,cAAAA,OAAO,CAACwE,SAAD,CAAP;AACH;AACJ,WARD;AASH,SAdD,CAeA,OAAOxB,CAAP,EAAU;AACNqC,UAAAA,MAAM,CAACpJ,aAAa,CAACqB,MAAd,CAAqB;AAAc;AAAnC,YAAsD;AACzDqT,YAAAA,oBAAoB,EAAE3N,CAAC,IAAIA,CAAC,CAACvF;AAD4B,WAAtD,CAAD,CAAN;AAGH;AACJ,OAxBM,CAAP;AAFW;AA2Bd;;AACK2E,EAAAA,GAAG,CAACT,GAAD,EAAMgC,KAAN,EAAa;AAAA;;AAAA;AAClB,YAAMC,EAAE,SAAS,MAAI,CAACsP,aAAtB;AACA,aAAO,IAAInT,OAAJ,CAAY,CAACC,OAAD,EAAUqF,MAAV,KAAqB;AACpC,cAAMvB,WAAW,GAAGF,EAAE,CAACE,WAAH,CAAe,CAACyO,mBAAD,CAAf,EAAsC,WAAtC,CAApB;AACA,cAAMxO,WAAW,GAAGD,WAAW,CAACC,WAAZ,CAAwBwO,mBAAxB,CAApB;;AACA,cAAMe,YAAY,GAAG,MAAI,CAACC,kBAAL,CAAwB5R,GAAxB,CAArB;;AACA,YAAI;AACA,gBAAMxC,OAAO,GAAG4E,WAAW,CAACE,GAAZ,CAAgB;AAC5BqP,YAAAA,YAD4B;AAE5B3P,YAAAA;AAF4B,WAAhB,CAAhB;;AAIAxE,UAAAA,OAAO,CAAC0T,OAAR,GAAmBR,KAAD,IAAW;AACzBhN,YAAAA,MAAM,CAAC+M,eAAe,CAACC,KAAD,EAAQ;AAAc;AAAtB,aAAhB,CAAN;AACH,WAFD;;AAGAlT,UAAAA,OAAO,CAAC2T,SAAR,GAAoB,MAAM;AACtB9S,YAAAA,OAAO;AACV,WAFD;AAGH,SAXD,CAYA,OAAOgD,CAAP,EAAU;AACNqC,UAAAA,MAAM,CAACpJ,aAAa,CAACqB,MAAd,CAAqB;AAAc;AAAnC,YAAsD;AACzDqT,YAAAA,oBAAoB,EAAE3N,CAAC,IAAIA,CAAC,CAACvF;AAD4B,WAAtD,CAAD,CAAN;AAGH;AACJ,OArBM,CAAP;AAFkB;AAwBrB;;AACK8E,EAAAA,MAAM,CAACZ,GAAD,EAAM;AAAA;;AAAA;AACd,YAAMiC,EAAE,SAAS,MAAI,CAACsP,aAAtB;AACA,aAAO,IAAInT,OAAJ,CAAY,CAACC,OAAD,EAAUqF,MAAV,KAAqB;AACpC,cAAMvB,WAAW,GAAGF,EAAE,CAACE,WAAH,CAAe,CAACyO,mBAAD,CAAf,EAAsC,WAAtC,CAApB;AACA,cAAMxO,WAAW,GAAGD,WAAW,CAACC,WAAZ,CAAwBwO,mBAAxB,CAApB;;AACA,cAAMe,YAAY,GAAG,MAAI,CAACC,kBAAL,CAAwB5R,GAAxB,CAArB;;AACA,YAAI;AACA,gBAAMxC,OAAO,GAAG4E,WAAW,CAACxB,MAAZ,CAAmB+Q,YAAnB,CAAhB;;AACAnU,UAAAA,OAAO,CAAC0T,OAAR,GAAmBR,KAAD,IAAW;AACzBhN,YAAAA,MAAM,CAAC+M,eAAe,CAACC,KAAD,EAAQ;AAAiB;AAAzB,aAAhB,CAAN;AACH,WAFD;;AAGAlT,UAAAA,OAAO,CAAC2T,SAAR,GAAoB,MAAM;AACtB9S,YAAAA,OAAO;AACV,WAFD;AAGH,SARD,CASA,OAAOgD,CAAP,EAAU;AACNqC,UAAAA,MAAM,CAACpJ,aAAa,CAACqB,MAAd,CAAqB;AAAiB;AAAtC,YAA4D;AAC/DqT,YAAAA,oBAAoB,EAAE3N,CAAC,IAAIA,CAAC,CAACvF;AADkC,WAA5D,CAAD,CAAN;AAGH;AACJ,OAlBM,CAAP;AAFc;AAqBjB,GA/HS,CAgIV;;;AACA8V,EAAAA,kBAAkB,CAAC5R,GAAD,EAAM;AACpB,WAAO,CAAC,KAAK1C,KAAN,EAAa,KAAKsC,OAAlB,EAA2B,KAAKiO,SAAhC,EAA2C7N,GAA3C,EAAgD6R,IAAhD,EAAP;AACH;;AAnIS;AAsId;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;;AACA,MAAMC,YAAN,CAAmB;AACfhK,EAAAA,WAAW,CAAC+E,OAAD,EAAU;AACjB,SAAKA,OAAL,GAAeA,OAAf;AACH;AACD;AACJ;AACA;;;AACI2D,EAAAA,kBAAkB,GAAG;AACjB,WAAO,KAAKnF,eAAZ;AACH;;AACD8B,EAAAA,qCAAqC,GAAG;AACpC,WAAO,KAAKF,kCAAZ;AACH;;AACDzB,EAAAA,eAAe,GAAG;AACd,WAAO,KAAKU,YAAZ;AACH;AACD;AACJ;AACA;;;AACUzB,EAAAA,eAAe,GAAG;AAAA;;AAAA;AACpB,YAAMsH,sBAAsB,GAAG,MAAI,CAAClF,OAAL,CAAa2D,kBAAb,EAA/B;;AACA,YAAMwB,yCAAyC,GAAG,MAAI,CAACnF,OAAL,CAAaM,qCAAb,EAAlD;;AACA,YAAM8E,mBAAmB,GAAG,MAAI,CAACpF,OAAL,CAAarB,eAAb,EAA5B,CAHoB,CAIpB;AACA;AACA;AACA;AACA;;;AACA,YAAMH,eAAe,SAAS0G,sBAA9B;;AACA,UAAI1G,eAAJ,EAAqB;AACjB,cAAI,CAACA,eAAL,GAAuBA,eAAvB;AACH;;AACD,YAAM4B,kCAAkC,SAAS+E,yCAAjD;;AACA,UAAI/E,kCAAJ,EAAwC;AACpC,cAAI,CAACA,kCAAL,GAA0CA,kCAA1C;AACH;;AACD,YAAMf,YAAY,SAAS+F,mBAA3B;;AACA,UAAI/F,YAAJ,EAAkB;AACd,cAAI,CAACA,YAAL,GAAoBA,YAApB;AACH;AApBmB;AAqBvB;AACD;AACJ;AACA;;;AACId,EAAAA,kBAAkB,CAACpP,MAAD,EAAS;AACvB,SAAKqP,eAAL,GAAuBrP,MAAvB;AACA,WAAO,KAAK6Q,OAAL,CAAazB,kBAAb,CAAgCpP,MAAhC,CAAP;AACH;;AACDqR,EAAAA,qCAAqC,CAAC6E,eAAD,EAAkB;AACnD,SAAKjF,kCAAL,GAA0CiF,eAA1C;AACA,WAAO,KAAKrF,OAAL,CAAaQ,qCAAb,CAAmD6E,eAAnD,CAAP;AACH;;AACD7H,EAAAA,eAAe,CAAC6B,YAAD,EAAe;AAC1B,SAAKA,YAAL,GAAoBA,YAApB;AACA,WAAO,KAAKW,OAAL,CAAaxC,eAAb,CAA6B6B,YAA7B,CAAP;AACH;;AAvDc;AA0DnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASiG,oBAAT,GAAgC;AAC5B7Y,EAAAA,iEAAkB,CAAC,IAAIE,0DAAJ,CAAc6O,iBAAd,EAAiC+J,mBAAjC,EAAsD;AAAS;AAA/D,IAA6EC,oBAA7E,CAAkG,IAAlG,CAAD,CAAlB;;AACA9Y,EAAAA,8DAAe,CAACK,IAAD,EAAOC,OAAP,CAAf;;AACA,WAASuY,mBAAT,CAA6BlL,SAA7B,EAAwC;AAAEoL,IAAAA,kBAAkB,EAAEzE;AAAtB,GAAxC,EAA2E;AACvE;AACA;AACA,UAAMrH,GAAG,GAAGU,SAAS,CAACC,WAAV,CAAsB,KAAtB,EAA6B7C,YAA7B,EAAZ,CAHuE,CAIvE;;AACA,UAAMM,aAAa,GAAGsC,SAAS,CAC1BC,WADiB,CACL,wBADK,EAEjB7C,YAFiB,EAAtB,CALuE,CAQvE;;AACA,QAAI,OAAO2J,MAAP,KAAkB,WAAtB,EAAmC;AAC/B,YAAM3T,aAAa,CAACqB,MAAd,CAAqB;AAAsB;AAA3C,OAAN;AACH,KAXsE,CAYvE;;;AACA,UAAM;AAAEf,MAAAA,SAAF;AAAasB,MAAAA,MAAb;AAAqBoB,MAAAA;AAArB,QAA+BkJ,GAAG,CAACE,OAAzC;;AACA,QAAI,CAAC9L,SAAL,EAAgB;AACZ,YAAMN,aAAa,CAACqB,MAAd,CAAqB;AAA0B;AAA/C,OAAN;AACH;;AACD,QAAI,CAACO,MAAL,EAAa;AACT,YAAM5B,aAAa,CAACqB,MAAd,CAAqB;AAAuB;AAA5C,OAAN;AACH;;AACD,QAAI,CAAC2B,KAAL,EAAY;AACR,YAAMhD,aAAa,CAACqB,MAAd,CAAqB;AAAsB;AAA3C,OAAN;AACH;;AACDkS,IAAAA,SAAS,GAAGA,SAAS,IAAI,UAAzB;AACA,UAAMhB,OAAO,GAAG,IAAIyE,OAAJ,CAAYhU,KAAZ,EAAmBkJ,GAAG,CAAC5M,IAAvB,EAA6BiU,SAA7B,CAAhB;AACA,UAAMf,YAAY,GAAG,IAAIgF,YAAJ,CAAiBjF,OAAjB,CAArB;AACA,UAAME,MAAM,GAAG,IAAIrF,oDAAJ,CAAW9N,IAAX,CAAf,CA1BuE,CA2BvE;AACA;;AACAmT,IAAAA,MAAM,CAACX,QAAP,GAAkB3E,4DAAlB;AACA,UAAM8K,UAAU,GAAG,IAAI5E,UAAJ,CAAe/I,aAAf,EACnB;AACA4C,IAAAA,sDAFmB,EAENqG,SAFM,EAEKjT,SAFL,EAEgBsB,MAFhB,EAEwBoB,KAFxB,CAAnB;AAGA,UAAMkV,cAAc,GAAG,IAAI3C,cAAJ,CAAmB0C,UAAnB,EAA+B1F,OAA/B,CAAvB;AACA,UAAM4F,aAAa,GAAG,IAAI9F,aAAJ,CAAkB6F,cAAlB,EAAkC3F,OAAlC,EAA2CC,YAA3C,EAAyDC,MAAzD,CAAtB;AACA,UAAM2F,oBAAoB,GAAG,IAAIpC,YAAJ,CAAiB9J,GAAjB,EAAsBiM,aAAtB,EAAqC3F,YAArC,EAAmDD,OAAnD,EAA4DE,MAA5D,CAA7B,CAnCuE,CAoCvE;AACA;;AACAxC,IAAAA,iBAAiB,CAACmI,oBAAD,CAAjB;AACA,WAAOA,oBAAP;AACH;AACJ;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACeC;;;AAMf;AACA;AACA;AACA;AACA;;AACA;;;;yJAXA,WAAgCjJ,YAAhC,EAA8C;AAC1CA,IAAAA,YAAY,GAAG/B,kEAAkB,CAAC+B,YAAD,CAAjC;AACA,UAAMkB,WAAW,CAAClB,YAAD,CAAjB;AACA,WAAOD,QAAQ,CAACC,YAAD,CAAf;AACH;;;;AAQDyI,oBAAoB;;;;;;;;;;;ACvqCpB;AACA,EAAE,KAA4D;AAC9D,EAAE,CACmD;AACrD,CAAC,4BAA4B;;AAE7B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,iDAAiD,aAAa;;AAE9D,CAAC","sources":["./node_modules/@firebase/installations/dist/index.esm2017.js","./node_modules/@firebase/remote-config/dist/index.esm2017.js","./node_modules/idb/build/idb.js"],"sourcesContent":["import { getApp, _getProvider, _registerComponent, registerVersion } from '@firebase/app';\nimport { Component } from '@firebase/component';\nimport { ErrorFactory, FirebaseError } from '@firebase/util';\nimport { openDb } from 'idb';\n\nconst name = \"@firebase/installations\";\nconst version = \"0.5.0\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst PENDING_TIMEOUT_MS = 10000;\r\nconst PACKAGE_VERSION = `w:${version}`;\r\nconst INTERNAL_AUTH_VERSION = 'FIS_v2';\r\nconst INSTALLATIONS_API_URL = 'https://firebaseinstallations.googleapis.com/v1';\r\nconst TOKEN_EXPIRATION_BUFFER = 60 * 60 * 1000; // One hour\r\nconst SERVICE = 'installations';\r\nconst SERVICE_NAME = 'Installations';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst ERROR_DESCRIPTION_MAP = {\r\n    [\"missing-app-config-values\" /* MISSING_APP_CONFIG_VALUES */]: 'Missing App configuration value: \"{$valueName}\"',\r\n    [\"not-registered\" /* NOT_REGISTERED */]: 'Firebase Installation is not registered.',\r\n    [\"installation-not-found\" /* INSTALLATION_NOT_FOUND */]: 'Firebase Installation not found.',\r\n    [\"request-failed\" /* REQUEST_FAILED */]: '{$requestName} request failed with error \"{$serverCode} {$serverStatus}: {$serverMessage}\"',\r\n    [\"app-offline\" /* APP_OFFLINE */]: 'Could not process request. Application offline.',\r\n    [\"delete-pending-registration\" /* DELETE_PENDING_REGISTRATION */]: \"Can't delete installation while there is a pending registration request.\"\r\n};\r\nconst ERROR_FACTORY = new ErrorFactory(SERVICE, SERVICE_NAME, ERROR_DESCRIPTION_MAP);\r\n/** Returns true if error is a FirebaseError that is based on an error from the server. */\r\nfunction isServerError(error) {\r\n    return (error instanceof FirebaseError &&\r\n        error.code.includes(\"request-failed\" /* REQUEST_FAILED */));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getInstallationsEndpoint({ projectId }) {\r\n    return `${INSTALLATIONS_API_URL}/projects/${projectId}/installations`;\r\n}\r\nfunction extractAuthTokenInfoFromResponse(response) {\r\n    return {\r\n        token: response.token,\r\n        requestStatus: 2 /* COMPLETED */,\r\n        expiresIn: getExpiresInFromResponseExpiresIn(response.expiresIn),\r\n        creationTime: Date.now()\r\n    };\r\n}\r\nasync function getErrorFromResponse(requestName, response) {\r\n    const responseJson = await response.json();\r\n    const errorData = responseJson.error;\r\n    return ERROR_FACTORY.create(\"request-failed\" /* REQUEST_FAILED */, {\r\n        requestName,\r\n        serverCode: errorData.code,\r\n        serverMessage: errorData.message,\r\n        serverStatus: errorData.status\r\n    });\r\n}\r\nfunction getHeaders({ apiKey }) {\r\n    return new Headers({\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n        'x-goog-api-key': apiKey\r\n    });\r\n}\r\nfunction getHeadersWithAuth(appConfig, { refreshToken }) {\r\n    const headers = getHeaders(appConfig);\r\n    headers.append('Authorization', getAuthorizationHeader(refreshToken));\r\n    return headers;\r\n}\r\n/**\r\n * Calls the passed in fetch wrapper and returns the response.\r\n * If the returned response has a status of 5xx, re-runs the function once and\r\n * returns the response.\r\n */\r\nasync function retryIfServerError(fn) {\r\n    const result = await fn();\r\n    if (result.status >= 500 && result.status < 600) {\r\n        // Internal Server Error. Retry request.\r\n        return fn();\r\n    }\r\n    return result;\r\n}\r\nfunction getExpiresInFromResponseExpiresIn(responseExpiresIn) {\r\n    // This works because the server will never respond with fractions of a second.\r\n    return Number(responseExpiresIn.replace('s', '000'));\r\n}\r\nfunction getAuthorizationHeader(refreshToken) {\r\n    return `${INTERNAL_AUTH_VERSION} ${refreshToken}`;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function createInstallationRequest(appConfig, { fid }) {\r\n    const endpoint = getInstallationsEndpoint(appConfig);\r\n    const headers = getHeaders(appConfig);\r\n    const body = {\r\n        fid,\r\n        authVersion: INTERNAL_AUTH_VERSION,\r\n        appId: appConfig.appId,\r\n        sdkVersion: PACKAGE_VERSION\r\n    };\r\n    const request = {\r\n        method: 'POST',\r\n        headers,\r\n        body: JSON.stringify(body)\r\n    };\r\n    const response = await retryIfServerError(() => fetch(endpoint, request));\r\n    if (response.ok) {\r\n        const responseValue = await response.json();\r\n        const registeredInstallationEntry = {\r\n            fid: responseValue.fid || fid,\r\n            registrationStatus: 2 /* COMPLETED */,\r\n            refreshToken: responseValue.refreshToken,\r\n            authToken: extractAuthTokenInfoFromResponse(responseValue.authToken)\r\n        };\r\n        return registeredInstallationEntry;\r\n    }\r\n    else {\r\n        throw await getErrorFromResponse('Create Installation', response);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** Returns a promise that resolves after given time passes. */\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => {\r\n        setTimeout(resolve, ms);\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction bufferToBase64UrlSafe(array) {\r\n    const b64 = btoa(String.fromCharCode(...array));\r\n    return b64.replace(/\\+/g, '-').replace(/\\//g, '_');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst VALID_FID_PATTERN = /^[cdef][\\w-]{21}$/;\r\nconst INVALID_FID = '';\r\n/**\r\n * Generates a new FID using random values from Web Crypto API.\r\n * Returns an empty string if FID generation fails for any reason.\r\n */\r\nfunction generateFid() {\r\n    try {\r\n        // A valid FID has exactly 22 base64 characters, which is 132 bits, or 16.5\r\n        // bytes. our implementation generates a 17 byte array instead.\r\n        const fidByteArray = new Uint8Array(17);\r\n        const crypto = self.crypto || self.msCrypto;\r\n        crypto.getRandomValues(fidByteArray);\r\n        // Replace the first 4 random bits with the constant FID header of 0b0111.\r\n        fidByteArray[0] = 0b01110000 + (fidByteArray[0] % 0b00010000);\r\n        const fid = encode(fidByteArray);\r\n        return VALID_FID_PATTERN.test(fid) ? fid : INVALID_FID;\r\n    }\r\n    catch (_a) {\r\n        // FID generation errored\r\n        return INVALID_FID;\r\n    }\r\n}\r\n/** Converts a FID Uint8Array to a base64 string representation. */\r\nfunction encode(fidByteArray) {\r\n    const b64String = bufferToBase64UrlSafe(fidByteArray);\r\n    // Remove the 23rd character that was added because of the extra 4 bits at the\r\n    // end of our 17 byte array, and the '=' padding.\r\n    return b64String.substr(0, 22);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** Returns a string key that can be used to identify the app. */\r\nfunction getKey(appConfig) {\r\n    return `${appConfig.appName}!${appConfig.appId}`;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst fidChangeCallbacks = new Map();\r\n/**\r\n * Calls the onIdChange callbacks with the new FID value, and broadcasts the\r\n * change to other tabs.\r\n */\r\nfunction fidChanged(appConfig, fid) {\r\n    const key = getKey(appConfig);\r\n    callFidChangeCallbacks(key, fid);\r\n    broadcastFidChange(key, fid);\r\n}\r\nfunction addCallback(appConfig, callback) {\r\n    // Open the broadcast channel if it's not already open,\r\n    // to be able to listen to change events from other tabs.\r\n    getBroadcastChannel();\r\n    const key = getKey(appConfig);\r\n    let callbackSet = fidChangeCallbacks.get(key);\r\n    if (!callbackSet) {\r\n        callbackSet = new Set();\r\n        fidChangeCallbacks.set(key, callbackSet);\r\n    }\r\n    callbackSet.add(callback);\r\n}\r\nfunction removeCallback(appConfig, callback) {\r\n    const key = getKey(appConfig);\r\n    const callbackSet = fidChangeCallbacks.get(key);\r\n    if (!callbackSet) {\r\n        return;\r\n    }\r\n    callbackSet.delete(callback);\r\n    if (callbackSet.size === 0) {\r\n        fidChangeCallbacks.delete(key);\r\n    }\r\n    // Close broadcast channel if there are no more callbacks.\r\n    closeBroadcastChannel();\r\n}\r\nfunction callFidChangeCallbacks(key, fid) {\r\n    const callbacks = fidChangeCallbacks.get(key);\r\n    if (!callbacks) {\r\n        return;\r\n    }\r\n    for (const callback of callbacks) {\r\n        callback(fid);\r\n    }\r\n}\r\nfunction broadcastFidChange(key, fid) {\r\n    const channel = getBroadcastChannel();\r\n    if (channel) {\r\n        channel.postMessage({ key, fid });\r\n    }\r\n    closeBroadcastChannel();\r\n}\r\nlet broadcastChannel = null;\r\n/** Opens and returns a BroadcastChannel if it is supported by the browser. */\r\nfunction getBroadcastChannel() {\r\n    if (!broadcastChannel && 'BroadcastChannel' in self) {\r\n        broadcastChannel = new BroadcastChannel('[Firebase] FID Change');\r\n        broadcastChannel.onmessage = e => {\r\n            callFidChangeCallbacks(e.data.key, e.data.fid);\r\n        };\r\n    }\r\n    return broadcastChannel;\r\n}\r\nfunction closeBroadcastChannel() {\r\n    if (fidChangeCallbacks.size === 0 && broadcastChannel) {\r\n        broadcastChannel.close();\r\n        broadcastChannel = null;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DATABASE_NAME = 'firebase-installations-database';\r\nconst DATABASE_VERSION = 1;\r\nconst OBJECT_STORE_NAME = 'firebase-installations-store';\r\nlet dbPromise = null;\r\nfunction getDbPromise() {\r\n    if (!dbPromise) {\r\n        dbPromise = openDb(DATABASE_NAME, DATABASE_VERSION, upgradeDB => {\r\n            // We don't use 'break' in this switch statement, the fall-through\r\n            // behavior is what we want, because if there are multiple versions between\r\n            // the old version and the current version, we want ALL the migrations\r\n            // that correspond to those versions to run, not only the last one.\r\n            // eslint-disable-next-line default-case\r\n            switch (upgradeDB.oldVersion) {\r\n                case 0:\r\n                    upgradeDB.createObjectStore(OBJECT_STORE_NAME);\r\n            }\r\n        });\r\n    }\r\n    return dbPromise;\r\n}\r\n/** Assigns or overwrites the record for the given key with the given value. */\r\nasync function set(appConfig, value) {\r\n    const key = getKey(appConfig);\r\n    const db = await getDbPromise();\r\n    const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\r\n    const objectStore = tx.objectStore(OBJECT_STORE_NAME);\r\n    const oldValue = await objectStore.get(key);\r\n    await objectStore.put(value, key);\r\n    await tx.complete;\r\n    if (!oldValue || oldValue.fid !== value.fid) {\r\n        fidChanged(appConfig, value.fid);\r\n    }\r\n    return value;\r\n}\r\n/** Removes record(s) from the objectStore that match the given key. */\r\nasync function remove(appConfig) {\r\n    const key = getKey(appConfig);\r\n    const db = await getDbPromise();\r\n    const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\r\n    await tx.objectStore(OBJECT_STORE_NAME).delete(key);\r\n    await tx.complete;\r\n}\r\n/**\r\n * Atomically updates a record with the result of updateFn, which gets\r\n * called with the current value. If newValue is undefined, the record is\r\n * deleted instead.\r\n * @return Updated value\r\n */\r\nasync function update(appConfig, updateFn) {\r\n    const key = getKey(appConfig);\r\n    const db = await getDbPromise();\r\n    const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\r\n    const store = tx.objectStore(OBJECT_STORE_NAME);\r\n    const oldValue = await store.get(key);\r\n    const newValue = updateFn(oldValue);\r\n    if (newValue === undefined) {\r\n        await store.delete(key);\r\n    }\r\n    else {\r\n        await store.put(newValue, key);\r\n    }\r\n    await tx.complete;\r\n    if (newValue && (!oldValue || oldValue.fid !== newValue.fid)) {\r\n        fidChanged(appConfig, newValue.fid);\r\n    }\r\n    return newValue;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Updates and returns the InstallationEntry from the database.\r\n * Also triggers a registration request if it is necessary and possible.\r\n */\r\nasync function getInstallationEntry(appConfig) {\r\n    let registrationPromise;\r\n    const installationEntry = await update(appConfig, oldEntry => {\r\n        const installationEntry = updateOrCreateInstallationEntry(oldEntry);\r\n        const entryWithPromise = triggerRegistrationIfNecessary(appConfig, installationEntry);\r\n        registrationPromise = entryWithPromise.registrationPromise;\r\n        return entryWithPromise.installationEntry;\r\n    });\r\n    if (installationEntry.fid === INVALID_FID) {\r\n        // FID generation failed. Waiting for the FID from the server.\r\n        return { installationEntry: await registrationPromise };\r\n    }\r\n    return {\r\n        installationEntry,\r\n        registrationPromise\r\n    };\r\n}\r\n/**\r\n * Creates a new Installation Entry if one does not exist.\r\n * Also clears timed out pending requests.\r\n */\r\nfunction updateOrCreateInstallationEntry(oldEntry) {\r\n    const entry = oldEntry || {\r\n        fid: generateFid(),\r\n        registrationStatus: 0 /* NOT_STARTED */\r\n    };\r\n    return clearTimedOutRequest(entry);\r\n}\r\n/**\r\n * If the Firebase Installation is not registered yet, this will trigger the\r\n * registration and return an InProgressInstallationEntry.\r\n *\r\n * If registrationPromise does not exist, the installationEntry is guaranteed\r\n * to be registered.\r\n */\r\nfunction triggerRegistrationIfNecessary(appConfig, installationEntry) {\r\n    if (installationEntry.registrationStatus === 0 /* NOT_STARTED */) {\r\n        if (!navigator.onLine) {\r\n            // Registration required but app is offline.\r\n            const registrationPromiseWithError = Promise.reject(ERROR_FACTORY.create(\"app-offline\" /* APP_OFFLINE */));\r\n            return {\r\n                installationEntry,\r\n                registrationPromise: registrationPromiseWithError\r\n            };\r\n        }\r\n        // Try registering. Change status to IN_PROGRESS.\r\n        const inProgressEntry = {\r\n            fid: installationEntry.fid,\r\n            registrationStatus: 1 /* IN_PROGRESS */,\r\n            registrationTime: Date.now()\r\n        };\r\n        const registrationPromise = registerInstallation(appConfig, inProgressEntry);\r\n        return { installationEntry: inProgressEntry, registrationPromise };\r\n    }\r\n    else if (installationEntry.registrationStatus === 1 /* IN_PROGRESS */) {\r\n        return {\r\n            installationEntry,\r\n            registrationPromise: waitUntilFidRegistration(appConfig)\r\n        };\r\n    }\r\n    else {\r\n        return { installationEntry };\r\n    }\r\n}\r\n/** This will be executed only once for each new Firebase Installation. */\r\nasync function registerInstallation(appConfig, installationEntry) {\r\n    try {\r\n        const registeredInstallationEntry = await createInstallationRequest(appConfig, installationEntry);\r\n        return set(appConfig, registeredInstallationEntry);\r\n    }\r\n    catch (e) {\r\n        if (isServerError(e) && e.customData.serverCode === 409) {\r\n            // Server returned a \"FID can not be used\" error.\r\n            // Generate a new ID next time.\r\n            await remove(appConfig);\r\n        }\r\n        else {\r\n            // Registration failed. Set FID as not registered.\r\n            await set(appConfig, {\r\n                fid: installationEntry.fid,\r\n                registrationStatus: 0 /* NOT_STARTED */\r\n            });\r\n        }\r\n        throw e;\r\n    }\r\n}\r\n/** Call if FID registration is pending in another request. */\r\nasync function waitUntilFidRegistration(appConfig) {\r\n    // Unfortunately, there is no way of reliably observing when a value in\r\n    // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\r\n    // so we need to poll.\r\n    let entry = await updateInstallationRequest(appConfig);\r\n    while (entry.registrationStatus === 1 /* IN_PROGRESS */) {\r\n        // createInstallation request still in progress.\r\n        await sleep(100);\r\n        entry = await updateInstallationRequest(appConfig);\r\n    }\r\n    if (entry.registrationStatus === 0 /* NOT_STARTED */) {\r\n        // The request timed out or failed in a different call. Try again.\r\n        const { installationEntry, registrationPromise } = await getInstallationEntry(appConfig);\r\n        if (registrationPromise) {\r\n            return registrationPromise;\r\n        }\r\n        else {\r\n            // if there is no registrationPromise, entry is registered.\r\n            return installationEntry;\r\n        }\r\n    }\r\n    return entry;\r\n}\r\n/**\r\n * Called only if there is a CreateInstallation request in progress.\r\n *\r\n * Updates the InstallationEntry in the DB based on the status of the\r\n * CreateInstallation request.\r\n *\r\n * Returns the updated InstallationEntry.\r\n */\r\nfunction updateInstallationRequest(appConfig) {\r\n    return update(appConfig, oldEntry => {\r\n        if (!oldEntry) {\r\n            throw ERROR_FACTORY.create(\"installation-not-found\" /* INSTALLATION_NOT_FOUND */);\r\n        }\r\n        return clearTimedOutRequest(oldEntry);\r\n    });\r\n}\r\nfunction clearTimedOutRequest(entry) {\r\n    if (hasInstallationRequestTimedOut(entry)) {\r\n        return {\r\n            fid: entry.fid,\r\n            registrationStatus: 0 /* NOT_STARTED */\r\n        };\r\n    }\r\n    return entry;\r\n}\r\nfunction hasInstallationRequestTimedOut(installationEntry) {\r\n    return (installationEntry.registrationStatus === 1 /* IN_PROGRESS */ &&\r\n        installationEntry.registrationTime + PENDING_TIMEOUT_MS < Date.now());\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function generateAuthTokenRequest({ appConfig, platformLoggerProvider }, installationEntry) {\r\n    const endpoint = getGenerateAuthTokenEndpoint(appConfig, installationEntry);\r\n    const headers = getHeadersWithAuth(appConfig, installationEntry);\r\n    // If platform logger exists, add the platform info string to the header.\r\n    const platformLogger = platformLoggerProvider.getImmediate({\r\n        optional: true\r\n    });\r\n    if (platformLogger) {\r\n        headers.append('x-firebase-client', platformLogger.getPlatformInfoString());\r\n    }\r\n    const body = {\r\n        installation: {\r\n            sdkVersion: PACKAGE_VERSION\r\n        }\r\n    };\r\n    const request = {\r\n        method: 'POST',\r\n        headers,\r\n        body: JSON.stringify(body)\r\n    };\r\n    const response = await retryIfServerError(() => fetch(endpoint, request));\r\n    if (response.ok) {\r\n        const responseValue = await response.json();\r\n        const completedAuthToken = extractAuthTokenInfoFromResponse(responseValue);\r\n        return completedAuthToken;\r\n    }\r\n    else {\r\n        throw await getErrorFromResponse('Generate Auth Token', response);\r\n    }\r\n}\r\nfunction getGenerateAuthTokenEndpoint(appConfig, { fid }) {\r\n    return `${getInstallationsEndpoint(appConfig)}/${fid}/authTokens:generate`;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a valid authentication token for the installation. Generates a new\r\n * token if one doesn't exist, is expired or about to expire.\r\n *\r\n * Should only be called if the Firebase Installation is registered.\r\n */\r\nasync function refreshAuthToken(installations, forceRefresh = false) {\r\n    let tokenPromise;\r\n    const entry = await update(installations.appConfig, oldEntry => {\r\n        if (!isEntryRegistered(oldEntry)) {\r\n            throw ERROR_FACTORY.create(\"not-registered\" /* NOT_REGISTERED */);\r\n        }\r\n        const oldAuthToken = oldEntry.authToken;\r\n        if (!forceRefresh && isAuthTokenValid(oldAuthToken)) {\r\n            // There is a valid token in the DB.\r\n            return oldEntry;\r\n        }\r\n        else if (oldAuthToken.requestStatus === 1 /* IN_PROGRESS */) {\r\n            // There already is a token request in progress.\r\n            tokenPromise = waitUntilAuthTokenRequest(installations, forceRefresh);\r\n            return oldEntry;\r\n        }\r\n        else {\r\n            // No token or token expired.\r\n            if (!navigator.onLine) {\r\n                throw ERROR_FACTORY.create(\"app-offline\" /* APP_OFFLINE */);\r\n            }\r\n            const inProgressEntry = makeAuthTokenRequestInProgressEntry(oldEntry);\r\n            tokenPromise = fetchAuthTokenFromServer(installations, inProgressEntry);\r\n            return inProgressEntry;\r\n        }\r\n    });\r\n    const authToken = tokenPromise\r\n        ? await tokenPromise\r\n        : entry.authToken;\r\n    return authToken;\r\n}\r\n/**\r\n * Call only if FID is registered and Auth Token request is in progress.\r\n *\r\n * Waits until the current pending request finishes. If the request times out,\r\n * tries once in this thread as well.\r\n */\r\nasync function waitUntilAuthTokenRequest(installations, forceRefresh) {\r\n    // Unfortunately, there is no way of reliably observing when a value in\r\n    // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\r\n    // so we need to poll.\r\n    let entry = await updateAuthTokenRequest(installations.appConfig);\r\n    while (entry.authToken.requestStatus === 1 /* IN_PROGRESS */) {\r\n        // generateAuthToken still in progress.\r\n        await sleep(100);\r\n        entry = await updateAuthTokenRequest(installations.appConfig);\r\n    }\r\n    const authToken = entry.authToken;\r\n    if (authToken.requestStatus === 0 /* NOT_STARTED */) {\r\n        // The request timed out or failed in a different call. Try again.\r\n        return refreshAuthToken(installations, forceRefresh);\r\n    }\r\n    else {\r\n        return authToken;\r\n    }\r\n}\r\n/**\r\n * Called only if there is a GenerateAuthToken request in progress.\r\n *\r\n * Updates the InstallationEntry in the DB based on the status of the\r\n * GenerateAuthToken request.\r\n *\r\n * Returns the updated InstallationEntry.\r\n */\r\nfunction updateAuthTokenRequest(appConfig) {\r\n    return update(appConfig, oldEntry => {\r\n        if (!isEntryRegistered(oldEntry)) {\r\n            throw ERROR_FACTORY.create(\"not-registered\" /* NOT_REGISTERED */);\r\n        }\r\n        const oldAuthToken = oldEntry.authToken;\r\n        if (hasAuthTokenRequestTimedOut(oldAuthToken)) {\r\n            return Object.assign(Object.assign({}, oldEntry), { authToken: { requestStatus: 0 /* NOT_STARTED */ } });\r\n        }\r\n        return oldEntry;\r\n    });\r\n}\r\nasync function fetchAuthTokenFromServer(installations, installationEntry) {\r\n    try {\r\n        const authToken = await generateAuthTokenRequest(installations, installationEntry);\r\n        const updatedInstallationEntry = Object.assign(Object.assign({}, installationEntry), { authToken });\r\n        await set(installations.appConfig, updatedInstallationEntry);\r\n        return authToken;\r\n    }\r\n    catch (e) {\r\n        if (isServerError(e) &&\r\n            (e.customData.serverCode === 401 || e.customData.serverCode === 404)) {\r\n            // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\r\n            // Generate a new ID next time.\r\n            await remove(installations.appConfig);\r\n        }\r\n        else {\r\n            const updatedInstallationEntry = Object.assign(Object.assign({}, installationEntry), { authToken: { requestStatus: 0 /* NOT_STARTED */ } });\r\n            await set(installations.appConfig, updatedInstallationEntry);\r\n        }\r\n        throw e;\r\n    }\r\n}\r\nfunction isEntryRegistered(installationEntry) {\r\n    return (installationEntry !== undefined &&\r\n        installationEntry.registrationStatus === 2 /* COMPLETED */);\r\n}\r\nfunction isAuthTokenValid(authToken) {\r\n    return (authToken.requestStatus === 2 /* COMPLETED */ &&\r\n        !isAuthTokenExpired(authToken));\r\n}\r\nfunction isAuthTokenExpired(authToken) {\r\n    const now = Date.now();\r\n    return (now < authToken.creationTime ||\r\n        authToken.creationTime + authToken.expiresIn < now + TOKEN_EXPIRATION_BUFFER);\r\n}\r\n/** Returns an updated InstallationEntry with an InProgressAuthToken. */\r\nfunction makeAuthTokenRequestInProgressEntry(oldEntry) {\r\n    const inProgressAuthToken = {\r\n        requestStatus: 1 /* IN_PROGRESS */,\r\n        requestTime: Date.now()\r\n    };\r\n    return Object.assign(Object.assign({}, oldEntry), { authToken: inProgressAuthToken });\r\n}\r\nfunction hasAuthTokenRequestTimedOut(authToken) {\r\n    return (authToken.requestStatus === 1 /* IN_PROGRESS */ &&\r\n        authToken.requestTime + PENDING_TIMEOUT_MS < Date.now());\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Creates a Firebase Installation if there isn't one for the app and\r\n * returns the Installation ID.\r\n * @param installations - The `Installations` instance.\r\n *\r\n * @public\r\n */\r\nasync function getId(installations) {\r\n    const installationsImpl = installations;\r\n    const { installationEntry, registrationPromise } = await getInstallationEntry(installationsImpl.appConfig);\r\n    if (registrationPromise) {\r\n        registrationPromise.catch(console.error);\r\n    }\r\n    else {\r\n        // If the installation is already registered, update the authentication\r\n        // token if needed.\r\n        refreshAuthToken(installationsImpl).catch(console.error);\r\n    }\r\n    return installationEntry.fid;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a Firebase Installations auth token, identifying the current\r\n * Firebase Installation.\r\n * @param installations - The `Installations` instance.\r\n * @param forceRefresh - Force refresh regardless of token expiration.\r\n *\r\n * @public\r\n */\r\nasync function getToken(installations, forceRefresh = false) {\r\n    const installationsImpl = installations;\r\n    await completeInstallationRegistration(installationsImpl.appConfig);\r\n    // At this point we either have a Registered Installation in the DB, or we've\r\n    // already thrown an error.\r\n    const authToken = await refreshAuthToken(installationsImpl, forceRefresh);\r\n    return authToken.token;\r\n}\r\nasync function completeInstallationRegistration(appConfig) {\r\n    const { registrationPromise } = await getInstallationEntry(appConfig);\r\n    if (registrationPromise) {\r\n        // A createInstallation request is in progress. Wait until it finishes.\r\n        await registrationPromise;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function deleteInstallationRequest(appConfig, installationEntry) {\r\n    const endpoint = getDeleteEndpoint(appConfig, installationEntry);\r\n    const headers = getHeadersWithAuth(appConfig, installationEntry);\r\n    const request = {\r\n        method: 'DELETE',\r\n        headers\r\n    };\r\n    const response = await retryIfServerError(() => fetch(endpoint, request));\r\n    if (!response.ok) {\r\n        throw await getErrorFromResponse('Delete Installation', response);\r\n    }\r\n}\r\nfunction getDeleteEndpoint(appConfig, { fid }) {\r\n    return `${getInstallationsEndpoint(appConfig)}/${fid}`;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Deletes the Firebase Installation and all associated data.\r\n * @param installations - The `Installations` instance.\r\n *\r\n * @public\r\n */\r\nasync function deleteInstallations(installations) {\r\n    const { appConfig } = installations;\r\n    const entry = await update(appConfig, oldEntry => {\r\n        if (oldEntry && oldEntry.registrationStatus === 0 /* NOT_STARTED */) {\r\n            // Delete the unregistered entry without sending a deleteInstallation request.\r\n            return undefined;\r\n        }\r\n        return oldEntry;\r\n    });\r\n    if (entry) {\r\n        if (entry.registrationStatus === 1 /* IN_PROGRESS */) {\r\n            // Can't delete while trying to register.\r\n            throw ERROR_FACTORY.create(\"delete-pending-registration\" /* DELETE_PENDING_REGISTRATION */);\r\n        }\r\n        else if (entry.registrationStatus === 2 /* COMPLETED */) {\r\n            if (!navigator.onLine) {\r\n                throw ERROR_FACTORY.create(\"app-offline\" /* APP_OFFLINE */);\r\n            }\r\n            else {\r\n                await deleteInstallationRequest(appConfig, entry);\r\n                await remove(appConfig);\r\n            }\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Sets a new callback that will get called when Installation ID changes.\r\n * Returns an unsubscribe function that will remove the callback when called.\r\n * @param installations - The `Installations` instance.\r\n * @param callback - The callback function that is invoked when FID changes.\r\n * @returns A function that can be called to unsubscribe.\r\n *\r\n * @public\r\n */\r\nfunction onIdChange(installations, callback) {\r\n    const { appConfig } = installations;\r\n    addCallback(appConfig, callback);\r\n    return () => {\r\n        removeCallback(appConfig, callback);\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns an instance of {@link Installations} associated with the given\r\n * {@link @firebase/app#FirebaseApp} instance.\r\n * @param app - The {@link @firebase/app#FirebaseApp} instance.\r\n *\r\n * @public\r\n */\r\nfunction getInstallations(app = getApp()) {\r\n    const installationsImpl = _getProvider(app, 'installations').getImmediate();\r\n    return installationsImpl;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction extractAppConfig(app) {\r\n    if (!app || !app.options) {\r\n        throw getMissingValueError('App Configuration');\r\n    }\r\n    if (!app.name) {\r\n        throw getMissingValueError('App Name');\r\n    }\r\n    // Required app config keys\r\n    const configKeys = [\r\n        'projectId',\r\n        'apiKey',\r\n        'appId'\r\n    ];\r\n    for (const keyName of configKeys) {\r\n        if (!app.options[keyName]) {\r\n            throw getMissingValueError(keyName);\r\n        }\r\n    }\r\n    return {\r\n        appName: app.name,\r\n        projectId: app.options.projectId,\r\n        apiKey: app.options.apiKey,\r\n        appId: app.options.appId\r\n    };\r\n}\r\nfunction getMissingValueError(valueName) {\r\n    return ERROR_FACTORY.create(\"missing-app-config-values\" /* MISSING_APP_CONFIG_VALUES */, {\r\n        valueName\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst INSTALLATIONS_NAME = 'installations';\r\nconst INSTALLATIONS_NAME_INTERNAL = 'installations-internal';\r\nconst publicFactory = (container) => {\r\n    const app = container.getProvider('app').getImmediate();\r\n    // Throws if app isn't configured properly.\r\n    const appConfig = extractAppConfig(app);\r\n    const platformLoggerProvider = _getProvider(app, 'platform-logger');\r\n    const installationsImpl = {\r\n        app,\r\n        appConfig,\r\n        platformLoggerProvider,\r\n        _delete: () => Promise.resolve()\r\n    };\r\n    return installationsImpl;\r\n};\r\nconst internalFactory = (container) => {\r\n    const app = container.getProvider('app').getImmediate();\r\n    // Internal FIS instance relies on public FIS instance.\r\n    const installations = _getProvider(app, INSTALLATIONS_NAME).getImmediate();\r\n    const installationsInternal = {\r\n        getId: () => getId(installations),\r\n        getToken: (forceRefresh) => getToken(installations, forceRefresh)\r\n    };\r\n    return installationsInternal;\r\n};\r\nfunction registerInstallations() {\r\n    _registerComponent(new Component(INSTALLATIONS_NAME, publicFactory, \"PUBLIC\" /* PUBLIC */));\r\n    _registerComponent(new Component(INSTALLATIONS_NAME_INTERNAL, internalFactory, \"PRIVATE\" /* PRIVATE */));\r\n}\n\n/**\r\n * Firebase Installations\r\n *\r\n * @packageDocumentation\r\n */\r\nregisterInstallations();\r\nregisterVersion(name, version);\n\nexport { deleteInstallations, getId, getInstallations, getToken, onIdChange };\n","import { getApp, _getProvider, _registerComponent, registerVersion, SDK_VERSION } from '@firebase/app';\nimport { Component } from '@firebase/component';\nimport { LogLevel, Logger } from '@firebase/logger';\nimport { ErrorFactory, FirebaseError, getModularInstance, calculateBackoffMillis } from '@firebase/util';\nimport '@firebase/installations';\n\nconst name = \"@firebase/remote-config\";\nconst version = \"0.2.0\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Shims a minimal AbortSignal.\r\n *\r\n * <p>AbortController's AbortSignal conveniently decouples fetch timeout logic from other aspects\r\n * of networking, such as retries. Firebase doesn't use AbortController enough to justify a\r\n * polyfill recommendation, like we do with the Fetch API, but this minimal shim can easily be\r\n * swapped out if/when we do.\r\n */\r\nclass RemoteConfigAbortSignal {\r\n    constructor() {\r\n        this.listeners = [];\r\n    }\r\n    addEventListener(listener) {\r\n        this.listeners.push(listener);\r\n    }\r\n    abort() {\r\n        this.listeners.forEach(listener => listener());\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst RC_COMPONENT_NAME = 'remote-config';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst ERROR_DESCRIPTION_MAP = {\r\n    [\"registration-window\" /* REGISTRATION_WINDOW */]: 'Undefined window object. This SDK only supports usage in a browser environment.',\r\n    [\"registration-project-id\" /* REGISTRATION_PROJECT_ID */]: 'Undefined project identifier. Check Firebase app initialization.',\r\n    [\"registration-api-key\" /* REGISTRATION_API_KEY */]: 'Undefined API key. Check Firebase app initialization.',\r\n    [\"registration-app-id\" /* REGISTRATION_APP_ID */]: 'Undefined app identifier. Check Firebase app initialization.',\r\n    [\"storage-open\" /* STORAGE_OPEN */]: 'Error thrown when opening storage. Original error: {$originalErrorMessage}.',\r\n    [\"storage-get\" /* STORAGE_GET */]: 'Error thrown when reading from storage. Original error: {$originalErrorMessage}.',\r\n    [\"storage-set\" /* STORAGE_SET */]: 'Error thrown when writing to storage. Original error: {$originalErrorMessage}.',\r\n    [\"storage-delete\" /* STORAGE_DELETE */]: 'Error thrown when deleting from storage. Original error: {$originalErrorMessage}.',\r\n    [\"fetch-client-network\" /* FETCH_NETWORK */]: 'Fetch client failed to connect to a network. Check Internet connection.' +\r\n        ' Original error: {$originalErrorMessage}.',\r\n    [\"fetch-timeout\" /* FETCH_TIMEOUT */]: 'The config fetch request timed out. ' +\r\n        ' Configure timeout using \"fetchTimeoutMillis\" SDK setting.',\r\n    [\"fetch-throttle\" /* FETCH_THROTTLE */]: 'The config fetch request timed out while in an exponential backoff state.' +\r\n        ' Configure timeout using \"fetchTimeoutMillis\" SDK setting.' +\r\n        ' Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.',\r\n    [\"fetch-client-parse\" /* FETCH_PARSE */]: 'Fetch client could not parse response.' +\r\n        ' Original error: {$originalErrorMessage}.',\r\n    [\"fetch-status\" /* FETCH_STATUS */]: 'Fetch server returned an HTTP error status. HTTP status: {$httpStatus}.'\r\n};\r\nconst ERROR_FACTORY = new ErrorFactory('remoteconfig' /* service */, 'Remote Config' /* service name */, ERROR_DESCRIPTION_MAP);\r\n// Note how this is like typeof/instanceof, but for ErrorCode.\r\nfunction hasErrorCode(e, errorCode) {\r\n    return e instanceof FirebaseError && e.code.indexOf(errorCode) !== -1;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DEFAULT_VALUE_FOR_BOOLEAN = false;\r\nconst DEFAULT_VALUE_FOR_STRING = '';\r\nconst DEFAULT_VALUE_FOR_NUMBER = 0;\r\nconst BOOLEAN_TRUTHY_VALUES = ['1', 'true', 't', 'yes', 'y', 'on'];\r\nclass Value {\r\n    constructor(_source, _value = DEFAULT_VALUE_FOR_STRING) {\r\n        this._source = _source;\r\n        this._value = _value;\r\n    }\r\n    asString() {\r\n        return this._value;\r\n    }\r\n    asBoolean() {\r\n        if (this._source === 'static') {\r\n            return DEFAULT_VALUE_FOR_BOOLEAN;\r\n        }\r\n        return BOOLEAN_TRUTHY_VALUES.indexOf(this._value.toLowerCase()) >= 0;\r\n    }\r\n    asNumber() {\r\n        if (this._source === 'static') {\r\n            return DEFAULT_VALUE_FOR_NUMBER;\r\n        }\r\n        let num = Number(this._value);\r\n        if (isNaN(num)) {\r\n            num = DEFAULT_VALUE_FOR_NUMBER;\r\n        }\r\n        return num;\r\n    }\r\n    getSource() {\r\n        return this._source;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @param app - The {@link @firebase/app#FirebaseApp} instance.\r\n * @returns A {@link RemoteConfig} instance.\r\n *\r\n * @public\r\n */\r\nfunction getRemoteConfig(app = getApp()) {\r\n    app = getModularInstance(app);\r\n    const rcProvider = _getProvider(app, RC_COMPONENT_NAME);\r\n    return rcProvider.getImmediate();\r\n}\r\n/**\r\n * Makes the last fetched config available to the getters.\r\n * @param remoteConfig - The {@link RemoteConfig} instance.\r\n * @returns A `Promise` which resolves to true if the current call activated the fetched configs.\r\n * If the fetched configs were already activated, the `Promise` will resolve to false.\r\n *\r\n * @public\r\n */\r\nasync function activate(remoteConfig) {\r\n    const rc = getModularInstance(remoteConfig);\r\n    const [lastSuccessfulFetchResponse, activeConfigEtag] = await Promise.all([\r\n        rc._storage.getLastSuccessfulFetchResponse(),\r\n        rc._storage.getActiveConfigEtag()\r\n    ]);\r\n    if (!lastSuccessfulFetchResponse ||\r\n        !lastSuccessfulFetchResponse.config ||\r\n        !lastSuccessfulFetchResponse.eTag ||\r\n        lastSuccessfulFetchResponse.eTag === activeConfigEtag) {\r\n        // Either there is no successful fetched config, or is the same as current active\r\n        // config.\r\n        return false;\r\n    }\r\n    await Promise.all([\r\n        rc._storageCache.setActiveConfig(lastSuccessfulFetchResponse.config),\r\n        rc._storage.setActiveConfigEtag(lastSuccessfulFetchResponse.eTag)\r\n    ]);\r\n    return true;\r\n}\r\n/**\r\n * Ensures the last activated config are available to the getters.\r\n * @param remoteConfig - The {@link RemoteConfig} instance.\r\n *\r\n * @returns A `Promise` that resolves when the last activated config is available to the getters.\r\n * @public\r\n */\r\nfunction ensureInitialized(remoteConfig) {\r\n    const rc = getModularInstance(remoteConfig);\r\n    if (!rc._initializePromise) {\r\n        rc._initializePromise = rc._storageCache.loadFromStorage().then(() => {\r\n            rc._isInitializationComplete = true;\r\n        });\r\n    }\r\n    return rc._initializePromise;\r\n}\r\n/**\r\n * Fetches and caches configuration from the Remote Config service.\r\n * @param remoteConfig - The {@link RemoteConfig} instance.\r\n * @public\r\n */\r\nasync function fetchConfig(remoteConfig) {\r\n    const rc = getModularInstance(remoteConfig);\r\n    // Aborts the request after the given timeout, causing the fetch call to\r\n    // reject with an `AbortError`.\r\n    //\r\n    // <p>Aborting after the request completes is a no-op, so we don't need a\r\n    // corresponding `clearTimeout`.\r\n    //\r\n    // Locating abort logic here because:\r\n    // * it uses a developer setting (timeout)\r\n    // * it applies to all retries (like curl's max-time arg)\r\n    // * it is consistent with the Fetch API's signal input\r\n    const abortSignal = new RemoteConfigAbortSignal();\r\n    setTimeout(async () => {\r\n        // Note a very low delay, eg < 10ms, can elapse before listeners are initialized.\r\n        abortSignal.abort();\r\n    }, rc.settings.fetchTimeoutMillis);\r\n    // Catches *all* errors thrown by client so status can be set consistently.\r\n    try {\r\n        await rc._client.fetch({\r\n            cacheMaxAgeMillis: rc.settings.minimumFetchIntervalMillis,\r\n            signal: abortSignal\r\n        });\r\n        await rc._storageCache.setLastFetchStatus('success');\r\n    }\r\n    catch (e) {\r\n        const lastFetchStatus = hasErrorCode(e, \"fetch-throttle\" /* FETCH_THROTTLE */)\r\n            ? 'throttle'\r\n            : 'failure';\r\n        await rc._storageCache.setLastFetchStatus(lastFetchStatus);\r\n        throw e;\r\n    }\r\n}\r\n/**\r\n * Gets all config.\r\n *\r\n * @param remoteConfig - The {@link RemoteConfig} instance.\r\n * @returns All config.\r\n *\r\n * @public\r\n */\r\nfunction getAll(remoteConfig) {\r\n    const rc = getModularInstance(remoteConfig);\r\n    return getAllKeys(rc._storageCache.getActiveConfig(), rc.defaultConfig).reduce((allConfigs, key) => {\r\n        allConfigs[key] = getValue(remoteConfig, key);\r\n        return allConfigs;\r\n    }, {});\r\n}\r\n/**\r\n * Gets the value for the given key as a boolean.\r\n *\r\n * Convenience method for calling <code>remoteConfig.getValue(key).asBoolean()</code>.\r\n *\r\n * @param remoteConfig - The {@link RemoteConfig} instance.\r\n * @param key - The name of the parameter.\r\n *\r\n * @returns The value for the given key as a boolean.\r\n * @public\r\n */\r\nfunction getBoolean(remoteConfig, key) {\r\n    return getValue(getModularInstance(remoteConfig), key).asBoolean();\r\n}\r\n/**\r\n * Gets the value for the given key as a number.\r\n *\r\n * Convenience method for calling <code>remoteConfig.getValue(key).asNumber()</code>.\r\n *\r\n * @param remoteConfig - The {@link RemoteConfig} instance.\r\n * @param key - The name of the parameter.\r\n *\r\n * @returns The value for the given key as a number.\r\n *\r\n * @public\r\n */\r\nfunction getNumber(remoteConfig, key) {\r\n    return getValue(getModularInstance(remoteConfig), key).asNumber();\r\n}\r\n/**\r\n * Gets the value for the given key as a string.\r\n * Convenience method for calling <code>remoteConfig.getValue(key).asString()</code>.\r\n *\r\n * @param remoteConfig - The {@link RemoteConfig} instance.\r\n * @param key - The name of the parameter.\r\n *\r\n * @returns The value for the given key as a string.\r\n *\r\n * @public\r\n */\r\nfunction getString(remoteConfig, key) {\r\n    return getValue(getModularInstance(remoteConfig), key).asString();\r\n}\r\n/**\r\n * Gets the {@link Value} for the given key.\r\n *\r\n * @param remoteConfig - The {@link RemoteConfig} instance.\r\n * @param key - The name of the parameter.\r\n *\r\n * @returns The value for the given key.\r\n *\r\n * @public\r\n */\r\nfunction getValue(remoteConfig, key) {\r\n    const rc = getModularInstance(remoteConfig);\r\n    if (!rc._isInitializationComplete) {\r\n        rc._logger.debug(`A value was requested for key \"${key}\" before SDK initialization completed.` +\r\n            ' Await on ensureInitialized if the intent was to get a previously activated value.');\r\n    }\r\n    const activeConfig = rc._storageCache.getActiveConfig();\r\n    if (activeConfig && activeConfig[key] !== undefined) {\r\n        return new Value('remote', activeConfig[key]);\r\n    }\r\n    else if (rc.defaultConfig && rc.defaultConfig[key] !== undefined) {\r\n        return new Value('default', String(rc.defaultConfig[key]));\r\n    }\r\n    rc._logger.debug(`Returning static value for key \"${key}\".` +\r\n        ' Define a default or remote value if this is unintentional.');\r\n    return new Value('static');\r\n}\r\n/**\r\n * Defines the log level to use.\r\n *\r\n * @param remoteConfig - The {@link RemoteConfig} instance.\r\n * @param logLevel - The log level to set.\r\n *\r\n * @public\r\n */\r\nfunction setLogLevel(remoteConfig, logLevel) {\r\n    const rc = getModularInstance(remoteConfig);\r\n    switch (logLevel) {\r\n        case 'debug':\r\n            rc._logger.logLevel = LogLevel.DEBUG;\r\n            break;\r\n        case 'silent':\r\n            rc._logger.logLevel = LogLevel.SILENT;\r\n            break;\r\n        default:\r\n            rc._logger.logLevel = LogLevel.ERROR;\r\n    }\r\n}\r\n/**\r\n * Dedupes and returns an array of all the keys of the received objects.\r\n */\r\nfunction getAllKeys(obj1 = {}, obj2 = {}) {\r\n    return Object.keys(Object.assign(Object.assign({}, obj1), obj2));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Implements the {@link RemoteConfigClient} abstraction with success response caching.\r\n *\r\n * <p>Comparable to the browser's Cache API for responses, but the Cache API requires a Service\r\n * Worker, which requires HTTPS, which would significantly complicate SDK installation. Also, the\r\n * Cache API doesn't support matching entries by time.\r\n */\r\nclass CachingClient {\r\n    constructor(client, storage, storageCache, logger) {\r\n        this.client = client;\r\n        this.storage = storage;\r\n        this.storageCache = storageCache;\r\n        this.logger = logger;\r\n    }\r\n    /**\r\n     * Returns true if the age of the cached fetched configs is less than or equal to\r\n     * {@link Settings#minimumFetchIntervalInSeconds}.\r\n     *\r\n     * <p>This is comparable to passing `headers = { 'Cache-Control': max-age <maxAge> }` to the\r\n     * native Fetch API.\r\n     *\r\n     * <p>Visible for testing.\r\n     */\r\n    isCachedDataFresh(cacheMaxAgeMillis, lastSuccessfulFetchTimestampMillis) {\r\n        // Cache can only be fresh if it's populated.\r\n        if (!lastSuccessfulFetchTimestampMillis) {\r\n            this.logger.debug('Config fetch cache check. Cache unpopulated.');\r\n            return false;\r\n        }\r\n        // Calculates age of cache entry.\r\n        const cacheAgeMillis = Date.now() - lastSuccessfulFetchTimestampMillis;\r\n        const isCachedDataFresh = cacheAgeMillis <= cacheMaxAgeMillis;\r\n        this.logger.debug('Config fetch cache check.' +\r\n            ` Cache age millis: ${cacheAgeMillis}.` +\r\n            ` Cache max age millis (minimumFetchIntervalMillis setting): ${cacheMaxAgeMillis}.` +\r\n            ` Is cache hit: ${isCachedDataFresh}.`);\r\n        return isCachedDataFresh;\r\n    }\r\n    async fetch(request) {\r\n        // Reads from persisted storage to avoid cache miss if callers don't wait on initialization.\r\n        const [lastSuccessfulFetchTimestampMillis, lastSuccessfulFetchResponse] = await Promise.all([\r\n            this.storage.getLastSuccessfulFetchTimestampMillis(),\r\n            this.storage.getLastSuccessfulFetchResponse()\r\n        ]);\r\n        // Exits early on cache hit.\r\n        if (lastSuccessfulFetchResponse &&\r\n            this.isCachedDataFresh(request.cacheMaxAgeMillis, lastSuccessfulFetchTimestampMillis)) {\r\n            return lastSuccessfulFetchResponse;\r\n        }\r\n        // Deviates from pure decorator by not honoring a passed ETag since we don't have a public API\r\n        // that allows the caller to pass an ETag.\r\n        request.eTag =\r\n            lastSuccessfulFetchResponse && lastSuccessfulFetchResponse.eTag;\r\n        // Falls back to service on cache miss.\r\n        const response = await this.client.fetch(request);\r\n        // Fetch throws for non-success responses, so success is guaranteed here.\r\n        const storageOperations = [\r\n            // Uses write-through cache for consistency with synchronous public API.\r\n            this.storageCache.setLastSuccessfulFetchTimestampMillis(Date.now())\r\n        ];\r\n        if (response.status === 200) {\r\n            // Caches response only if it has changed, ie non-304 responses.\r\n            storageOperations.push(this.storage.setLastSuccessfulFetchResponse(response));\r\n        }\r\n        await Promise.all(storageOperations);\r\n        return response;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Attempts to get the most accurate browser language setting.\r\n *\r\n * <p>Adapted from getUserLanguage in packages/auth/src/utils.js for TypeScript.\r\n *\r\n * <p>Defers default language specification to server logic for consistency.\r\n *\r\n * @param navigatorLanguage Enables tests to override read-only {@link NavigatorLanguage}.\r\n */\r\nfunction getUserLanguage(navigatorLanguage = navigator) {\r\n    return (\r\n    // Most reliable, but only supported in Chrome/Firefox.\r\n    (navigatorLanguage.languages && navigatorLanguage.languages[0]) ||\r\n        // Supported in most browsers, but returns the language of the browser\r\n        // UI, not the language set in browser settings.\r\n        navigatorLanguage.language\r\n    // Polyfill otherwise.\r\n    );\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Implements the Client abstraction for the Remote Config REST API.\r\n */\r\nclass RestClient {\r\n    constructor(firebaseInstallations, sdkVersion, namespace, projectId, apiKey, appId) {\r\n        this.firebaseInstallations = firebaseInstallations;\r\n        this.sdkVersion = sdkVersion;\r\n        this.namespace = namespace;\r\n        this.projectId = projectId;\r\n        this.apiKey = apiKey;\r\n        this.appId = appId;\r\n    }\r\n    /**\r\n     * Fetches from the Remote Config REST API.\r\n     *\r\n     * @throws a {@link ErrorCode.FETCH_NETWORK} error if {@link GlobalFetch#fetch} can't\r\n     * connect to the network.\r\n     * @throws a {@link ErrorCode.FETCH_PARSE} error if {@link Response#json} can't parse the\r\n     * fetch response.\r\n     * @throws a {@link ErrorCode.FETCH_STATUS} error if the service returns an HTTP error status.\r\n     */\r\n    async fetch(request) {\r\n        const [installationId, installationToken] = await Promise.all([\r\n            this.firebaseInstallations.getId(),\r\n            this.firebaseInstallations.getToken()\r\n        ]);\r\n        const urlBase = window.FIREBASE_REMOTE_CONFIG_URL_BASE ||\r\n            'https://firebaseremoteconfig.googleapis.com';\r\n        const url = `${urlBase}/v1/projects/${this.projectId}/namespaces/${this.namespace}:fetch?key=${this.apiKey}`;\r\n        const headers = {\r\n            'Content-Type': 'application/json',\r\n            'Content-Encoding': 'gzip',\r\n            // Deviates from pure decorator by not passing max-age header since we don't currently have\r\n            // service behavior using that header.\r\n            'If-None-Match': request.eTag || '*'\r\n        };\r\n        const requestBody = {\r\n            /* eslint-disable camelcase */\r\n            sdk_version: this.sdkVersion,\r\n            app_instance_id: installationId,\r\n            app_instance_id_token: installationToken,\r\n            app_id: this.appId,\r\n            language_code: getUserLanguage()\r\n            /* eslint-enable camelcase */\r\n        };\r\n        const options = {\r\n            method: 'POST',\r\n            headers,\r\n            body: JSON.stringify(requestBody)\r\n        };\r\n        // This logic isn't REST-specific, but shimming abort logic isn't worth another decorator.\r\n        const fetchPromise = fetch(url, options);\r\n        const timeoutPromise = new Promise((_resolve, reject) => {\r\n            // Maps async event listener to Promise API.\r\n            request.signal.addEventListener(() => {\r\n                // Emulates https://heycam.github.io/webidl/#aborterror\r\n                const error = new Error('The operation was aborted.');\r\n                error.name = 'AbortError';\r\n                reject(error);\r\n            });\r\n        });\r\n        let response;\r\n        try {\r\n            await Promise.race([fetchPromise, timeoutPromise]);\r\n            response = await fetchPromise;\r\n        }\r\n        catch (originalError) {\r\n            let errorCode = \"fetch-client-network\" /* FETCH_NETWORK */;\r\n            if (originalError.name === 'AbortError') {\r\n                errorCode = \"fetch-timeout\" /* FETCH_TIMEOUT */;\r\n            }\r\n            throw ERROR_FACTORY.create(errorCode, {\r\n                originalErrorMessage: originalError.message\r\n            });\r\n        }\r\n        let status = response.status;\r\n        // Normalizes nullable header to optional.\r\n        const responseEtag = response.headers.get('ETag') || undefined;\r\n        let config;\r\n        let state;\r\n        // JSON parsing throws SyntaxError if the response body isn't a JSON string.\r\n        // Requesting application/json and checking for a 200 ensures there's JSON data.\r\n        if (response.status === 200) {\r\n            let responseBody;\r\n            try {\r\n                responseBody = await response.json();\r\n            }\r\n            catch (originalError) {\r\n                throw ERROR_FACTORY.create(\"fetch-client-parse\" /* FETCH_PARSE */, {\r\n                    originalErrorMessage: originalError.message\r\n                });\r\n            }\r\n            config = responseBody['entries'];\r\n            state = responseBody['state'];\r\n        }\r\n        // Normalizes based on legacy state.\r\n        if (state === 'INSTANCE_STATE_UNSPECIFIED') {\r\n            status = 500;\r\n        }\r\n        else if (state === 'NO_CHANGE') {\r\n            status = 304;\r\n        }\r\n        else if (state === 'NO_TEMPLATE' || state === 'EMPTY_CONFIG') {\r\n            // These cases can be fixed remotely, so normalize to safe value.\r\n            config = {};\r\n        }\r\n        // Normalize to exception-based control flow for non-success cases.\r\n        // Encapsulates HTTP specifics in this class as much as possible. Status is still the best for\r\n        // differentiating success states (200 from 304; the state body param is undefined in a\r\n        // standard 304).\r\n        if (status !== 304 && status !== 200) {\r\n            throw ERROR_FACTORY.create(\"fetch-status\" /* FETCH_STATUS */, {\r\n                httpStatus: status\r\n            });\r\n        }\r\n        return { status, eTag: responseEtag, config };\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Supports waiting on a backoff by:\r\n *\r\n * <ul>\r\n *   <li>Promisifying setTimeout, so we can set a timeout in our Promise chain</li>\r\n *   <li>Listening on a signal bus for abort events, just like the Fetch API</li>\r\n *   <li>Failing in the same way the Fetch API fails, so timing out a live request and a throttled\r\n *       request appear the same.</li>\r\n * </ul>\r\n *\r\n * <p>Visible for testing.\r\n */\r\nfunction setAbortableTimeout(signal, throttleEndTimeMillis) {\r\n    return new Promise((resolve, reject) => {\r\n        // Derives backoff from given end time, normalizing negative numbers to zero.\r\n        const backoffMillis = Math.max(throttleEndTimeMillis - Date.now(), 0);\r\n        const timeout = setTimeout(resolve, backoffMillis);\r\n        // Adds listener, rather than sets onabort, because signal is a shared object.\r\n        signal.addEventListener(() => {\r\n            clearTimeout(timeout);\r\n            // If the request completes before this timeout, the rejection has no effect.\r\n            reject(ERROR_FACTORY.create(\"fetch-throttle\" /* FETCH_THROTTLE */, {\r\n                throttleEndTimeMillis\r\n            }));\r\n        });\r\n    });\r\n}\r\n/**\r\n * Returns true if the {@link Error} indicates a fetch request may succeed later.\r\n */\r\nfunction isRetriableError(e) {\r\n    if (!(e instanceof FirebaseError) || !e.customData) {\r\n        return false;\r\n    }\r\n    // Uses string index defined by ErrorData, which FirebaseError implements.\r\n    const httpStatus = Number(e.customData['httpStatus']);\r\n    return (httpStatus === 429 ||\r\n        httpStatus === 500 ||\r\n        httpStatus === 503 ||\r\n        httpStatus === 504);\r\n}\r\n/**\r\n * Decorates a Client with retry logic.\r\n *\r\n * <p>Comparable to CachingClient, but uses backoff logic instead of cache max age and doesn't cache\r\n * responses (because the SDK has no use for error responses).\r\n */\r\nclass RetryingClient {\r\n    constructor(client, storage) {\r\n        this.client = client;\r\n        this.storage = storage;\r\n    }\r\n    async fetch(request) {\r\n        const throttleMetadata = (await this.storage.getThrottleMetadata()) || {\r\n            backoffCount: 0,\r\n            throttleEndTimeMillis: Date.now()\r\n        };\r\n        return this.attemptFetch(request, throttleMetadata);\r\n    }\r\n    /**\r\n     * A recursive helper for attempting a fetch request repeatedly.\r\n     *\r\n     * @throws any non-retriable errors.\r\n     */\r\n    async attemptFetch(request, { throttleEndTimeMillis, backoffCount }) {\r\n        // Starts with a (potentially zero) timeout to support resumption from stored state.\r\n        // Ensures the throttle end time is honored if the last attempt timed out.\r\n        // Note the SDK will never make a request if the fetch timeout expires at this point.\r\n        await setAbortableTimeout(request.signal, throttleEndTimeMillis);\r\n        try {\r\n            const response = await this.client.fetch(request);\r\n            // Note the SDK only clears throttle state if response is success or non-retriable.\r\n            await this.storage.deleteThrottleMetadata();\r\n            return response;\r\n        }\r\n        catch (e) {\r\n            if (!isRetriableError(e)) {\r\n                throw e;\r\n            }\r\n            // Increments backoff state.\r\n            const throttleMetadata = {\r\n                throttleEndTimeMillis: Date.now() + calculateBackoffMillis(backoffCount),\r\n                backoffCount: backoffCount + 1\r\n            };\r\n            // Persists state.\r\n            await this.storage.setThrottleMetadata(throttleMetadata);\r\n            return this.attemptFetch(request, throttleMetadata);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DEFAULT_FETCH_TIMEOUT_MILLIS = 60 * 1000; // One minute\r\nconst DEFAULT_CACHE_MAX_AGE_MILLIS = 12 * 60 * 60 * 1000; // Twelve hours.\r\n/**\r\n * Encapsulates business logic mapping network and storage dependencies to the public SDK API.\r\n *\r\n * See {@link https://github.com/FirebasePrivate/firebase-js-sdk/blob/master/packages/firebase/index.d.ts|interface documentation} for method descriptions.\r\n */\r\nclass RemoteConfig {\r\n    constructor(\r\n    // Required by FirebaseServiceFactory interface.\r\n    app, \r\n    // JS doesn't support private yet\r\n    // (https://github.com/tc39/proposal-class-fields#private-fields), so we hint using an\r\n    // underscore prefix.\r\n    /**\r\n     * @internal\r\n     */\r\n    _client, \r\n    /**\r\n     * @internal\r\n     */\r\n    _storageCache, \r\n    /**\r\n     * @internal\r\n     */\r\n    _storage, \r\n    /**\r\n     * @internal\r\n     */\r\n    _logger) {\r\n        this.app = app;\r\n        this._client = _client;\r\n        this._storageCache = _storageCache;\r\n        this._storage = _storage;\r\n        this._logger = _logger;\r\n        /**\r\n         * Tracks completion of initialization promise.\r\n         * @internal\r\n         */\r\n        this._isInitializationComplete = false;\r\n        this.settings = {\r\n            fetchTimeoutMillis: DEFAULT_FETCH_TIMEOUT_MILLIS,\r\n            minimumFetchIntervalMillis: DEFAULT_CACHE_MAX_AGE_MILLIS\r\n        };\r\n        this.defaultConfig = {};\r\n    }\r\n    get fetchTimeMillis() {\r\n        return this._storageCache.getLastSuccessfulFetchTimestampMillis() || -1;\r\n    }\r\n    get lastFetchStatus() {\r\n        return this._storageCache.getLastFetchStatus() || 'no-fetch-yet';\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Converts an error event associated with a {@link IDBRequest} to a {@link FirebaseError}.\r\n */\r\nfunction toFirebaseError(event, errorCode) {\r\n    const originalError = event.target.error || undefined;\r\n    return ERROR_FACTORY.create(errorCode, {\r\n        originalErrorMessage: originalError && originalError.message\r\n    });\r\n}\r\n/**\r\n * A general-purpose store keyed by app + namespace + {@link\r\n * ProjectNamespaceKeyFieldValue}.\r\n *\r\n * <p>The Remote Config SDK can be used with multiple app installations, and each app can interact\r\n * with multiple namespaces, so this store uses app (ID + name) and namespace as common parent keys\r\n * for a set of key-value pairs. See {@link Storage#createCompositeKey}.\r\n *\r\n * <p>Visible for testing.\r\n */\r\nconst APP_NAMESPACE_STORE = 'app_namespace_store';\r\nconst DB_NAME = 'firebase_remote_config';\r\nconst DB_VERSION = 1;\r\n// Visible for testing.\r\nfunction openDatabase() {\r\n    return new Promise((resolve, reject) => {\r\n        const request = indexedDB.open(DB_NAME, DB_VERSION);\r\n        request.onerror = event => {\r\n            reject(toFirebaseError(event, \"storage-open\" /* STORAGE_OPEN */));\r\n        };\r\n        request.onsuccess = event => {\r\n            resolve(event.target.result);\r\n        };\r\n        request.onupgradeneeded = event => {\r\n            const db = event.target.result;\r\n            // We don't use 'break' in this switch statement, the fall-through\r\n            // behavior is what we want, because if there are multiple versions between\r\n            // the old version and the current version, we want ALL the migrations\r\n            // that correspond to those versions to run, not only the last one.\r\n            // eslint-disable-next-line default-case\r\n            switch (event.oldVersion) {\r\n                case 0:\r\n                    db.createObjectStore(APP_NAMESPACE_STORE, {\r\n                        keyPath: 'compositeKey'\r\n                    });\r\n            }\r\n        };\r\n    });\r\n}\r\n/**\r\n * Abstracts data persistence.\r\n */\r\nclass Storage {\r\n    /**\r\n     * @param appId enables storage segmentation by app (ID + name).\r\n     * @param appName enables storage segmentation by app (ID + name).\r\n     * @param namespace enables storage segmentation by namespace.\r\n     */\r\n    constructor(appId, appName, namespace, openDbPromise = openDatabase()) {\r\n        this.appId = appId;\r\n        this.appName = appName;\r\n        this.namespace = namespace;\r\n        this.openDbPromise = openDbPromise;\r\n    }\r\n    getLastFetchStatus() {\r\n        return this.get('last_fetch_status');\r\n    }\r\n    setLastFetchStatus(status) {\r\n        return this.set('last_fetch_status', status);\r\n    }\r\n    // This is comparable to a cache entry timestamp. If we need to expire other data, we could\r\n    // consider adding timestamp to all storage records and an optional max age arg to getters.\r\n    getLastSuccessfulFetchTimestampMillis() {\r\n        return this.get('last_successful_fetch_timestamp_millis');\r\n    }\r\n    setLastSuccessfulFetchTimestampMillis(timestamp) {\r\n        return this.set('last_successful_fetch_timestamp_millis', timestamp);\r\n    }\r\n    getLastSuccessfulFetchResponse() {\r\n        return this.get('last_successful_fetch_response');\r\n    }\r\n    setLastSuccessfulFetchResponse(response) {\r\n        return this.set('last_successful_fetch_response', response);\r\n    }\r\n    getActiveConfig() {\r\n        return this.get('active_config');\r\n    }\r\n    setActiveConfig(config) {\r\n        return this.set('active_config', config);\r\n    }\r\n    getActiveConfigEtag() {\r\n        return this.get('active_config_etag');\r\n    }\r\n    setActiveConfigEtag(etag) {\r\n        return this.set('active_config_etag', etag);\r\n    }\r\n    getThrottleMetadata() {\r\n        return this.get('throttle_metadata');\r\n    }\r\n    setThrottleMetadata(metadata) {\r\n        return this.set('throttle_metadata', metadata);\r\n    }\r\n    deleteThrottleMetadata() {\r\n        return this.delete('throttle_metadata');\r\n    }\r\n    async get(key) {\r\n        const db = await this.openDbPromise;\r\n        return new Promise((resolve, reject) => {\r\n            const transaction = db.transaction([APP_NAMESPACE_STORE], 'readonly');\r\n            const objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\r\n            const compositeKey = this.createCompositeKey(key);\r\n            try {\r\n                const request = objectStore.get(compositeKey);\r\n                request.onerror = event => {\r\n                    reject(toFirebaseError(event, \"storage-get\" /* STORAGE_GET */));\r\n                };\r\n                request.onsuccess = event => {\r\n                    const result = event.target.result;\r\n                    if (result) {\r\n                        resolve(result.value);\r\n                    }\r\n                    else {\r\n                        resolve(undefined);\r\n                    }\r\n                };\r\n            }\r\n            catch (e) {\r\n                reject(ERROR_FACTORY.create(\"storage-get\" /* STORAGE_GET */, {\r\n                    originalErrorMessage: e && e.message\r\n                }));\r\n            }\r\n        });\r\n    }\r\n    async set(key, value) {\r\n        const db = await this.openDbPromise;\r\n        return new Promise((resolve, reject) => {\r\n            const transaction = db.transaction([APP_NAMESPACE_STORE], 'readwrite');\r\n            const objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\r\n            const compositeKey = this.createCompositeKey(key);\r\n            try {\r\n                const request = objectStore.put({\r\n                    compositeKey,\r\n                    value\r\n                });\r\n                request.onerror = (event) => {\r\n                    reject(toFirebaseError(event, \"storage-set\" /* STORAGE_SET */));\r\n                };\r\n                request.onsuccess = () => {\r\n                    resolve();\r\n                };\r\n            }\r\n            catch (e) {\r\n                reject(ERROR_FACTORY.create(\"storage-set\" /* STORAGE_SET */, {\r\n                    originalErrorMessage: e && e.message\r\n                }));\r\n            }\r\n        });\r\n    }\r\n    async delete(key) {\r\n        const db = await this.openDbPromise;\r\n        return new Promise((resolve, reject) => {\r\n            const transaction = db.transaction([APP_NAMESPACE_STORE], 'readwrite');\r\n            const objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\r\n            const compositeKey = this.createCompositeKey(key);\r\n            try {\r\n                const request = objectStore.delete(compositeKey);\r\n                request.onerror = (event) => {\r\n                    reject(toFirebaseError(event, \"storage-delete\" /* STORAGE_DELETE */));\r\n                };\r\n                request.onsuccess = () => {\r\n                    resolve();\r\n                };\r\n            }\r\n            catch (e) {\r\n                reject(ERROR_FACTORY.create(\"storage-delete\" /* STORAGE_DELETE */, {\r\n                    originalErrorMessage: e && e.message\r\n                }));\r\n            }\r\n        });\r\n    }\r\n    // Facilitates composite key functionality (which is unsupported in IE).\r\n    createCompositeKey(key) {\r\n        return [this.appId, this.appName, this.namespace, key].join();\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A memory cache layer over storage to support the SDK's synchronous read requirements.\r\n */\r\nclass StorageCache {\r\n    constructor(storage) {\r\n        this.storage = storage;\r\n    }\r\n    /**\r\n     * Memory-only getters\r\n     */\r\n    getLastFetchStatus() {\r\n        return this.lastFetchStatus;\r\n    }\r\n    getLastSuccessfulFetchTimestampMillis() {\r\n        return this.lastSuccessfulFetchTimestampMillis;\r\n    }\r\n    getActiveConfig() {\r\n        return this.activeConfig;\r\n    }\r\n    /**\r\n     * Read-ahead getter\r\n     */\r\n    async loadFromStorage() {\r\n        const lastFetchStatusPromise = this.storage.getLastFetchStatus();\r\n        const lastSuccessfulFetchTimestampMillisPromise = this.storage.getLastSuccessfulFetchTimestampMillis();\r\n        const activeConfigPromise = this.storage.getActiveConfig();\r\n        // Note:\r\n        // 1. we consistently check for undefined to avoid clobbering defined values\r\n        //   in memory\r\n        // 2. we defer awaiting to improve readability, as opposed to destructuring\r\n        //   a Promise.all result, for example\r\n        const lastFetchStatus = await lastFetchStatusPromise;\r\n        if (lastFetchStatus) {\r\n            this.lastFetchStatus = lastFetchStatus;\r\n        }\r\n        const lastSuccessfulFetchTimestampMillis = await lastSuccessfulFetchTimestampMillisPromise;\r\n        if (lastSuccessfulFetchTimestampMillis) {\r\n            this.lastSuccessfulFetchTimestampMillis = lastSuccessfulFetchTimestampMillis;\r\n        }\r\n        const activeConfig = await activeConfigPromise;\r\n        if (activeConfig) {\r\n            this.activeConfig = activeConfig;\r\n        }\r\n    }\r\n    /**\r\n     * Write-through setters\r\n     */\r\n    setLastFetchStatus(status) {\r\n        this.lastFetchStatus = status;\r\n        return this.storage.setLastFetchStatus(status);\r\n    }\r\n    setLastSuccessfulFetchTimestampMillis(timestampMillis) {\r\n        this.lastSuccessfulFetchTimestampMillis = timestampMillis;\r\n        return this.storage.setLastSuccessfulFetchTimestampMillis(timestampMillis);\r\n    }\r\n    setActiveConfig(activeConfig) {\r\n        this.activeConfig = activeConfig;\r\n        return this.storage.setActiveConfig(activeConfig);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerRemoteConfig() {\r\n    _registerComponent(new Component(RC_COMPONENT_NAME, remoteConfigFactory, \"PUBLIC\" /* PUBLIC */).setMultipleInstances(true));\r\n    registerVersion(name, version);\r\n    function remoteConfigFactory(container, { instanceIdentifier: namespace }) {\r\n        /* Dependencies */\r\n        // getImmediate for FirebaseApp will always succeed\r\n        const app = container.getProvider('app').getImmediate();\r\n        // The following call will always succeed because rc has `import '@firebase/installations'`\r\n        const installations = container\r\n            .getProvider('installations-internal')\r\n            .getImmediate();\r\n        // Guards against the SDK being used in non-browser environments.\r\n        if (typeof window === 'undefined') {\r\n            throw ERROR_FACTORY.create(\"registration-window\" /* REGISTRATION_WINDOW */);\r\n        }\r\n        // Normalizes optional inputs.\r\n        const { projectId, apiKey, appId } = app.options;\r\n        if (!projectId) {\r\n            throw ERROR_FACTORY.create(\"registration-project-id\" /* REGISTRATION_PROJECT_ID */);\r\n        }\r\n        if (!apiKey) {\r\n            throw ERROR_FACTORY.create(\"registration-api-key\" /* REGISTRATION_API_KEY */);\r\n        }\r\n        if (!appId) {\r\n            throw ERROR_FACTORY.create(\"registration-app-id\" /* REGISTRATION_APP_ID */);\r\n        }\r\n        namespace = namespace || 'firebase';\r\n        const storage = new Storage(appId, app.name, namespace);\r\n        const storageCache = new StorageCache(storage);\r\n        const logger = new Logger(name);\r\n        // Sets ERROR as the default log level.\r\n        // See RemoteConfig#setLogLevel for corresponding normalization to ERROR log level.\r\n        logger.logLevel = LogLevel.ERROR;\r\n        const restClient = new RestClient(installations, \r\n        // Uses the JS SDK version, by which the RC package version can be deduced, if necessary.\r\n        SDK_VERSION, namespace, projectId, apiKey, appId);\r\n        const retryingClient = new RetryingClient(restClient, storage);\r\n        const cachingClient = new CachingClient(retryingClient, storage, storageCache, logger);\r\n        const remoteConfigInstance = new RemoteConfig(app, cachingClient, storageCache, storage, logger);\r\n        // Starts warming cache.\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        ensureInitialized(remoteConfigInstance);\r\n        return remoteConfigInstance;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// This API is put in a separate file, so we can stub fetchConfig and activate in tests.\r\n// It's not possible to stub standalone functions from the same module.\r\n/**\r\n *\r\n * Performs fetch and activate operations, as a convenience.\r\n *\r\n * @param remoteConfig - The {@link RemoteConfig} instance.\r\n *\r\n * @returns A `Promise` which resolves to true if the current call activated the fetched configs.\r\n * If the fetched configs were already activated, the `Promise` will resolve to false.\r\n *\r\n * @public\r\n */\r\nasync function fetchAndActivate(remoteConfig) {\r\n    remoteConfig = getModularInstance(remoteConfig);\r\n    await fetchConfig(remoteConfig);\r\n    return activate(remoteConfig);\r\n}\n\n/**\r\n * Firebase Remote Config\r\n *\r\n * @packageDocumentation\r\n */\r\n/** register component and version */\r\nregisterRemoteConfig();\n\nexport { activate, ensureInitialized, fetchAndActivate, fetchConfig, getAll, getBoolean, getNumber, getRemoteConfig, getString, getValue, setLogLevel };\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.idb = {}));\n}(this, function (exports) { 'use strict';\n\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      // Don't create iterateKeyCursor if openKeyCursor doesn't exist.\n      if (!(funcName in Constructor.prototype)) return;\n\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  function openDb(name, version, upgradeCallback) {\n    var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n    var request = p.request;\n\n    if (request) {\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n    }\n\n    return p.then(function(db) {\n      return new DB(db);\n    });\n  }\n\n  function deleteDb(name) {\n    return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n  }\n\n  exports.openDb = openDb;\n  exports.deleteDb = deleteDb;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"],"names":["getApp","_getProvider","_registerComponent","registerVersion","Component","ErrorFactory","FirebaseError","openDb","name","version","PENDING_TIMEOUT_MS","PACKAGE_VERSION","INTERNAL_AUTH_VERSION","INSTALLATIONS_API_URL","TOKEN_EXPIRATION_BUFFER","SERVICE","SERVICE_NAME","ERROR_DESCRIPTION_MAP","ERROR_FACTORY","isServerError","error","code","includes","getInstallationsEndpoint","projectId","extractAuthTokenInfoFromResponse","response","token","requestStatus","expiresIn","getExpiresInFromResponseExpiresIn","creationTime","Date","now","getErrorFromResponse","requestName","responseJson","json","errorData","create","serverCode","serverMessage","message","serverStatus","status","getHeaders","apiKey","Headers","Accept","getHeadersWithAuth","appConfig","refreshToken","headers","append","getAuthorizationHeader","retryIfServerError","fn","result","responseExpiresIn","Number","replace","createInstallationRequest","fid","endpoint","body","authVersion","appId","sdkVersion","request","method","JSON","stringify","fetch","ok","responseValue","registeredInstallationEntry","registrationStatus","authToken","sleep","ms","Promise","resolve","setTimeout","bufferToBase64UrlSafe","array","b64","btoa","String","fromCharCode","VALID_FID_PATTERN","INVALID_FID","generateFid","fidByteArray","Uint8Array","crypto","self","msCrypto","getRandomValues","encode","test","_a","b64String","substr","getKey","appName","fidChangeCallbacks","Map","fidChanged","key","callFidChangeCallbacks","broadcastFidChange","addCallback","callback","getBroadcastChannel","callbackSet","get","Set","set","add","removeCallback","delete","size","closeBroadcastChannel","callbacks","channel","postMessage","broadcastChannel","BroadcastChannel","onmessage","e","data","close","DATABASE_NAME","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","getDbPromise","upgradeDB","oldVersion","createObjectStore","value","db","tx","transaction","objectStore","oldValue","put","complete","remove","update","updateFn","store","newValue","undefined","getInstallationEntry","registrationPromise","installationEntry","oldEntry","updateOrCreateInstallationEntry","entryWithPromise","triggerRegistrationIfNecessary","entry","clearTimedOutRequest","navigator","onLine","registrationPromiseWithError","reject","inProgressEntry","registrationTime","registerInstallation","waitUntilFidRegistration","customData","updateInstallationRequest","hasInstallationRequestTimedOut","generateAuthTokenRequest","platformLoggerProvider","getGenerateAuthTokenEndpoint","platformLogger","getImmediate","optional","getPlatformInfoString","installation","completedAuthToken","refreshAuthToken","installations","forceRefresh","tokenPromise","isEntryRegistered","oldAuthToken","isAuthTokenValid","waitUntilAuthTokenRequest","makeAuthTokenRequestInProgressEntry","fetchAuthTokenFromServer","updateAuthTokenRequest","hasAuthTokenRequestTimedOut","Object","assign","updatedInstallationEntry","isAuthTokenExpired","inProgressAuthToken","requestTime","getId","installationsImpl","catch","console","getToken","completeInstallationRegistration","deleteInstallationRequest","getDeleteEndpoint","deleteInstallations","onIdChange","getInstallations","app","extractAppConfig","options","getMissingValueError","configKeys","keyName","valueName","INSTALLATIONS_NAME","INSTALLATIONS_NAME_INTERNAL","publicFactory","container","getProvider","_delete","internalFactory","installationsInternal","registerInstallations","SDK_VERSION","LogLevel","Logger","getModularInstance","calculateBackoffMillis","RemoteConfigAbortSignal","constructor","listeners","addEventListener","listener","push","abort","forEach","RC_COMPONENT_NAME","hasErrorCode","errorCode","indexOf","DEFAULT_VALUE_FOR_BOOLEAN","DEFAULT_VALUE_FOR_STRING","DEFAULT_VALUE_FOR_NUMBER","BOOLEAN_TRUTHY_VALUES","Value","_source","_value","asString","asBoolean","toLowerCase","asNumber","num","isNaN","getSource","getRemoteConfig","rcProvider","activate","remoteConfig","rc","lastSuccessfulFetchResponse","activeConfigEtag","all","_storage","getLastSuccessfulFetchResponse","getActiveConfigEtag","config","eTag","_storageCache","setActiveConfig","setActiveConfigEtag","ensureInitialized","_initializePromise","loadFromStorage","then","_isInitializationComplete","fetchConfig","abortSignal","settings","fetchTimeoutMillis","_client","cacheMaxAgeMillis","minimumFetchIntervalMillis","signal","setLastFetchStatus","lastFetchStatus","getAll","getAllKeys","getActiveConfig","defaultConfig","reduce","allConfigs","getValue","getBoolean","getNumber","getString","_logger","debug","activeConfig","setLogLevel","logLevel","DEBUG","SILENT","ERROR","obj1","obj2","keys","CachingClient","client","storage","storageCache","logger","isCachedDataFresh","lastSuccessfulFetchTimestampMillis","cacheAgeMillis","getLastSuccessfulFetchTimestampMillis","storageOperations","setLastSuccessfulFetchTimestampMillis","setLastSuccessfulFetchResponse","getUserLanguage","navigatorLanguage","languages","language","RestClient","firebaseInstallations","namespace","installationId","installationToken","urlBase","window","FIREBASE_REMOTE_CONFIG_URL_BASE","url","requestBody","sdk_version","app_instance_id","app_instance_id_token","app_id","language_code","fetchPromise","timeoutPromise","_resolve","Error","race","originalError","originalErrorMessage","responseEtag","state","responseBody","httpStatus","setAbortableTimeout","throttleEndTimeMillis","backoffMillis","Math","max","timeout","clearTimeout","isRetriableError","RetryingClient","throttleMetadata","getThrottleMetadata","backoffCount","attemptFetch","deleteThrottleMetadata","setThrottleMetadata","DEFAULT_FETCH_TIMEOUT_MILLIS","DEFAULT_CACHE_MAX_AGE_MILLIS","RemoteConfig","fetchTimeMillis","getLastFetchStatus","toFirebaseError","event","target","APP_NAMESPACE_STORE","DB_NAME","DB_VERSION","openDatabase","indexedDB","open","onerror","onsuccess","onupgradeneeded","keyPath","Storage","openDbPromise","timestamp","etag","metadata","compositeKey","createCompositeKey","join","StorageCache","lastFetchStatusPromise","lastSuccessfulFetchTimestampMillisPromise","activeConfigPromise","timestampMillis","registerRemoteConfig","remoteConfigFactory","setMultipleInstances","instanceIdentifier","restClient","retryingClient","cachingClient","remoteConfigInstance","fetchAndActivate"],"sourceRoot":"webpack:///"}