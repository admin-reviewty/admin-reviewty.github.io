{"version":3,"file":"node_modules_firebase_compat_remote-config_dist_index_esm_js.js","mappings":";;;;;;;;;;;;;AAA4C;AACI;AACsH;;AAEtK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iEAAQ;AACvB;AACA;AACA,eAAe,0EAAiB;AAChC;AACA;AACA,kBAAkB,sCAAsC;AACxD,QAAQ,sCAAsC;AAC9C,QAAQ,oCAAoC;AAC5C;AACA;AACA,eAAe,oEAAW;AAC1B;AACA;AACA,eAAe,yEAAgB;AAC/B;AACA;AACA,eAAe,+DAAM;AACrB;AACA;AACA,eAAe,mEAAU;AACzB;AACA;AACA,eAAe,kEAAS;AACxB;AACA;AACA,eAAe,kEAAS;AACxB;AACA;AACA,eAAe,iEAAQ;AACvB;AACA;AACA;AACA;AACA,QAAQ,oEAAW;AACnB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,0DAAS;AAC7D;AACA;AACA,0CAA0C,+BAA+B;AACzE;AACA,kEAAkE,KAAK;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,2BAA2B,yDAAQ;;;;;;;;;;;;;ACjHK","sources":["./node_modules/@firebase/remote-config-compat/dist/index.esm2017.js","./node_modules/firebase/compat/remote-config/dist/index.esm.js"],"sourcesContent":["import firebase from '@firebase/app-compat';\nimport { Component } from '@firebase/component';\nimport { activate, ensureInitialized, fetchConfig, fetchAndActivate, getAll, getBoolean, getNumber, getString, getValue, setLogLevel } from '@firebase/remote-config';\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass RemoteConfigCompatImpl {\r\n    constructor(app, _delegate) {\r\n        this.app = app;\r\n        this._delegate = _delegate;\r\n    }\r\n    get defaultConfig() {\r\n        return this._delegate.defaultConfig;\r\n    }\r\n    set defaultConfig(value) {\r\n        this._delegate.defaultConfig = value;\r\n    }\r\n    get fetchTimeMillis() {\r\n        return this._delegate.fetchTimeMillis;\r\n    }\r\n    get lastFetchStatus() {\r\n        return this._delegate.lastFetchStatus;\r\n    }\r\n    get settings() {\r\n        return this._delegate.settings;\r\n    }\r\n    set settings(value) {\r\n        this._delegate.settings = value;\r\n    }\r\n    activate() {\r\n        return activate(this._delegate);\r\n    }\r\n    ensureInitialized() {\r\n        return ensureInitialized(this._delegate);\r\n    }\r\n    /**\r\n     * @throws a {@link ErrorCode.FETCH_CLIENT_TIMEOUT} if the request takes longer than\r\n     * {@link Settings.fetchTimeoutInSeconds} or\r\n     * {@link DEFAULT_FETCH_TIMEOUT_SECONDS}.\r\n     */\r\n    fetch() {\r\n        return fetchConfig(this._delegate);\r\n    }\r\n    fetchAndActivate() {\r\n        return fetchAndActivate(this._delegate);\r\n    }\r\n    getAll() {\r\n        return getAll(this._delegate);\r\n    }\r\n    getBoolean(key) {\r\n        return getBoolean(this._delegate, key);\r\n    }\r\n    getNumber(key) {\r\n        return getNumber(this._delegate, key);\r\n    }\r\n    getString(key) {\r\n        return getString(this._delegate, key);\r\n    }\r\n    getValue(key) {\r\n        return getValue(this._delegate, key);\r\n    }\r\n    // Based on packages/firestore/src/util/log.ts but not static because we need per-instance levels\r\n    // to differentiate 2p and 3p use-cases.\r\n    setLogLevel(logLevel) {\r\n        setLogLevel(this._delegate, logLevel);\r\n    }\r\n}\n\nconst name = \"@firebase/remote-config-compat\";\nconst version = \"0.1.0\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerRemoteConfigCompat(firebaseInstance) {\r\n    firebaseInstance.INTERNAL.registerComponent(new Component('remoteConfig-compat', remoteConfigFactory, \"PUBLIC\" /* PUBLIC */).setMultipleInstances(true));\r\n    firebaseInstance.registerVersion(name, version);\r\n}\r\nfunction remoteConfigFactory(container, { instanceIdentifier: namespace }) {\r\n    const app = container.getProvider('app-compat').getImmediate();\r\n    // The following call will always succeed because rc `import {...} from '@firebase/remote-config'`\r\n    const remoteConfig = container.getProvider('remote-config').getImmediate({\r\n        identifier: namespace\r\n    });\r\n    return new RemoteConfigCompatImpl(app, remoteConfig);\r\n}\r\nregisterRemoteConfigCompat(firebase);\n","import '@firebase/remote-config-compat';\n"],"names":[],"sourceRoot":"webpack:///"}