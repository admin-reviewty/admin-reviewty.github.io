{"version":3,"file":"default-node_modules_ng-zorro-antd___ivy_ngcc___fesm2015_ng-zorro-antd-radio_js.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAA8L;AAC3J;AAC4B;AACC;AAClB;AACH;AACY;AACN;AACF;;AAE/C;AACA;AACA;AACA;AACwC;AACI;AACA;;AAE5C;AACA;AACA;AACA;AACA;AACA,2EAA2E;AAC3E,4CAA4C,+DAAwB,GAAG,wEAAwE;;AAE/I;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,+CAAa;AAC1C,4BAA4B,yCAAO;AACnC,6BAA6B,+CAAa;AAC1C,yBAAyB,+CAAa;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D,qCAAqC,gEAAyB,GAAG,qDAAqD;;AAEtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,yCAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,yDAAS;AACpD;AACA;AACA;AACA;AACA,SAAS;AACT,0CAA0C,yDAAS;AACnD;AACA,SAAS;AACT,uFAAuF,yDAAS;AAChG;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB,qBAAqB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE,wCAAwC,+DAAwB,CAAC,4DAAwB,GAAG,+DAAwB,kBAAkB,+DAAwB,CAAC,qDAAiB,GAAG,+DAAwB,CAAC,6DAAqB;AAC1S,2CAA2C,+DAAwB,GAAG,gJAAgJ;AACtN,QAAQ,yDAAkB;AAC1B,OAAO,YAAY,8FAA8F,yCAAyC,gEAAyB;AACnL;AACA;AACA,yBAAyB,6DAAiB;AAC1C,6BAA6B,yDAAU;AACvC;AACA;AACA,YAAY,kEAA2B,4GAA4G;AACnJ,QAAQ,6DAAsB;AAC9B,QAAQ,0DAAmB;AAC3B,OAAO,wCAAwC;AAC/C;AACA,MAAM,MAAM,4DAAiB,EAAE;AAC/B,MAAM,sBAAsB;AAC5B,MAAM,MAAM,qDAAU,EAAE;AACxB,MAAM,MAAM,6DAAc,iBAAiB,MAAM,mDAAQ,EAAE;AAC3D;AACA;AACA,mBAAmB,MAAM,gDAAK,EAAE;AAChC,sBAAsB,MAAM,gDAAK,EAAE;AACnC,eAAe,MAAM,gDAAK,EAAE;AAC5B,eAAe,MAAM,gDAAK,EAAE;AAC5B;AACA,iDAAU;AACV,IAAI,qEAAY;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,yCAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,yDAAS;AACpD;AACA;AACA,aAAa;AACb,+CAA+C,yDAAS;AACxD;AACA;AACA,aAAa;AACb,+CAA+C,yDAAS;AACxD;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,kBAAkB,yDAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,uFAAuF,yDAAS;AAChG;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,mCAAmC,+DAAwB,CAAC,qDAAiB,GAAG,+DAAwB,CAAC,4DAAwB,GAAG,+DAAwB,CAAC,2DAAmB,GAAG,+DAAwB,CAAC,6DAAqB,MAAM,+DAAwB,qBAAqB,+DAAwB;AAC3W,sCAAsC,+DAAwB,GAAG,8IAA8I;AAC/M,QAAQ,yDAAkB;AAC1B,MAAM;AACN;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,OAAO,gFAAgF;AACvF,QAAQ,wDAAiB,uEAAuE,iCAAiC;AACjI,MAAM;AACN,QAAQ,yDAAkB;AAC1B,OAAO,YAAY,0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","sources":["./node_modules/ng-zorro-antd/__ivy_ngcc__/fesm2015/ng-zorro-antd-radio.js"],"sourcesContent":["import { Directive, Injectable, Component, ViewEncapsulation, ChangeDetectionStrategy, forwardRef, ChangeDetectorRef, ElementRef, Optional, Input, ViewChild, NgModule } from '@angular/core';\nimport { __decorate } from 'tslib';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { ReplaySubject, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { CommonModule } from '@angular/common';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/a11y';\n\nconst _c0 = [\"*\"];\nconst _c1 = [\"inputElement\"];\nconst _c2 = [\"nz-radio\", \"\"];\nclass NzRadioButtonDirective {\n}\nNzRadioButtonDirective.ɵfac = function NzRadioButtonDirective_Factory(t) { return new (t || NzRadioButtonDirective)(); };\nNzRadioButtonDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: NzRadioButtonDirective, selectors: [[\"\", \"nz-radio-button\", \"\"]] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzRadioService {\n    constructor() {\n        this.selected$ = new ReplaySubject(1);\n        this.touched$ = new Subject();\n        this.disabled$ = new ReplaySubject(1);\n        this.name$ = new ReplaySubject(1);\n    }\n    touch() {\n        this.touched$.next();\n    }\n    select(value) {\n        this.selected$.next(value);\n    }\n    setDisabled(value) {\n        this.disabled$.next(value);\n    }\n    setName(value) {\n        this.name$.next(value);\n    }\n}\nNzRadioService.ɵfac = function NzRadioService_Factory(t) { return new (t || NzRadioService)(); };\nNzRadioService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: NzRadioService, factory: NzRadioService.ɵfac });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzRadioGroupComponent {\n    constructor(cdr, nzRadioService, elementRef, directionality) {\n        this.cdr = cdr;\n        this.nzRadioService = nzRadioService;\n        this.elementRef = elementRef;\n        this.directionality = directionality;\n        this.value = null;\n        this.destroy$ = new Subject();\n        this.onChange = () => { };\n        this.onTouched = () => { };\n        this.nzDisabled = false;\n        this.nzButtonStyle = 'outline';\n        this.nzSize = 'default';\n        this.nzName = null;\n        this.dir = 'ltr';\n        // TODO: move to host after View Engine deprecation\n        this.elementRef.nativeElement.classList.add('ant-radio-group');\n    }\n    ngOnInit() {\n        var _a;\n        this.nzRadioService.selected$.pipe(takeUntil(this.destroy$)).subscribe(value => {\n            if (this.value !== value) {\n                this.value = value;\n                this.onChange(this.value);\n            }\n        });\n        this.nzRadioService.touched$.pipe(takeUntil(this.destroy$)).subscribe(() => {\n            Promise.resolve().then(() => this.onTouched());\n        });\n        (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe((direction) => {\n            this.dir = direction;\n            this.cdr.detectChanges();\n        });\n        this.dir = this.directionality.value;\n    }\n    ngOnChanges(changes) {\n        const { nzDisabled, nzName } = changes;\n        if (nzDisabled) {\n            this.nzRadioService.setDisabled(this.nzDisabled);\n        }\n        if (nzName) {\n            this.nzRadioService.setName(this.nzName);\n        }\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    writeValue(value) {\n        this.value = value;\n        this.nzRadioService.select(value);\n        this.cdr.markForCheck();\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    setDisabledState(isDisabled) {\n        this.nzDisabled = isDisabled;\n        this.nzRadioService.setDisabled(isDisabled);\n        this.cdr.markForCheck();\n    }\n}\nNzRadioGroupComponent.ɵfac = function NzRadioGroupComponent_Factory(t) { return new (t || NzRadioGroupComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(NzRadioService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8)); };\nNzRadioGroupComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NzRadioGroupComponent, selectors: [[\"nz-radio-group\"]], hostVars: 8, hostBindings: function NzRadioGroupComponent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"ant-radio-group-large\", ctx.nzSize === \"large\")(\"ant-radio-group-small\", ctx.nzSize === \"small\")(\"ant-radio-group-solid\", ctx.nzButtonStyle === \"solid\")(\"ant-radio-group-rtl\", ctx.dir === \"rtl\");\n    } }, inputs: { nzDisabled: \"nzDisabled\", nzButtonStyle: \"nzButtonStyle\", nzSize: \"nzSize\", nzName: \"nzName\" }, exportAs: [\"nzRadioGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            NzRadioService,\n            {\n                provide: NG_VALUE_ACCESSOR,\n                useExisting: forwardRef(() => NzRadioGroupComponent),\n                multi: true\n            }\n        ]), ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function NzRadioGroupComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2, changeDetection: 0 });\nNzRadioGroupComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: NzRadioService },\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nNzRadioGroupComponent.propDecorators = {\n    nzDisabled: [{ type: Input }],\n    nzButtonStyle: [{ type: Input }],\n    nzSize: [{ type: Input }],\n    nzName: [{ type: Input }]\n};\n__decorate([\n    InputBoolean()\n], NzRadioGroupComponent.prototype, \"nzDisabled\", void 0);\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzRadioComponent {\n    constructor(elementRef, cdr, focusMonitor, directionality, nzRadioService, nzRadioButtonDirective) {\n        this.elementRef = elementRef;\n        this.cdr = cdr;\n        this.focusMonitor = focusMonitor;\n        this.directionality = directionality;\n        this.nzRadioService = nzRadioService;\n        this.nzRadioButtonDirective = nzRadioButtonDirective;\n        this.isNgModel = false;\n        this.destroy$ = new Subject();\n        this.isChecked = false;\n        this.name = null;\n        this.isRadioButton = !!this.nzRadioButtonDirective;\n        this.onChange = () => { };\n        this.onTouched = () => { };\n        this.nzValue = null;\n        this.nzDisabled = false;\n        this.nzAutoFocus = false;\n        this.dir = 'ltr';\n    }\n    onHostClick(event) {\n        /** prevent label click triggered twice. **/\n        event.stopPropagation();\n        event.preventDefault();\n        if (!this.nzDisabled && !this.isChecked) {\n            if (this.nzRadioService) {\n                this.nzRadioService.select(this.nzValue);\n            }\n            if (this.isNgModel) {\n                this.isChecked = true;\n                this.onChange(true);\n            }\n        }\n    }\n    focus() {\n        this.focusMonitor.focusVia(this.inputElement, 'keyboard');\n    }\n    blur() {\n        this.inputElement.nativeElement.blur();\n    }\n    setDisabledState(disabled) {\n        this.nzDisabled = disabled;\n        this.cdr.markForCheck();\n    }\n    writeValue(value) {\n        this.isChecked = value;\n        this.cdr.markForCheck();\n    }\n    registerOnChange(fn) {\n        this.isNgModel = true;\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    ngOnInit() {\n        var _a;\n        if (this.nzRadioService) {\n            this.nzRadioService.name$.pipe(takeUntil(this.destroy$)).subscribe(name => {\n                this.name = name;\n                this.cdr.markForCheck();\n            });\n            this.nzRadioService.disabled$.pipe(takeUntil(this.destroy$)).subscribe(disabled => {\n                this.nzDisabled = disabled;\n                this.cdr.markForCheck();\n            });\n            this.nzRadioService.selected$.pipe(takeUntil(this.destroy$)).subscribe(value => {\n                this.isChecked = this.nzValue === value;\n                this.cdr.markForCheck();\n            });\n        }\n        this.focusMonitor\n            .monitor(this.elementRef, true)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(focusOrigin => {\n            if (!focusOrigin) {\n                Promise.resolve().then(() => this.onTouched());\n                if (this.nzRadioService) {\n                    this.nzRadioService.touch();\n                }\n            }\n        });\n        (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe((direction) => {\n            this.dir = direction;\n            this.cdr.detectChanges();\n        });\n        this.dir = this.directionality.value;\n    }\n    ngAfterViewInit() {\n        if (this.nzAutoFocus) {\n            this.focus();\n        }\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n        this.focusMonitor.stopMonitoring(this.elementRef);\n    }\n}\nNzRadioComponent.ɵfac = function NzRadioComponent_Factory(t) { return new (t || NzRadioComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(NzRadioService, 8), ɵngcc0.ɵɵdirectiveInject(NzRadioButtonDirective, 8)); };\nNzRadioComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NzRadioComponent, selectors: [[\"\", \"nz-radio\", \"\"], [\"\", \"nz-radio-button\", \"\"]], viewQuery: function NzRadioComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c1, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.inputElement = _t.first);\n    } }, hostVars: 16, hostBindings: function NzRadioComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function NzRadioComponent_click_HostBindingHandler($event) { return ctx.onHostClick($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"ant-radio-wrapper\", !ctx.isRadioButton)(\"ant-radio-button-wrapper\", ctx.isRadioButton)(\"ant-radio-wrapper-checked\", ctx.isChecked && !ctx.isRadioButton)(\"ant-radio-button-wrapper-checked\", ctx.isChecked && ctx.isRadioButton)(\"ant-radio-wrapper-disabled\", ctx.nzDisabled && !ctx.isRadioButton)(\"ant-radio-button-wrapper-disabled\", ctx.nzDisabled && ctx.isRadioButton)(\"ant-radio-wrapper-rtl\", !ctx.isRadioButton && ctx.dir === \"rtl\")(\"ant-radio-button-wrapper-rtl\", ctx.isRadioButton && ctx.dir === \"rtl\");\n    } }, inputs: { nzValue: \"nzValue\", nzDisabled: \"nzDisabled\", nzAutoFocus: \"nzAutoFocus\" }, exportAs: [\"nzRadio\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            {\n                provide: NG_VALUE_ACCESSOR,\n                useExisting: forwardRef(() => NzRadioComponent),\n                multi: true\n            }\n        ])], attrs: _c2, ngContentSelectors: _c0, decls: 6, vars: 24, consts: [[\"type\", \"radio\", 3, \"disabled\", \"checked\"], [\"inputElement\", \"\"]], template: function NzRadioComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"span\");\n        ɵngcc0.ɵɵelement(1, \"input\", 0, 1);\n        ɵngcc0.ɵɵelement(3, \"span\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"span\");\n        ɵngcc0.ɵɵprojection(5);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"ant-radio\", !ctx.isRadioButton)(\"ant-radio-checked\", ctx.isChecked && !ctx.isRadioButton)(\"ant-radio-disabled\", ctx.nzDisabled && !ctx.isRadioButton)(\"ant-radio-button\", ctx.isRadioButton)(\"ant-radio-button-checked\", ctx.isChecked && ctx.isRadioButton)(\"ant-radio-button-disabled\", ctx.nzDisabled && ctx.isRadioButton);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"ant-radio-input\", !ctx.isRadioButton)(\"ant-radio-button-input\", ctx.isRadioButton);\n        ɵngcc0.ɵɵproperty(\"disabled\", ctx.nzDisabled)(\"checked\", ctx.isChecked);\n        ɵngcc0.ɵɵattribute(\"autofocus\", ctx.nzAutoFocus ? \"autofocus\" : null)(\"name\", ctx.name);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"ant-radio-inner\", !ctx.isRadioButton)(\"ant-radio-button-inner\", ctx.isRadioButton);\n    } }, encapsulation: 2, changeDetection: 0 });\nNzRadioComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NzRadioService, decorators: [{ type: Optional }] },\n    { type: NzRadioButtonDirective, decorators: [{ type: Optional }] }\n];\nNzRadioComponent.propDecorators = {\n    inputElement: [{ type: ViewChild, args: ['inputElement', { static: false },] }],\n    nzValue: [{ type: Input }],\n    nzDisabled: [{ type: Input }],\n    nzAutoFocus: [{ type: Input }]\n};\n__decorate([\n    InputBoolean()\n], NzRadioComponent.prototype, \"nzDisabled\", void 0);\n__decorate([\n    InputBoolean()\n], NzRadioComponent.prototype, \"nzAutoFocus\", void 0);\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzRadioButtonDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[nz-radio-button]'\n            }]\n    }], null, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzRadioService, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzRadioGroupComponent, [{\n        type: Component,\n        args: [{\n                selector: 'nz-radio-group',\n                exportAs: 'nzRadioGroup',\n                preserveWhitespaces: false,\n                template: ` <ng-content></ng-content> `,\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [\n                    NzRadioService,\n                    {\n                        provide: NG_VALUE_ACCESSOR,\n                        useExisting: forwardRef(() => NzRadioGroupComponent),\n                        multi: true\n                    }\n                ],\n                host: {\n                    '[class.ant-radio-group-large]': `nzSize === 'large'`,\n                    '[class.ant-radio-group-small]': `nzSize === 'small'`,\n                    '[class.ant-radio-group-solid]': `nzButtonStyle === 'solid'`,\n                    '[class.ant-radio-group-rtl]': `dir === 'rtl'`\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: NzRadioService }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { nzDisabled: [{\n            type: Input\n        }], nzButtonStyle: [{\n            type: Input\n        }], nzSize: [{\n            type: Input\n        }], nzName: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzRadioComponent, [{\n        type: Component,\n        args: [{\n                selector: '[nz-radio],[nz-radio-button]',\n                exportAs: 'nzRadio',\n                preserveWhitespaces: false,\n                template: `\n    <span\n      [class.ant-radio]=\"!isRadioButton\"\n      [class.ant-radio-checked]=\"isChecked && !isRadioButton\"\n      [class.ant-radio-disabled]=\"nzDisabled && !isRadioButton\"\n      [class.ant-radio-button]=\"isRadioButton\"\n      [class.ant-radio-button-checked]=\"isChecked && isRadioButton\"\n      [class.ant-radio-button-disabled]=\"nzDisabled && isRadioButton\"\n    >\n      <input\n        #inputElement\n        type=\"radio\"\n        [attr.autofocus]=\"nzAutoFocus ? 'autofocus' : null\"\n        [class.ant-radio-input]=\"!isRadioButton\"\n        [class.ant-radio-button-input]=\"isRadioButton\"\n        [disabled]=\"nzDisabled\"\n        [checked]=\"isChecked\"\n        [attr.name]=\"name\"\n      />\n      <span [class.ant-radio-inner]=\"!isRadioButton\" [class.ant-radio-button-inner]=\"isRadioButton\"></span>\n    </span>\n    <span><ng-content></ng-content></span>\n  `,\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [\n                    {\n                        provide: NG_VALUE_ACCESSOR,\n                        useExisting: forwardRef(() => NzRadioComponent),\n                        multi: true\n                    }\n                ],\n                host: {\n                    '[class.ant-radio-wrapper]': '!isRadioButton',\n                    '[class.ant-radio-button-wrapper]': 'isRadioButton',\n                    '[class.ant-radio-wrapper-checked]': 'isChecked && !isRadioButton',\n                    '[class.ant-radio-button-wrapper-checked]': 'isChecked && isRadioButton',\n                    '[class.ant-radio-wrapper-disabled]': 'nzDisabled && !isRadioButton',\n                    '[class.ant-radio-button-wrapper-disabled]': 'nzDisabled && isRadioButton',\n                    '[class.ant-radio-wrapper-rtl]': `!isRadioButton && dir === 'rtl'`,\n                    '[class.ant-radio-button-wrapper-rtl]': `isRadioButton && dir === 'rtl'`,\n                    '(click)': 'onHostClick($event)'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.FocusMonitor }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: NzRadioService, decorators: [{\n                type: Optional\n            }] }, { type: NzRadioButtonDirective, decorators: [{\n                type: Optional\n            }] }]; }, { nzValue: [{\n            type: Input\n        }], nzDisabled: [{\n            type: Input\n        }], nzAutoFocus: [{\n            type: Input\n        }], inputElement: [{\n            type: ViewChild,\n            args: ['inputElement', { static: false }]\n        }] }); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzRadioModule {\n}\nNzRadioModule.ɵfac = function NzRadioModule_Factory(t) { return new (t || NzRadioModule)(); };\nNzRadioModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NzRadioModule });\nNzRadioModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[BidiModule, CommonModule, FormsModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzRadioModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule, CommonModule, FormsModule],\n                exports: [NzRadioComponent, NzRadioButtonDirective, NzRadioGroupComponent],\n                declarations: [NzRadioComponent, NzRadioButtonDirective, NzRadioGroupComponent]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzRadioModule, { declarations: function () { return [NzRadioComponent, NzRadioButtonDirective, NzRadioGroupComponent]; }, imports: function () { return [BidiModule, CommonModule, FormsModule]; }, exports: function () { return [NzRadioComponent, NzRadioButtonDirective, NzRadioGroupComponent]; } }); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzRadioButtonDirective, NzRadioComponent, NzRadioGroupComponent, NzRadioModule, NzRadioService };\n\n"],"names":[],"sourceRoot":"webpack:///"}